{"ast":null,"code":"import _objectSpread from \"C:/Users/nagam/Documents/GitHub/wms_client/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _assertThisInitialized from \"C:/Users/nagam/Documents/GitHub/wms_client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _get from \"C:/Users/nagam/Documents/GitHub/wms_client/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"C:/Users/nagam/Documents/GitHub/wms_client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _inherits from \"C:/Users/nagam/Documents/GitHub/wms_client/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"C:/Users/nagam/Documents/GitHub/wms_client/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _slicedToArray from \"C:/Users/nagam/Documents/GitHub/wms_client/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _defineProperty from \"C:/Users/nagam/Documents/GitHub/wms_client/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _createForOfIteratorHelper from \"C:/Users/nagam/Documents/GitHub/wms_client/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _toConsumableArray from \"C:/Users/nagam/Documents/GitHub/wms_client/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _classCallCheck from \"C:/Users/nagam/Documents/GitHub/wms_client/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/nagam/Documents/GitHub/wms_client/node_modules/@babel/runtime/helpers/esm/createClass.js\";\n/*!\n * Chart.js v4.0.1\n * https://www.chartjs.org\n * (c) 2022 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as _color, i as isObject, d as defaults, b as isArray, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as defined, s as sign, j as createContext, k as isNullOrUndef, _ as _arrayUnique, t as toRadians, T as TAU, m as toPercentage, n as toDimension, o as formatNumber, p as _angleBetween, H as HALF_PI, P as PI, q as _getStartAndCountOfVisiblePoints, w as _scaleRangesChanged, x as isNumber, y as _parseObjectDataRadialScale, z as getRelativePosition, A as _rlookupByKey, B as _lookupByKey, C as _isPointInArea, D as getAngleFromPoint, E as toPadding, F as each, G as _getMaximumSize, I as _getParentNode, J as readUsedSize, K as supportsEventListenerOptions, L as throttled, M as _isDomSupported, N as _factorize, O as finiteOrDefault, Q as callback, R as _addGrace, S as _limitValue, U as toDegrees, V as _measureText, W as _int16Range, X as _alignPixel, Y as clipArea, Z as renderText, $ as unclipArea, a0 as toFont, a1 as _toLeftRightCenter, a2 as _alignStartEnd, a3 as overrides, a4 as merge, a5 as _capitalize, a6 as descriptors, a7 as isFunction, a8 as _attachContext, a9 as _createResolver, aa as _descriptors, ab as mergeIf, ac as uid, ad as debounce, ae as retinaScale, af as clearCanvas, ag as setsEqual, ah as _elementsEqual, ai as _isClickEvent, aj as _isBetween, ak as _readValueToProps, al as _updateBezierControlPoints, am as _computeSegments, an as _boundSegments, ao as _steppedInterpolation, ap as _bezierInterpolation, aq as _pointInLine, ar as _steppedLineTo, as as _bezierCurveTo, at as drawPoint, au as addRoundedRectPath, av as toTRBL, aw as toTRBLCorners, ax as _boundSegment, ay as _normalizeAngle, az as getRtlAdapter, aA as overrideTextDirection, aB as _textX, aC as restoreTextDirection, aD as drawPointLegend, aE as distanceBetweenPoints, aF as noop, aG as _setMinAndMaxByKey, aH as niceNum, aI as almostWhole, aJ as almostEquals, aK as _decimalPlaces, aL as Ticks, aM as log10, aN as _longestText, aO as _filterBetween, aP as _lookup } from './chunks/helpers.segment.js';\nexport { aL as Ticks, d as defaults } from './chunks/helpers.segment.js';\nvar Animator = /*#__PURE__*/function () {\n  function Animator() {\n    _classCallCheck(this, Animator);\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n  _createClass(Animator, [{\n    key: \"_notify\",\n    value: function _notify(chart, anims, date, type) {\n      var callbacks = anims.listeners[type];\n      var numSteps = anims.duration;\n      callbacks.forEach(function (fn) {\n        return fn({\n          chart: chart,\n          initial: anims.initial,\n          numSteps: numSteps,\n          currentStep: Math.min(date - anims.start, numSteps)\n        });\n      });\n    }\n  }, {\n    key: \"_refresh\",\n    value: function _refresh() {\n      var _this = this;\n      if (this._request) {\n        return;\n      }\n      this._running = true;\n      this._request = requestAnimFrame.call(window, function () {\n        _this._update();\n        _this._request = null;\n        if (_this._running) {\n          _this._refresh();\n        }\n      });\n    }\n  }, {\n    key: \"_update\",\n    value: function _update() {\n      var _this2 = this;\n      var date = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : Date.now();\n      var remaining = 0;\n      this._charts.forEach(function (anims, chart) {\n        if (!anims.running || !anims.items.length) {\n          return;\n        }\n        var items = anims.items;\n        var i = items.length - 1;\n        var draw = false;\n        var item;\n        for (; i >= 0; --i) {\n          item = items[i];\n          if (item._active) {\n            if (item._total > anims.duration) {\n              anims.duration = item._total;\n            }\n            item.tick(date);\n            draw = true;\n          } else {\n            items[i] = items[items.length - 1];\n            items.pop();\n          }\n        }\n        if (draw) {\n          chart.draw();\n          _this2._notify(chart, anims, date, 'progress');\n        }\n        if (!items.length) {\n          anims.running = false;\n          _this2._notify(chart, anims, date, 'complete');\n          anims.initial = false;\n        }\n        remaining += items.length;\n      });\n      this._lastDate = date;\n      if (remaining === 0) {\n        this._running = false;\n      }\n    }\n  }, {\n    key: \"_getAnims\",\n    value: function _getAnims(chart) {\n      var charts = this._charts;\n      var anims = charts.get(chart);\n      if (!anims) {\n        anims = {\n          running: false,\n          initial: true,\n          items: [],\n          listeners: {\n            complete: [],\n            progress: []\n          }\n        };\n        charts.set(chart, anims);\n      }\n      return anims;\n    }\n  }, {\n    key: \"listen\",\n    value: function listen(chart, event, cb) {\n      this._getAnims(chart).listeners[event].push(cb);\n    }\n  }, {\n    key: \"add\",\n    value: function add(chart, items) {\n      var _this$_getAnims$items;\n      if (!items || !items.length) {\n        return;\n      }\n      (_this$_getAnims$items = this._getAnims(chart).items).push.apply(_this$_getAnims$items, _toConsumableArray(items));\n    }\n  }, {\n    key: \"has\",\n    value: function has(chart) {\n      return this._getAnims(chart).items.length > 0;\n    }\n  }, {\n    key: \"start\",\n    value: function start(chart) {\n      var anims = this._charts.get(chart);\n      if (!anims) {\n        return;\n      }\n      anims.running = true;\n      anims.start = Date.now();\n      anims.duration = anims.items.reduce(function (acc, cur) {\n        return Math.max(acc, cur._duration);\n      }, 0);\n      this._refresh();\n    }\n  }, {\n    key: \"running\",\n    value: function running(chart) {\n      if (!this._running) {\n        return false;\n      }\n      var anims = this._charts.get(chart);\n      if (!anims || !anims.running || !anims.items.length) {\n        return false;\n      }\n      return true;\n    }\n  }, {\n    key: \"stop\",\n    value: function stop(chart) {\n      var anims = this._charts.get(chart);\n      if (!anims || !anims.items.length) {\n        return;\n      }\n      var items = anims.items;\n      var i = items.length - 1;\n      for (; i >= 0; --i) {\n        items[i].cancel();\n      }\n      anims.items = [];\n      this._notify(chart, anims, Date.now(), 'complete');\n    }\n  }, {\n    key: \"remove\",\n    value: function remove(chart) {\n      return this._charts.delete(chart);\n    }\n  }]);\n  return Animator;\n}();\nvar animator = /* #__PURE__ */new Animator();\nvar transparent = 'transparent';\nvar interpolators = {\n  boolean: function boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  color: function color(from, to, factor) {\n    var c0 = _color(from || transparent);\n    var c1 = c0.valid && _color(to || transparent);\n    return c1 && c1.valid ? c1.mix(c0, factor).hexString() : to;\n  },\n  number: function number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\nvar Animation = /*#__PURE__*/function () {\n  function Animation(cfg, target, prop, to) {\n    _classCallCheck(this, Animation);\n    var currentValue = target[prop];\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    var from = resolve([cfg.from, currentValue, to]);\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n  _createClass(Animation, [{\n    key: \"active\",\n    value: function active() {\n      return this._active;\n    }\n  }, {\n    key: \"update\",\n    value: function update(cfg, to, date) {\n      if (this._active) {\n        this._notify(false);\n        var currentValue = this._target[this._prop];\n        var elapsed = date - this._start;\n        var remain = this._duration - elapsed;\n        this._start = date;\n        this._duration = Math.floor(Math.max(remain, cfg.duration));\n        this._total += elapsed;\n        this._loop = !!cfg.loop;\n        this._to = resolve([cfg.to, to, currentValue, cfg.from]);\n        this._from = resolve([cfg.from, currentValue, to]);\n      }\n    }\n  }, {\n    key: \"cancel\",\n    value: function cancel() {\n      if (this._active) {\n        this.tick(Date.now());\n        this._active = false;\n        this._notify(false);\n      }\n    }\n  }, {\n    key: \"tick\",\n    value: function tick(date) {\n      var elapsed = date - this._start;\n      var duration = this._duration;\n      var prop = this._prop;\n      var from = this._from;\n      var loop = this._loop;\n      var to = this._to;\n      var factor;\n      this._active = from !== to && (loop || elapsed < duration);\n      if (!this._active) {\n        this._target[prop] = to;\n        this._notify(true);\n        return;\n      }\n      if (elapsed < 0) {\n        this._target[prop] = from;\n        return;\n      }\n      factor = elapsed / duration % 2;\n      factor = loop && factor > 1 ? 2 - factor : factor;\n      factor = this._easing(Math.min(1, Math.max(0, factor)));\n      this._target[prop] = this._fn(from, to, factor);\n    }\n  }, {\n    key: \"wait\",\n    value: function wait() {\n      var promises = this._promises || (this._promises = []);\n      return new Promise(function (res, rej) {\n        promises.push({\n          res: res,\n          rej: rej\n        });\n      });\n    }\n  }, {\n    key: \"_notify\",\n    value: function _notify(resolved) {\n      var method = resolved ? 'res' : 'rej';\n      var promises = this._promises || [];\n      for (var i = 0; i < promises.length; i++) {\n        promises[i][method]();\n      }\n    }\n  }]);\n  return Animation;\n}();\nvar Animations = /*#__PURE__*/function () {\n  function Animations(chart, config) {\n    _classCallCheck(this, Animations);\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n  _createClass(Animations, [{\n    key: \"configure\",\n    value: function configure(config) {\n      if (!isObject(config)) {\n        return;\n      }\n      var animationOptions = Object.keys(defaults.animation);\n      var animatedProps = this._properties;\n      Object.getOwnPropertyNames(config).forEach(function (key) {\n        var cfg = config[key];\n        if (!isObject(cfg)) {\n          return;\n        }\n        var resolved = {};\n        var _iterator = _createForOfIteratorHelper(animationOptions),\n          _step;\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var option = _step.value;\n            resolved[option] = cfg[option];\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n        (isArray(cfg.properties) && cfg.properties || [key]).forEach(function (prop) {\n          if (prop === key || !animatedProps.has(prop)) {\n            animatedProps.set(prop, resolved);\n          }\n        });\n      });\n    }\n  }, {\n    key: \"_animateOptions\",\n    value: function _animateOptions(target, values) {\n      var newOptions = values.options;\n      var options = resolveTargetOptions(target, newOptions);\n      if (!options) {\n        return [];\n      }\n      var animations = this._createAnimations(options, newOptions);\n      if (newOptions.$shared) {\n        awaitAll(target.options.$animations, newOptions).then(function () {\n          target.options = newOptions;\n        }, function () {});\n      }\n      return animations;\n    }\n  }, {\n    key: \"_createAnimations\",\n    value: function _createAnimations(target, values) {\n      var animatedProps = this._properties;\n      var animations = [];\n      var running = target.$animations || (target.$animations = {});\n      var props = Object.keys(values);\n      var date = Date.now();\n      var i;\n      for (i = props.length - 1; i >= 0; --i) {\n        var prop = props[i];\n        if (prop.charAt(0) === '$') {\n          continue;\n        }\n        if (prop === 'options') {\n          animations.push.apply(animations, _toConsumableArray(this._animateOptions(target, values)));\n          continue;\n        }\n        var value = values[prop];\n        var animation = running[prop];\n        var cfg = animatedProps.get(prop);\n        if (animation) {\n          if (cfg && animation.active()) {\n            animation.update(cfg, value, date);\n            continue;\n          } else {\n            animation.cancel();\n          }\n        }\n        if (!cfg || !cfg.duration) {\n          target[prop] = value;\n          continue;\n        }\n        running[prop] = animation = new Animation(cfg, target, prop, value);\n        animations.push(animation);\n      }\n      return animations;\n    }\n  }, {\n    key: \"update\",\n    value: function update(target, values) {\n      if (this._properties.size === 0) {\n        Object.assign(target, values);\n        return;\n      }\n      var animations = this._createAnimations(target, values);\n      if (animations.length) {\n        animator.add(this._chart, animations);\n        return true;\n      }\n    }\n  }]);\n  return Animations;\n}();\nfunction awaitAll(animations, properties) {\n  var running = [];\n  var keys = Object.keys(properties);\n  for (var i = 0; i < keys.length; i++) {\n    var anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  var options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    target.options = options = Object.assign({}, options, {\n      $shared: false,\n      $animations: {}\n    });\n  }\n  return options;\n}\nfunction scaleClip(scale, allowedOverflow) {\n  var opts = scale && scale.options || {};\n  var reverse = opts.reverse;\n  var min = opts.min === undefined ? allowedOverflow : 0;\n  var max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  var x = scaleClip(xScale, allowedOverflow);\n  var y = scaleClip(yScale, allowedOverflow);\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\nfunction toClip(value) {\n  var t, r, b, l;\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l,\n    disabled: value === false\n  };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  var keys = [];\n  var metasets = chart._getSortedDatasetMetas(filterVisible);\n  var i, ilen;\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\nfunction _applyStack(stack, value, dsIndex) {\n  var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  var keys = stack.keys;\n  var singleMode = options.mode === 'single';\n  var i, ilen, datasetIndex, otherValue;\n  if (value === null) {\n    return;\n  }\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if (isNumberFinite(otherValue) && (singleMode || value === 0 || sign(value) === sign(otherValue))) {\n      value += otherValue;\n    }\n  }\n  return value;\n}\nfunction convertObjectDataToArray(data) {\n  var keys = Object.keys(data);\n  var adata = new Array(keys.length);\n  var i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      x: key,\n      y: data[key]\n    };\n  }\n  return adata;\n}\nfunction isStacked(scale, meta) {\n  var stacked = scale && scale.options.stacked;\n  return stacked || stacked === undefined && meta.stack !== undefined;\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n  return \"\".concat(indexScale.id, \".\").concat(valueScale.id, \".\").concat(meta.stack || meta.type);\n}\nfunction getUserBounds(scale) {\n  var _scale$getUserBounds = scale.getUserBounds(),\n    min = _scale$getUserBounds.min,\n    max = _scale$getUserBounds.max,\n    minDefined = _scale$getUserBounds.minDefined,\n    maxDefined = _scale$getUserBounds.maxDefined;\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  var subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n  var _iterator2 = _createForOfIteratorHelper(vScale.getMatchingVisibleMetas(type).reverse()),\n    _step2;\n  try {\n    for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n      var meta = _step2.value;\n      var value = stack[meta.index];\n      if (positive && value > 0 || !positive && value < 0) {\n        return meta.index;\n      }\n    }\n  } catch (err) {\n    _iterator2.e(err);\n  } finally {\n    _iterator2.f();\n  }\n  return null;\n}\nfunction updateStacks(controller, parsed) {\n  var chart = controller.chart,\n    meta = controller._cachedMeta;\n  var stacks = chart._stacks || (chart._stacks = {});\n  var iScale = meta.iScale,\n    vScale = meta.vScale,\n    datasetIndex = meta.index;\n  var iAxis = iScale.axis;\n  var vAxis = vScale.axis;\n  var key = getStackKey(iScale, vScale, meta);\n  var ilen = parsed.length;\n  var stack;\n  for (var i = 0; i < ilen; ++i) {\n    var item = parsed[i];\n    var _index = item[iAxis],\n      value = item[vAxis];\n    var itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, _index);\n    stack[datasetIndex] = value;\n    stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n    stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n  }\n}\nfunction getFirstScaleId(chart, axis) {\n  var scales = chart.scales;\n  return Object.keys(scales).filter(function (key) {\n    return scales[key].axis === axis;\n  }).shift();\n}\nfunction createDatasetContext(parent, index) {\n  return createContext(parent, {\n    active: false,\n    dataset: undefined,\n    datasetIndex: index,\n    index: index,\n    mode: 'default',\n    type: 'dataset'\n  });\n}\nfunction createDataContext(parent, index, element) {\n  return createContext(parent, {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element: element,\n    index: index,\n    mode: 'default',\n    type: 'data'\n  });\n}\nfunction clearStacks(meta, items) {\n  var datasetIndex = meta.controller.index;\n  var axis = meta.vScale && meta.vScale.axis;\n  if (!axis) {\n    return;\n  }\n  items = items || meta._parsed;\n  var _iterator3 = _createForOfIteratorHelper(items),\n    _step3;\n  try {\n    for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n      var parsed = _step3.value;\n      var stacks = parsed._stacks;\n      if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n        return;\n      }\n      delete stacks[axis][datasetIndex];\n    }\n  } catch (err) {\n    _iterator3.e(err);\n  } finally {\n    _iterator3.f();\n  }\n}\nvar isDirectUpdateMode = function isDirectUpdateMode(mode) {\n  return mode === 'reset' || mode === 'none';\n};\nvar cloneIfNotShared = function cloneIfNotShared(cached, shared) {\n  return shared ? cached : Object.assign({}, cached);\n};\nvar createStack = function createStack(canStack, meta, chart) {\n  return canStack && !meta.hidden && meta._stacked && {\n    keys: getSortedDatasetIndices(chart, true),\n    values: null\n  };\n};\nvar DatasetController = /*#__PURE__*/function () {\n  function DatasetController(chart, datasetIndex) {\n    _classCallCheck(this, DatasetController);\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.supportsDecimation = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.datasetElementType = (this instanceof DatasetController ? this.constructor : void 0).datasetElementType;\n    this.dataElementType = (this instanceof DatasetController ? this.constructor : void 0).dataElementType;\n    this.initialize();\n  }\n  _createClass(DatasetController, [{\n    key: \"initialize\",\n    value: function initialize() {\n      var meta = this._cachedMeta;\n      this.configure();\n      this.linkScales();\n      meta._stacked = isStacked(meta.vScale, meta);\n      this.addElements();\n      if (this.options.fill && !this.chart.isPluginEnabled('filler')) {\n        console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\n      }\n    }\n  }, {\n    key: \"updateIndex\",\n    value: function updateIndex(datasetIndex) {\n      if (this.index !== datasetIndex) {\n        clearStacks(this._cachedMeta);\n      }\n      this.index = datasetIndex;\n    }\n  }, {\n    key: \"linkScales\",\n    value: function linkScales() {\n      var chart = this.chart;\n      var meta = this._cachedMeta;\n      var dataset = this.getDataset();\n      var chooseId = function chooseId(axis, x, y, r) {\n        return axis === 'x' ? x : axis === 'r' ? r : y;\n      };\n      var xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n      var yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n      var rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n      var indexAxis = meta.indexAxis;\n      var iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n      var vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n      meta.xScale = this.getScaleForId(xid);\n      meta.yScale = this.getScaleForId(yid);\n      meta.rScale = this.getScaleForId(rid);\n      meta.iScale = this.getScaleForId(iid);\n      meta.vScale = this.getScaleForId(vid);\n    }\n  }, {\n    key: \"getDataset\",\n    value: function getDataset() {\n      return this.chart.data.datasets[this.index];\n    }\n  }, {\n    key: \"getMeta\",\n    value: function getMeta() {\n      return this.chart.getDatasetMeta(this.index);\n    }\n  }, {\n    key: \"getScaleForId\",\n    value: function getScaleForId(scaleID) {\n      return this.chart.scales[scaleID];\n    }\n  }, {\n    key: \"_getOtherScale\",\n    value: function _getOtherScale(scale) {\n      var meta = this._cachedMeta;\n      return scale === meta.iScale ? meta.vScale : meta.iScale;\n    }\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      this._update('reset');\n    }\n  }, {\n    key: \"_destroy\",\n    value: function _destroy() {\n      var meta = this._cachedMeta;\n      if (this._data) {\n        unlistenArrayEvents(this._data, this);\n      }\n      if (meta._stacked) {\n        clearStacks(meta);\n      }\n    }\n  }, {\n    key: \"_dataCheck\",\n    value: function _dataCheck() {\n      var dataset = this.getDataset();\n      var data = dataset.data || (dataset.data = []);\n      var _data = this._data;\n      if (isObject(data)) {\n        this._data = convertObjectDataToArray(data);\n      } else if (_data !== data) {\n        if (_data) {\n          unlistenArrayEvents(_data, this);\n          var meta = this._cachedMeta;\n          clearStacks(meta);\n          meta._parsed = [];\n        }\n        if (data && Object.isExtensible(data)) {\n          listenArrayEvents(data, this);\n        }\n        this._syncList = [];\n        this._data = data;\n      }\n    }\n  }, {\n    key: \"addElements\",\n    value: function addElements() {\n      var meta = this._cachedMeta;\n      this._dataCheck();\n      if (this.datasetElementType) {\n        meta.dataset = new this.datasetElementType();\n      }\n    }\n  }, {\n    key: \"buildOrUpdateElements\",\n    value: function buildOrUpdateElements(resetNewElements) {\n      var meta = this._cachedMeta;\n      var dataset = this.getDataset();\n      var stackChanged = false;\n      this._dataCheck();\n      var oldStacked = meta._stacked;\n      meta._stacked = isStacked(meta.vScale, meta);\n      if (meta.stack !== dataset.stack) {\n        stackChanged = true;\n        clearStacks(meta);\n        meta.stack = dataset.stack;\n      }\n      this._resyncElements(resetNewElements);\n      if (stackChanged || oldStacked !== meta._stacked) {\n        updateStacks(this, meta._parsed);\n      }\n    }\n  }, {\n    key: \"configure\",\n    value: function configure() {\n      var config = this.chart.config;\n      var scopeKeys = config.datasetScopeKeys(this._type);\n      var scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n      this.options = config.createResolver(scopes, this.getContext());\n      this._parsing = this.options.parsing;\n      this._cachedDataOpts = {};\n    }\n  }, {\n    key: \"parse\",\n    value: function parse(start, count) {\n      var meta = this._cachedMeta,\n        data = this._data;\n      var iScale = meta.iScale,\n        _stacked = meta._stacked;\n      var iAxis = iScale.axis;\n      var sorted = start === 0 && count === data.length ? true : meta._sorted;\n      var prev = start > 0 && meta._parsed[start - 1];\n      var i, cur, parsed;\n      if (this._parsing === false) {\n        meta._parsed = data;\n        meta._sorted = true;\n        parsed = data;\n      } else {\n        if (isArray(data[start])) {\n          parsed = this.parseArrayData(meta, data, start, count);\n        } else if (isObject(data[start])) {\n          parsed = this.parseObjectData(meta, data, start, count);\n        } else {\n          parsed = this.parsePrimitiveData(meta, data, start, count);\n        }\n        var isNotInOrderComparedToPrev = function isNotInOrderComparedToPrev() {\n          return cur[iAxis] === null || prev && cur[iAxis] < prev[iAxis];\n        };\n        for (i = 0; i < count; ++i) {\n          meta._parsed[i + start] = cur = parsed[i];\n          if (sorted) {\n            if (isNotInOrderComparedToPrev()) {\n              sorted = false;\n            }\n            prev = cur;\n          }\n        }\n        meta._sorted = sorted;\n      }\n      if (_stacked) {\n        updateStacks(this, parsed);\n      }\n    }\n  }, {\n    key: \"parsePrimitiveData\",\n    value: function parsePrimitiveData(meta, data, start, count) {\n      var iScale = meta.iScale,\n        vScale = meta.vScale;\n      var iAxis = iScale.axis;\n      var vAxis = vScale.axis;\n      var labels = iScale.getLabels();\n      var singleScale = iScale === vScale;\n      var parsed = new Array(count);\n      var i, ilen, index;\n      for (i = 0, ilen = count; i < ilen; ++i) {\n        var _parsed$i;\n        index = i + start;\n        parsed[i] = (_parsed$i = {}, _defineProperty(_parsed$i, iAxis, singleScale || iScale.parse(labels[index], index)), _defineProperty(_parsed$i, vAxis, vScale.parse(data[index], index)), _parsed$i);\n      }\n      return parsed;\n    }\n  }, {\n    key: \"parseArrayData\",\n    value: function parseArrayData(meta, data, start, count) {\n      var xScale = meta.xScale,\n        yScale = meta.yScale;\n      var parsed = new Array(count);\n      var i, ilen, index, item;\n      for (i = 0, ilen = count; i < ilen; ++i) {\n        index = i + start;\n        item = data[index];\n        parsed[i] = {\n          x: xScale.parse(item[0], index),\n          y: yScale.parse(item[1], index)\n        };\n      }\n      return parsed;\n    }\n  }, {\n    key: \"parseObjectData\",\n    value: function parseObjectData(meta, data, start, count) {\n      var xScale = meta.xScale,\n        yScale = meta.yScale;\n      var _this$_parsing = this._parsing,\n        _this$_parsing$xAxisK = _this$_parsing.xAxisKey,\n        xAxisKey = _this$_parsing$xAxisK === void 0 ? 'x' : _this$_parsing$xAxisK,\n        _this$_parsing$yAxisK = _this$_parsing.yAxisKey,\n        yAxisKey = _this$_parsing$yAxisK === void 0 ? 'y' : _this$_parsing$yAxisK;\n      var parsed = new Array(count);\n      var i, ilen, index, item;\n      for (i = 0, ilen = count; i < ilen; ++i) {\n        index = i + start;\n        item = data[index];\n        parsed[i] = {\n          x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n          y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n        };\n      }\n      return parsed;\n    }\n  }, {\n    key: \"getParsed\",\n    value: function getParsed(index) {\n      return this._cachedMeta._parsed[index];\n    }\n  }, {\n    key: \"getDataElement\",\n    value: function getDataElement(index) {\n      return this._cachedMeta.data[index];\n    }\n  }, {\n    key: \"applyStack\",\n    value: function applyStack(scale, parsed, mode) {\n      var chart = this.chart;\n      var meta = this._cachedMeta;\n      var value = parsed[scale.axis];\n      var stack = {\n        keys: getSortedDatasetIndices(chart, true),\n        values: parsed._stacks[scale.axis]\n      };\n      return _applyStack(stack, value, meta.index, {\n        mode: mode\n      });\n    }\n  }, {\n    key: \"updateRangeFromParsed\",\n    value: function updateRangeFromParsed(range, scale, parsed, stack) {\n      var parsedValue = parsed[scale.axis];\n      var value = parsedValue === null ? NaN : parsedValue;\n      var values = stack && parsed._stacks[scale.axis];\n      if (stack && values) {\n        stack.values = values;\n        value = _applyStack(stack, parsedValue, this._cachedMeta.index);\n      }\n      range.min = Math.min(range.min, value);\n      range.max = Math.max(range.max, value);\n    }\n  }, {\n    key: \"getMinMax\",\n    value: function getMinMax(scale, canStack) {\n      var meta = this._cachedMeta;\n      var _parsed = meta._parsed;\n      var sorted = meta._sorted && scale === meta.iScale;\n      var ilen = _parsed.length;\n      var otherScale = this._getOtherScale(scale);\n      var stack = createStack(canStack, meta, this.chart);\n      var range = {\n        min: Number.POSITIVE_INFINITY,\n        max: Number.NEGATIVE_INFINITY\n      };\n      var _getUserBounds = getUserBounds(otherScale),\n        otherMin = _getUserBounds.min,\n        otherMax = _getUserBounds.max;\n      var i, parsed;\n      function _skip() {\n        parsed = _parsed[i];\n        var otherValue = parsed[otherScale.axis];\n        return !isNumberFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n      }\n      for (i = 0; i < ilen; ++i) {\n        if (_skip()) {\n          continue;\n        }\n        this.updateRangeFromParsed(range, scale, parsed, stack);\n        if (sorted) {\n          break;\n        }\n      }\n      if (sorted) {\n        for (i = ilen - 1; i >= 0; --i) {\n          if (_skip()) {\n            continue;\n          }\n          this.updateRangeFromParsed(range, scale, parsed, stack);\n          break;\n        }\n      }\n      return range;\n    }\n  }, {\n    key: \"getAllParsedValues\",\n    value: function getAllParsedValues(scale) {\n      var parsed = this._cachedMeta._parsed;\n      var values = [];\n      var i, ilen, value;\n      for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n        value = parsed[i][scale.axis];\n        if (isNumberFinite(value)) {\n          values.push(value);\n        }\n      }\n      return values;\n    }\n  }, {\n    key: \"getMaxOverflow\",\n    value: function getMaxOverflow() {\n      return false;\n    }\n  }, {\n    key: \"getLabelAndValue\",\n    value: function getLabelAndValue(index) {\n      var meta = this._cachedMeta;\n      var iScale = meta.iScale;\n      var vScale = meta.vScale;\n      var parsed = this.getParsed(index);\n      return {\n        label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n        value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n      };\n    }\n  }, {\n    key: \"_update\",\n    value: function _update(mode) {\n      var meta = this._cachedMeta;\n      this.update(mode || 'default');\n      meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n    }\n  }, {\n    key: \"update\",\n    value: function update(mode) {}\n  }, {\n    key: \"draw\",\n    value: function draw() {\n      var ctx = this._ctx;\n      var chart = this.chart;\n      var meta = this._cachedMeta;\n      var elements = meta.data || [];\n      var area = chart.chartArea;\n      var active = [];\n      var start = this._drawStart || 0;\n      var count = this._drawCount || elements.length - start;\n      var drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n      var i;\n      if (meta.dataset) {\n        meta.dataset.draw(ctx, area, start, count);\n      }\n      for (i = start; i < start + count; ++i) {\n        var element = elements[i];\n        if (element.hidden) {\n          continue;\n        }\n        if (element.active && drawActiveElementsOnTop) {\n          active.push(element);\n        } else {\n          element.draw(ctx, area);\n        }\n      }\n      for (i = 0; i < active.length; ++i) {\n        active[i].draw(ctx, area);\n      }\n    }\n  }, {\n    key: \"getStyle\",\n    value: function getStyle(index, active) {\n      var mode = active ? 'active' : 'default';\n      return index === undefined && this._cachedMeta.dataset ? this.resolveDatasetElementOptions(mode) : this.resolveDataElementOptions(index || 0, mode);\n    }\n  }, {\n    key: \"getContext\",\n    value: function getContext(index, active, mode) {\n      var dataset = this.getDataset();\n      var context;\n      if (index >= 0 && index < this._cachedMeta.data.length) {\n        var element = this._cachedMeta.data[index];\n        context = element.$context || (element.$context = createDataContext(this.getContext(), index, element));\n        context.parsed = this.getParsed(index);\n        context.raw = dataset.data[index];\n        context.index = context.dataIndex = index;\n      } else {\n        context = this.$context || (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n        context.dataset = dataset;\n        context.index = context.datasetIndex = this.index;\n      }\n      context.active = !!active;\n      context.mode = mode;\n      return context;\n    }\n  }, {\n    key: \"resolveDatasetElementOptions\",\n    value: function resolveDatasetElementOptions(mode) {\n      return this._resolveElementOptions(this.datasetElementType.id, mode);\n    }\n  }, {\n    key: \"resolveDataElementOptions\",\n    value: function resolveDataElementOptions(index, mode) {\n      return this._resolveElementOptions(this.dataElementType.id, mode, index);\n    }\n  }, {\n    key: \"_resolveElementOptions\",\n    value: function _resolveElementOptions(elementType) {\n      var _this3 = this;\n      var mode = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'default';\n      var index = arguments.length > 2 ? arguments[2] : undefined;\n      var active = mode === 'active';\n      var cache = this._cachedDataOpts;\n      var cacheKey = elementType + '-' + mode;\n      var cached = cache[cacheKey];\n      var sharing = this.enableOptionSharing && defined(index);\n      if (cached) {\n        return cloneIfNotShared(cached, sharing);\n      }\n      var config = this.chart.config;\n      var scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n      var prefixes = active ? [\"\".concat(elementType, \"Hover\"), 'hover', elementType, ''] : [elementType, ''];\n      var scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n      var names = Object.keys(defaults.elements[elementType]);\n      var context = function context() {\n        return _this3.getContext(index, active);\n      };\n      var values = config.resolveNamedOptions(scopes, names, context, prefixes);\n      if (values.$shared) {\n        values.$shared = sharing;\n        cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n      }\n      return values;\n    }\n  }, {\n    key: \"_resolveAnimations\",\n    value: function _resolveAnimations(index, transition, active) {\n      var chart = this.chart;\n      var cache = this._cachedDataOpts;\n      var cacheKey = \"animation-\".concat(transition);\n      var cached = cache[cacheKey];\n      if (cached) {\n        return cached;\n      }\n      var options;\n      if (chart.options.animation !== false) {\n        var config = this.chart.config;\n        var scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n        var scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n        options = config.createResolver(scopes, this.getContext(index, active, transition));\n      }\n      var animations = new Animations(chart, options && options.animations);\n      if (options && options._cacheable) {\n        cache[cacheKey] = Object.freeze(animations);\n      }\n      return animations;\n    }\n  }, {\n    key: \"getSharedOptions\",\n    value: function getSharedOptions(options) {\n      if (!options.$shared) {\n        return;\n      }\n      return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n    }\n  }, {\n    key: \"includeOptions\",\n    value: function includeOptions(mode, sharedOptions) {\n      return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n    }\n  }, {\n    key: \"_getSharedOptions\",\n    value: function _getSharedOptions(start, mode) {\n      var firstOpts = this.resolveDataElementOptions(start, mode);\n      var previouslySharedOptions = this._sharedOptions;\n      var sharedOptions = this.getSharedOptions(firstOpts);\n      var includeOptions = this.includeOptions(mode, sharedOptions) || sharedOptions !== previouslySharedOptions;\n      this.updateSharedOptions(sharedOptions, mode, firstOpts);\n      return {\n        sharedOptions: sharedOptions,\n        includeOptions: includeOptions\n      };\n    }\n  }, {\n    key: \"updateElement\",\n    value: function updateElement(element, index, properties, mode) {\n      if (isDirectUpdateMode(mode)) {\n        Object.assign(element, properties);\n      } else {\n        this._resolveAnimations(index, mode).update(element, properties);\n      }\n    }\n  }, {\n    key: \"updateSharedOptions\",\n    value: function updateSharedOptions(sharedOptions, mode, newOptions) {\n      if (sharedOptions && !isDirectUpdateMode(mode)) {\n        this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n      }\n    }\n  }, {\n    key: \"_setStyle\",\n    value: function _setStyle(element, index, mode, active) {\n      element.active = active;\n      var options = this.getStyle(index, active);\n      this._resolveAnimations(index, mode, active).update(element, {\n        options: !active && this.getSharedOptions(options) || options\n      });\n    }\n  }, {\n    key: \"removeHoverStyle\",\n    value: function removeHoverStyle(element, datasetIndex, index) {\n      this._setStyle(element, index, 'active', false);\n    }\n  }, {\n    key: \"setHoverStyle\",\n    value: function setHoverStyle(element, datasetIndex, index) {\n      this._setStyle(element, index, 'active', true);\n    }\n  }, {\n    key: \"_removeDatasetHoverStyle\",\n    value: function _removeDatasetHoverStyle() {\n      var element = this._cachedMeta.dataset;\n      if (element) {\n        this._setStyle(element, undefined, 'active', false);\n      }\n    }\n  }, {\n    key: \"_setDatasetHoverStyle\",\n    value: function _setDatasetHoverStyle() {\n      var element = this._cachedMeta.dataset;\n      if (element) {\n        this._setStyle(element, undefined, 'active', true);\n      }\n    }\n  }, {\n    key: \"_resyncElements\",\n    value: function _resyncElements(resetNewElements) {\n      var data = this._data;\n      var elements = this._cachedMeta.data;\n      var _iterator4 = _createForOfIteratorHelper(this._syncList),\n        _step4;\n      try {\n        for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n          var _step4$value = _slicedToArray(_step4.value, 3),\n            method = _step4$value[0],\n            arg1 = _step4$value[1],\n            arg2 = _step4$value[2];\n          this[method](arg1, arg2);\n        }\n      } catch (err) {\n        _iterator4.e(err);\n      } finally {\n        _iterator4.f();\n      }\n      this._syncList = [];\n      var numMeta = elements.length;\n      var numData = data.length;\n      var count = Math.min(numData, numMeta);\n      if (count) {\n        this.parse(0, count);\n      }\n      if (numData > numMeta) {\n        this._insertElements(numMeta, numData - numMeta, resetNewElements);\n      } else if (numData < numMeta) {\n        this._removeElements(numData, numMeta - numData);\n      }\n    }\n  }, {\n    key: \"_insertElements\",\n    value: function _insertElements(start, count) {\n      var resetNewElements = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n      var meta = this._cachedMeta;\n      var data = meta.data;\n      var end = start + count;\n      var i;\n      var move = function move(arr) {\n        arr.length += count;\n        for (i = arr.length - 1; i >= end; i--) {\n          arr[i] = arr[i - count];\n        }\n      };\n      move(data);\n      for (i = start; i < end; ++i) {\n        data[i] = new this.dataElementType();\n      }\n      if (this._parsing) {\n        move(meta._parsed);\n      }\n      this.parse(start, count);\n      if (resetNewElements) {\n        this.updateElements(data, start, count, 'reset');\n      }\n    }\n  }, {\n    key: \"updateElements\",\n    value: function updateElements(element, start, count, mode) {}\n  }, {\n    key: \"_removeElements\",\n    value: function _removeElements(start, count) {\n      var meta = this._cachedMeta;\n      if (this._parsing) {\n        var removed = meta._parsed.splice(start, count);\n        if (meta._stacked) {\n          clearStacks(meta, removed);\n        }\n      }\n      meta.data.splice(start, count);\n    }\n  }, {\n    key: \"_sync\",\n    value: function _sync(args) {\n      if (this._parsing) {\n        this._syncList.push(args);\n      } else {\n        var _args2 = _slicedToArray(args, 3),\n          method = _args2[0],\n          arg1 = _args2[1],\n          arg2 = _args2[2];\n        this[method](arg1, arg2);\n      }\n      this.chart._dataChanges.push([this.index].concat(_toConsumableArray(args)));\n    }\n  }, {\n    key: \"_onDataPush\",\n    value: function _onDataPush() {\n      var count = arguments.length;\n      this._sync(['_insertElements', this.getDataset().data.length - count, count]);\n    }\n  }, {\n    key: \"_onDataPop\",\n    value: function _onDataPop() {\n      this._sync(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n    }\n  }, {\n    key: \"_onDataShift\",\n    value: function _onDataShift() {\n      this._sync(['_removeElements', 0, 1]);\n    }\n  }, {\n    key: \"_onDataSplice\",\n    value: function _onDataSplice(start, count) {\n      if (count) {\n        this._sync(['_removeElements', start, count]);\n      }\n      var newCount = arguments.length - 2;\n      if (newCount) {\n        this._sync(['_insertElements', start, newCount]);\n      }\n    }\n  }, {\n    key: \"_onDataUnshift\",\n    value: function _onDataUnshift() {\n      this._sync(['_insertElements', 0, arguments.length]);\n    }\n  }]);\n  return DatasetController;\n}();\n_defineProperty(DatasetController, \"defaults\", {});\n_defineProperty(DatasetController, \"datasetElementType\", null);\n_defineProperty(DatasetController, \"dataElementType\", null);\nfunction getAllScaleValues(scale, type) {\n  if (!scale._cache.$bar) {\n    var visibleMetas = scale.getMatchingVisibleMetas(type);\n    var values = [];\n    for (var i = 0, ilen = visibleMetas.length; i < ilen; i++) {\n      values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n    }\n    scale._cache.$bar = _arrayUnique(values.sort(function (a, b) {\n      return a - b;\n    }));\n  }\n  return scale._cache.$bar;\n}\nfunction computeMinSampleSize(meta) {\n  var scale = meta.iScale;\n  var values = getAllScaleValues(scale, meta.type);\n  var min = scale._length;\n  var i, ilen, curr, prev;\n  var updateMinAndPrev = function updateMinAndPrev() {\n    if (curr === 32767 || curr === -32768) {\n      return;\n    }\n    if (defined(prev)) {\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n    prev = curr;\n  };\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n  prev = undefined;\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n  return min;\n}\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  var thickness = options.barThickness;\n  var size, ratio;\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n  return {\n    chunk: size / stackCount,\n    ratio: ratio,\n    start: ruler.pixels[index] - size / 2\n  };\n}\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  var pixels = ruler.pixels;\n  var curr = pixels[index];\n  var prev = index > 0 ? pixels[index - 1] : null;\n  var next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  var percent = options.categoryPercentage;\n  if (prev === null) {\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n  if (next === null) {\n    next = curr + curr - prev;\n  }\n  var start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  var size = Math.abs(next - prev) / 2 * percent;\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start: start\n  };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n  var startValue = vScale.parse(entry[0], i);\n  var endValue = vScale.parse(entry[1], i);\n  var min = Math.min(startValue, endValue);\n  var max = Math.max(startValue, endValue);\n  var barStart = min;\n  var barEnd = max;\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n  item[vScale.axis] = barEnd;\n  item._custom = {\n    barStart: barStart,\n    barEnd: barEnd,\n    start: startValue,\n    end: endValue,\n    min: min,\n    max: max\n  };\n}\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n  return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  var iScale = meta.iScale;\n  var vScale = meta.vScale;\n  var labels = iScale.getLabels();\n  var singleScale = iScale === vScale;\n  var parsed = [];\n  var i, ilen, item, entry;\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n  return parsed;\n}\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nfunction barSign(size, vScale, actualBase) {\n  if (size !== 0) {\n    return sign(size);\n  }\n  return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\nfunction borderProps(properties) {\n  var reverse, start, end, top, bottom;\n  if (properties.horizontal) {\n    reverse = properties.base > properties.x;\n    start = 'left';\n    end = 'right';\n  } else {\n    reverse = properties.base < properties.y;\n    start = 'bottom';\n    end = 'top';\n  }\n  if (reverse) {\n    top = 'end';\n    bottom = 'start';\n  } else {\n    top = 'start';\n    bottom = 'end';\n  }\n  return {\n    start: start,\n    end: end,\n    reverse: reverse,\n    top: top,\n    bottom: bottom\n  };\n}\nfunction setBorderSkipped(properties, options, stack, index) {\n  var edge = options.borderSkipped;\n  var res = {};\n  if (!edge) {\n    properties.borderSkipped = res;\n    return;\n  }\n  if (edge === true) {\n    properties.borderSkipped = {\n      top: true,\n      right: true,\n      bottom: true,\n      left: true\n    };\n    return;\n  }\n  var _borderProps = borderProps(properties),\n    start = _borderProps.start,\n    end = _borderProps.end,\n    reverse = _borderProps.reverse,\n    top = _borderProps.top,\n    bottom = _borderProps.bottom;\n  if (edge === 'middle' && stack) {\n    properties.enableBorderRadius = true;\n    if ((stack._top || 0) === index) {\n      edge = top;\n    } else if ((stack._bottom || 0) === index) {\n      edge = bottom;\n    } else {\n      res[parseEdge(bottom, start, end, reverse)] = true;\n      edge = top;\n    }\n  }\n  res[parseEdge(edge, start, end, reverse)] = true;\n  properties.borderSkipped = res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n  return edge;\n}\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction setInflateAmount(properties, _ref, ratio) {\n  var inflateAmount = _ref.inflateAmount;\n  properties.inflateAmount = inflateAmount === 'auto' ? ratio === 1 ? 0.33 : 0 : inflateAmount;\n}\nvar BarController = /*#__PURE__*/function (_DatasetController) {\n  _inherits(BarController, _DatasetController);\n  var _super = _createSuper(BarController);\n  function BarController() {\n    _classCallCheck(this, BarController);\n    return _super.apply(this, arguments);\n  }\n  _createClass(BarController, [{\n    key: \"parsePrimitiveData\",\n    value: function parsePrimitiveData(meta, data, start, count) {\n      return parseArrayOrPrimitive(meta, data, start, count);\n    }\n  }, {\n    key: \"parseArrayData\",\n    value: function parseArrayData(meta, data, start, count) {\n      return parseArrayOrPrimitive(meta, data, start, count);\n    }\n  }, {\n    key: \"parseObjectData\",\n    value: function parseObjectData(meta, data, start, count) {\n      var iScale = meta.iScale,\n        vScale = meta.vScale;\n      var _this$_parsing2 = this._parsing,\n        _this$_parsing2$xAxis = _this$_parsing2.xAxisKey,\n        xAxisKey = _this$_parsing2$xAxis === void 0 ? 'x' : _this$_parsing2$xAxis,\n        _this$_parsing2$yAxis = _this$_parsing2.yAxisKey,\n        yAxisKey = _this$_parsing2$yAxis === void 0 ? 'y' : _this$_parsing2$yAxis;\n      var iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n      var vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n      var parsed = [];\n      var i, ilen, item, obj;\n      for (i = start, ilen = start + count; i < ilen; ++i) {\n        obj = data[i];\n        item = {};\n        item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n        parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n      }\n      return parsed;\n    }\n  }, {\n    key: \"updateRangeFromParsed\",\n    value: function updateRangeFromParsed(range, scale, parsed, stack) {\n      _get(_getPrototypeOf(BarController.prototype), \"updateRangeFromParsed\", this).call(this, range, scale, parsed, stack);\n      var custom = parsed._custom;\n      if (custom && scale === this._cachedMeta.vScale) {\n        range.min = Math.min(range.min, custom.min);\n        range.max = Math.max(range.max, custom.max);\n      }\n    }\n  }, {\n    key: \"getMaxOverflow\",\n    value: function getMaxOverflow() {\n      return 0;\n    }\n  }, {\n    key: \"getLabelAndValue\",\n    value: function getLabelAndValue(index) {\n      var meta = this._cachedMeta;\n      var iScale = meta.iScale,\n        vScale = meta.vScale;\n      var parsed = this.getParsed(index);\n      var custom = parsed._custom;\n      var value = isFloatBar(custom) ? '[' + custom.start + ', ' + custom.end + ']' : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n      return {\n        label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n        value: value\n      };\n    }\n  }, {\n    key: \"initialize\",\n    value: function initialize() {\n      this.enableOptionSharing = true;\n      _get(_getPrototypeOf(BarController.prototype), \"initialize\", this).call(this);\n      var meta = this._cachedMeta;\n      meta.stack = this.getDataset().stack;\n    }\n  }, {\n    key: \"update\",\n    value: function update(mode) {\n      var meta = this._cachedMeta;\n      this.updateElements(meta.data, 0, meta.data.length, mode);\n    }\n  }, {\n    key: \"updateElements\",\n    value: function updateElements(bars, start, count, mode) {\n      var reset = mode === 'reset';\n      var index = this.index,\n        vScale = this._cachedMeta.vScale;\n      var base = vScale.getBasePixel();\n      var horizontal = vScale.isHorizontal();\n      var ruler = this._getRuler();\n      var _this$_getSharedOptio = this._getSharedOptions(start, mode),\n        sharedOptions = _this$_getSharedOptio.sharedOptions,\n        includeOptions = _this$_getSharedOptio.includeOptions;\n      for (var i = start; i < start + count; i++) {\n        var parsed = this.getParsed(i);\n        var vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {\n          base: base,\n          head: base\n        } : this._calculateBarValuePixels(i);\n        var ipixels = this._calculateBarIndexPixels(i, ruler);\n        var stack = (parsed._stacks || {})[vScale.axis];\n        var properties = {\n          horizontal: horizontal,\n          base: vpixels.base,\n          enableBorderRadius: !stack || isFloatBar(parsed._custom) || index === stack._top || index === stack._bottom,\n          x: horizontal ? vpixels.head : ipixels.center,\n          y: horizontal ? ipixels.center : vpixels.head,\n          height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n          width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n        };\n        if (includeOptions) {\n          properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n        }\n        var options = properties.options || bars[i].options;\n        setBorderSkipped(properties, options, stack, index);\n        setInflateAmount(properties, options, ruler.ratio);\n        this.updateElement(bars[i], i, properties, mode);\n      }\n    }\n  }, {\n    key: \"_getStacks\",\n    value: function _getStacks(last, dataIndex) {\n      var iScale = this._cachedMeta.iScale;\n      var metasets = iScale.getMatchingVisibleMetas(this._type).filter(function (meta) {\n        return meta.controller.options.grouped;\n      });\n      var stacked = iScale.options.stacked;\n      var stacks = [];\n      var skipNull = function skipNull(meta) {\n        var parsed = meta.controller.getParsed(dataIndex);\n        var val = parsed && parsed[meta.vScale.axis];\n        if (isNullOrUndef(val) || isNaN(val)) {\n          return true;\n        }\n      };\n      var _iterator5 = _createForOfIteratorHelper(metasets),\n        _step5;\n      try {\n        for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n          var meta = _step5.value;\n          if (dataIndex !== undefined && skipNull(meta)) {\n            continue;\n          }\n          if (stacked === false || stacks.indexOf(meta.stack) === -1 || stacked === undefined && meta.stack === undefined) {\n            stacks.push(meta.stack);\n          }\n          if (meta.index === last) {\n            break;\n          }\n        }\n      } catch (err) {\n        _iterator5.e(err);\n      } finally {\n        _iterator5.f();\n      }\n      if (!stacks.length) {\n        stacks.push(undefined);\n      }\n      return stacks;\n    }\n  }, {\n    key: \"_getStackCount\",\n    value: function _getStackCount(index) {\n      return this._getStacks(undefined, index).length;\n    }\n  }, {\n    key: \"_getStackIndex\",\n    value: function _getStackIndex(datasetIndex, name, dataIndex) {\n      var stacks = this._getStacks(datasetIndex, dataIndex);\n      var index = name !== undefined ? stacks.indexOf(name) : -1;\n      return index === -1 ? stacks.length - 1 : index;\n    }\n  }, {\n    key: \"_getRuler\",\n    value: function _getRuler() {\n      var opts = this.options;\n      var meta = this._cachedMeta;\n      var iScale = meta.iScale;\n      var pixels = [];\n      var i, ilen;\n      for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n        pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n      }\n      var barThickness = opts.barThickness;\n      var min = barThickness || computeMinSampleSize(meta);\n      return {\n        min: min,\n        pixels: pixels,\n        start: iScale._startPixel,\n        end: iScale._endPixel,\n        stackCount: this._getStackCount(),\n        scale: iScale,\n        grouped: opts.grouped,\n        ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n      };\n    }\n  }, {\n    key: \"_calculateBarValuePixels\",\n    value: function _calculateBarValuePixels(index) {\n      var _this$_cachedMeta = this._cachedMeta,\n        vScale = _this$_cachedMeta.vScale,\n        _stacked = _this$_cachedMeta._stacked,\n        _this$options = this.options,\n        baseValue = _this$options.base,\n        minBarLength = _this$options.minBarLength;\n      var actualBase = baseValue || 0;\n      var parsed = this.getParsed(index);\n      var custom = parsed._custom;\n      var floating = isFloatBar(custom);\n      var value = parsed[vScale.axis];\n      var start = 0;\n      var length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n      var head, size;\n      if (length !== value) {\n        start = length - value;\n        length = value;\n      }\n      if (floating) {\n        value = custom.barStart;\n        length = custom.barEnd - custom.barStart;\n        if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n          start = 0;\n        }\n        start += value;\n      }\n      var startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n      var base = vScale.getPixelForValue(startValue);\n      if (this.chart.getDataVisibility(index)) {\n        head = vScale.getPixelForValue(start + length);\n      } else {\n        head = base;\n      }\n      size = head - base;\n      if (Math.abs(size) < minBarLength) {\n        size = barSign(size, vScale, actualBase) * minBarLength;\n        if (value === actualBase) {\n          base -= size / 2;\n        }\n        var startPixel = vScale.getPixelForDecimal(0);\n        var endPixel = vScale.getPixelForDecimal(1);\n        var min = Math.min(startPixel, endPixel);\n        var max = Math.max(startPixel, endPixel);\n        base = Math.max(Math.min(base, max), min);\n        head = base + size;\n      }\n      if (base === vScale.getPixelForValue(actualBase)) {\n        var halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n        base += halfGrid;\n        size -= halfGrid;\n      }\n      return {\n        size: size,\n        base: base,\n        head: head,\n        center: head + size / 2\n      };\n    }\n  }, {\n    key: \"_calculateBarIndexPixels\",\n    value: function _calculateBarIndexPixels(index, ruler) {\n      var scale = ruler.scale;\n      var options = this.options;\n      var skipNull = options.skipNull;\n      var maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n      var center, size;\n      if (ruler.grouped) {\n        var stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n        var range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options, stackCount) : computeFitCategoryTraits(index, ruler, options, stackCount);\n        var stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n        center = range.start + range.chunk * stackIndex + range.chunk / 2;\n        size = Math.min(maxBarThickness, range.chunk * range.ratio);\n      } else {\n        center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n        size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n      }\n      return {\n        base: center - size / 2,\n        head: center + size / 2,\n        center: center,\n        size: size\n      };\n    }\n  }, {\n    key: \"draw\",\n    value: function draw() {\n      var meta = this._cachedMeta;\n      var vScale = meta.vScale;\n      var rects = meta.data;\n      var ilen = rects.length;\n      var i = 0;\n      for (; i < ilen; ++i) {\n        if (this.getParsed(i)[vScale.axis] !== null) {\n          rects[i].draw(this._ctx);\n        }\n      }\n    }\n  }]);\n  return BarController;\n}(DatasetController);\n_defineProperty(BarController, \"id\", 'bar');\n_defineProperty(BarController, \"defaults\", {\n  datasetElementType: false,\n  dataElementType: 'bar',\n  categoryPercentage: 0.8,\n  barPercentage: 0.9,\n  grouped: true,\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'base', 'width', 'height']\n    }\n  }\n});\n_defineProperty(BarController, \"overrides\", {\n  scales: {\n    _index_: {\n      type: 'category',\n      offset: true,\n      grid: {\n        offset: true\n      }\n    },\n    _value_: {\n      type: 'linear',\n      beginAtZero: true\n    }\n  }\n});\nvar BubbleController = /*#__PURE__*/function (_DatasetController2) {\n  _inherits(BubbleController, _DatasetController2);\n  var _super2 = _createSuper(BubbleController);\n  function BubbleController() {\n    _classCallCheck(this, BubbleController);\n    return _super2.apply(this, arguments);\n  }\n  _createClass(BubbleController, [{\n    key: \"initialize\",\n    value: function initialize() {\n      this.enableOptionSharing = true;\n      _get(_getPrototypeOf(BubbleController.prototype), \"initialize\", this).call(this);\n    }\n  }, {\n    key: \"parsePrimitiveData\",\n    value: function parsePrimitiveData(meta, data, start, count) {\n      var parsed = _get(_getPrototypeOf(BubbleController.prototype), \"parsePrimitiveData\", this).call(this, meta, data, start, count);\n      for (var i = 0; i < parsed.length; i++) {\n        parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n      }\n      return parsed;\n    }\n  }, {\n    key: \"parseArrayData\",\n    value: function parseArrayData(meta, data, start, count) {\n      var parsed = _get(_getPrototypeOf(BubbleController.prototype), \"parseArrayData\", this).call(this, meta, data, start, count);\n      for (var i = 0; i < parsed.length; i++) {\n        var item = data[start + i];\n        parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n      }\n      return parsed;\n    }\n  }, {\n    key: \"parseObjectData\",\n    value: function parseObjectData(meta, data, start, count) {\n      var parsed = _get(_getPrototypeOf(BubbleController.prototype), \"parseObjectData\", this).call(this, meta, data, start, count);\n      for (var i = 0; i < parsed.length; i++) {\n        var item = data[start + i];\n        parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n      }\n      return parsed;\n    }\n  }, {\n    key: \"getMaxOverflow\",\n    value: function getMaxOverflow() {\n      var data = this._cachedMeta.data;\n      var max = 0;\n      for (var i = data.length - 1; i >= 0; --i) {\n        max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n      }\n      return max > 0 && max;\n    }\n  }, {\n    key: \"getLabelAndValue\",\n    value: function getLabelAndValue(index) {\n      var meta = this._cachedMeta;\n      var labels = this.chart.data.labels || [];\n      var xScale = meta.xScale,\n        yScale = meta.yScale;\n      var parsed = this.getParsed(index);\n      var x = xScale.getLabelForValue(parsed.x);\n      var y = yScale.getLabelForValue(parsed.y);\n      var r = parsed._custom;\n      return {\n        label: labels[index] || '',\n        value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n      };\n    }\n  }, {\n    key: \"update\",\n    value: function update(mode) {\n      var points = this._cachedMeta.data;\n      this.updateElements(points, 0, points.length, mode);\n    }\n  }, {\n    key: \"updateElements\",\n    value: function updateElements(points, start, count, mode) {\n      var reset = mode === 'reset';\n      var _this$_cachedMeta2 = this._cachedMeta,\n        iScale = _this$_cachedMeta2.iScale,\n        vScale = _this$_cachedMeta2.vScale;\n      var _this$_getSharedOptio2 = this._getSharedOptions(start, mode),\n        sharedOptions = _this$_getSharedOptio2.sharedOptions,\n        includeOptions = _this$_getSharedOptio2.includeOptions;\n      var iAxis = iScale.axis;\n      var vAxis = vScale.axis;\n      for (var i = start; i < start + count; i++) {\n        var point = points[i];\n        var parsed = !reset && this.getParsed(i);\n        var properties = {};\n        var iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n        var vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n        properties.skip = isNaN(iPixel) || isNaN(vPixel);\n        if (includeOptions) {\n          properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n          if (reset) {\n            properties.options.radius = 0;\n          }\n        }\n        this.updateElement(point, i, properties, mode);\n      }\n    }\n  }, {\n    key: \"resolveDataElementOptions\",\n    value: function resolveDataElementOptions(index, mode) {\n      var parsed = this.getParsed(index);\n      var values = _get(_getPrototypeOf(BubbleController.prototype), \"resolveDataElementOptions\", this).call(this, index, mode);\n      if (values.$shared) {\n        values = Object.assign({}, values, {\n          $shared: false\n        });\n      }\n      var radius = values.radius;\n      if (mode !== 'active') {\n        values.radius = 0;\n      }\n      values.radius += valueOrDefault(parsed && parsed._custom, radius);\n      return values;\n    }\n  }]);\n  return BubbleController;\n}(DatasetController);\n_defineProperty(BubbleController, \"id\", 'bubble');\n_defineProperty(BubbleController, \"defaults\", {\n  datasetElementType: false,\n  dataElementType: 'point',\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'borderWidth', 'radius']\n    }\n  }\n});\n_defineProperty(BubbleController, \"overrides\", {\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  }\n});\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  var ratioX = 1;\n  var ratioY = 1;\n  var offsetX = 0;\n  var offsetY = 0;\n  if (circumference < TAU) {\n    var startAngle = rotation;\n    var endAngle = startAngle + circumference;\n    var startX = Math.cos(startAngle);\n    var startY = Math.sin(startAngle);\n    var endX = Math.cos(endAngle);\n    var endY = Math.sin(endAngle);\n    var calcMax = function calcMax(angle, a, b) {\n      return _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    };\n    var calcMin = function calcMin(angle, a, b) {\n      return _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    };\n    var maxX = calcMax(0, startX, endX);\n    var maxY = calcMax(HALF_PI, startY, endY);\n    var minX = calcMin(PI, startX, endX);\n    var minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n  return {\n    ratioX: ratioX,\n    ratioY: ratioY,\n    offsetX: offsetX,\n    offsetY: offsetY\n  };\n}\nvar DoughnutController = /*#__PURE__*/function (_DatasetController3) {\n  _inherits(DoughnutController, _DatasetController3);\n  var _super3 = _createSuper(DoughnutController);\n  function DoughnutController(chart, datasetIndex) {\n    var _this4;\n    _classCallCheck(this, DoughnutController);\n    _this4 = _super3.call(this, chart, datasetIndex);\n    _this4.enableOptionSharing = true;\n    _this4.innerRadius = undefined;\n    _this4.outerRadius = undefined;\n    _this4.offsetX = undefined;\n    _this4.offsetY = undefined;\n    return _this4;\n  }\n  _createClass(DoughnutController, [{\n    key: \"linkScales\",\n    value: function linkScales() {}\n  }, {\n    key: \"parse\",\n    value: function parse(start, count) {\n      var data = this.getDataset().data;\n      var meta = this._cachedMeta;\n      if (this._parsing === false) {\n        meta._parsed = data;\n      } else {\n        var getter = function getter(i) {\n          return +data[i];\n        };\n        if (isObject(data[start])) {\n          var _this$_parsing$key = this._parsing.key,\n            key = _this$_parsing$key === void 0 ? 'value' : _this$_parsing$key;\n          getter = function getter(i) {\n            return +resolveObjectKey(data[i], key);\n          };\n        }\n        var i, ilen;\n        for (i = start, ilen = start + count; i < ilen; ++i) {\n          meta._parsed[i] = getter(i);\n        }\n      }\n    }\n  }, {\n    key: \"_getRotation\",\n    value: function _getRotation() {\n      return toRadians(this.options.rotation - 90);\n    }\n  }, {\n    key: \"_getCircumference\",\n    value: function _getCircumference() {\n      return toRadians(this.options.circumference);\n    }\n  }, {\n    key: \"_getRotationExtents\",\n    value: function _getRotationExtents() {\n      var min = TAU;\n      var max = -TAU;\n      for (var i = 0; i < this.chart.data.datasets.length; ++i) {\n        if (this.chart.isDatasetVisible(i) && this.chart.getDatasetMeta(i).type === this._type) {\n          var controller = this.chart.getDatasetMeta(i).controller;\n          var rotation = controller._getRotation();\n          var circumference = controller._getCircumference();\n          min = Math.min(min, rotation);\n          max = Math.max(max, rotation + circumference);\n        }\n      }\n      return {\n        rotation: min,\n        circumference: max - min\n      };\n    }\n  }, {\n    key: \"update\",\n    value: function update(mode) {\n      var chart = this.chart;\n      var chartArea = chart.chartArea;\n      var meta = this._cachedMeta;\n      var arcs = meta.data;\n      var spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n      var maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n      var cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n      var chartWeight = this._getRingWeight(this.index);\n      var _this$_getRotationExt = this._getRotationExtents(),\n        circumference = _this$_getRotationExt.circumference,\n        rotation = _this$_getRotationExt.rotation;\n      var _getRatioAndOffset = getRatioAndOffset(rotation, circumference, cutout),\n        ratioX = _getRatioAndOffset.ratioX,\n        ratioY = _getRatioAndOffset.ratioY,\n        offsetX = _getRatioAndOffset.offsetX,\n        offsetY = _getRatioAndOffset.offsetY;\n      var maxWidth = (chartArea.width - spacing) / ratioX;\n      var maxHeight = (chartArea.height - spacing) / ratioY;\n      var maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n      var outerRadius = toDimension(this.options.radius, maxRadius);\n      var innerRadius = Math.max(outerRadius * cutout, 0);\n      var radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n      this.offsetX = offsetX * outerRadius;\n      this.offsetY = offsetY * outerRadius;\n      meta.total = this.calculateTotal();\n      this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n      this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n      this.updateElements(arcs, 0, arcs.length, mode);\n    }\n  }, {\n    key: \"_circumference\",\n    value: function _circumference(i, reset) {\n      var opts = this.options;\n      var meta = this._cachedMeta;\n      var circumference = this._getCircumference();\n      if (reset && opts.animation.animateRotate || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n        return 0;\n      }\n      return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n    }\n  }, {\n    key: \"updateElements\",\n    value: function updateElements(arcs, start, count, mode) {\n      var reset = mode === 'reset';\n      var chart = this.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var animationOpts = opts.animation;\n      var centerX = (chartArea.left + chartArea.right) / 2;\n      var centerY = (chartArea.top + chartArea.bottom) / 2;\n      var animateScale = reset && animationOpts.animateScale;\n      var innerRadius = animateScale ? 0 : this.innerRadius;\n      var outerRadius = animateScale ? 0 : this.outerRadius;\n      var _this$_getSharedOptio3 = this._getSharedOptions(start, mode),\n        sharedOptions = _this$_getSharedOptio3.sharedOptions,\n        includeOptions = _this$_getSharedOptio3.includeOptions;\n      var startAngle = this._getRotation();\n      var i;\n      for (i = 0; i < start; ++i) {\n        startAngle += this._circumference(i, reset);\n      }\n      for (i = start; i < start + count; ++i) {\n        var circumference = this._circumference(i, reset);\n        var arc = arcs[i];\n        var properties = {\n          x: centerX + this.offsetX,\n          y: centerY + this.offsetY,\n          startAngle: startAngle,\n          endAngle: startAngle + circumference,\n          circumference: circumference,\n          outerRadius: outerRadius,\n          innerRadius: innerRadius\n        };\n        if (includeOptions) {\n          properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n        }\n        startAngle += circumference;\n        this.updateElement(arc, i, properties, mode);\n      }\n    }\n  }, {\n    key: \"calculateTotal\",\n    value: function calculateTotal() {\n      var meta = this._cachedMeta;\n      var metaData = meta.data;\n      var total = 0;\n      var i;\n      for (i = 0; i < metaData.length; i++) {\n        var value = meta._parsed[i];\n        if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n          total += Math.abs(value);\n        }\n      }\n      return total;\n    }\n  }, {\n    key: \"calculateCircumference\",\n    value: function calculateCircumference(value) {\n      var total = this._cachedMeta.total;\n      if (total > 0 && !isNaN(value)) {\n        return TAU * (Math.abs(value) / total);\n      }\n      return 0;\n    }\n  }, {\n    key: \"getLabelAndValue\",\n    value: function getLabelAndValue(index) {\n      var meta = this._cachedMeta;\n      var chart = this.chart;\n      var labels = chart.data.labels || [];\n      var value = formatNumber(meta._parsed[index], chart.options.locale);\n      return {\n        label: labels[index] || '',\n        value: value\n      };\n    }\n  }, {\n    key: \"getMaxBorderWidth\",\n    value: function getMaxBorderWidth(arcs) {\n      var max = 0;\n      var chart = this.chart;\n      var i, ilen, meta, controller, options;\n      if (!arcs) {\n        for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n          if (chart.isDatasetVisible(i)) {\n            meta = chart.getDatasetMeta(i);\n            arcs = meta.data;\n            controller = meta.controller;\n            break;\n          }\n        }\n      }\n      if (!arcs) {\n        return 0;\n      }\n      for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n        options = controller.resolveDataElementOptions(i);\n        if (options.borderAlign !== 'inner') {\n          max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n        }\n      }\n      return max;\n    }\n  }, {\n    key: \"getMaxOffset\",\n    value: function getMaxOffset(arcs) {\n      var max = 0;\n      for (var i = 0, ilen = arcs.length; i < ilen; ++i) {\n        var options = this.resolveDataElementOptions(i);\n        max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n      }\n      return max;\n    }\n  }, {\n    key: \"_getRingWeightOffset\",\n    value: function _getRingWeightOffset(datasetIndex) {\n      var ringWeightOffset = 0;\n      for (var i = 0; i < datasetIndex; ++i) {\n        if (this.chart.isDatasetVisible(i)) {\n          ringWeightOffset += this._getRingWeight(i);\n        }\n      }\n      return ringWeightOffset;\n    }\n  }, {\n    key: \"_getRingWeight\",\n    value: function _getRingWeight(datasetIndex) {\n      return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n    }\n  }, {\n    key: \"_getVisibleDatasetWeightTotal\",\n    value: function _getVisibleDatasetWeightTotal() {\n      return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n    }\n  }]);\n  return DoughnutController;\n}(DatasetController);\n_defineProperty(DoughnutController, \"id\", 'doughnut');\n_defineProperty(DoughnutController, \"defaults\", {\n  datasetElementType: false,\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: false\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\n    }\n  },\n  cutout: '50%',\n  rotation: 0,\n  circumference: 360,\n  radius: '100%',\n  spacing: 0,\n  indexAxis: 'r'\n});\n_defineProperty(DoughnutController, \"descriptors\", {\n  _scriptable: function _scriptable(name) {\n    return name !== 'spacing';\n  },\n  _indexable: function _indexable(name) {\n    return name !== 'spacing';\n  }\n});\n_defineProperty(DoughnutController, \"overrides\", {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels: function generateLabels(chart) {\n          var data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            var _chart$legend$options2 = chart.legend.options.labels,\n              pointStyle = _chart$legend$options2.pointStyle,\n              color = _chart$legend$options2.color;\n            return data.labels.map(function (label, i) {\n              var meta = chart.getDatasetMeta(0);\n              var style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                fontColor: color,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick: function onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    }\n  }\n});\nvar LineController = /*#__PURE__*/function (_DatasetController4) {\n  _inherits(LineController, _DatasetController4);\n  var _super4 = _createSuper(LineController);\n  function LineController() {\n    _classCallCheck(this, LineController);\n    return _super4.apply(this, arguments);\n  }\n  _createClass(LineController, [{\n    key: \"initialize\",\n    value: function initialize() {\n      this.enableOptionSharing = true;\n      this.supportsDecimation = true;\n      _get(_getPrototypeOf(LineController.prototype), \"initialize\", this).call(this);\n    }\n  }, {\n    key: \"update\",\n    value: function update(mode) {\n      var meta = this._cachedMeta;\n      var line = meta.dataset,\n        _meta$data = meta.data,\n        points = _meta$data === void 0 ? [] : _meta$data,\n        _dataset = meta._dataset;\n      var animationsDisabled = this.chart._animationsDisabled;\n      var _getStartAndCountOfVi = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled),\n        start = _getStartAndCountOfVi.start,\n        count = _getStartAndCountOfVi.count;\n      this._drawStart = start;\n      this._drawCount = count;\n      if (_scaleRangesChanged(meta)) {\n        start = 0;\n        count = points.length;\n      }\n      line._chart = this.chart;\n      line._datasetIndex = this.index;\n      line._decimated = !!_dataset._decimated;\n      line.points = points;\n      var options = this.resolveDatasetElementOptions(mode);\n      if (!this.options.showLine) {\n        options.borderWidth = 0;\n      }\n      options.segment = this.options.segment;\n      this.updateElement(line, undefined, {\n        animated: !animationsDisabled,\n        options: options\n      }, mode);\n      this.updateElements(points, start, count, mode);\n    }\n  }, {\n    key: \"updateElements\",\n    value: function updateElements(points, start, count, mode) {\n      var reset = mode === 'reset';\n      var _this$_cachedMeta3 = this._cachedMeta,\n        iScale = _this$_cachedMeta3.iScale,\n        vScale = _this$_cachedMeta3.vScale,\n        _stacked = _this$_cachedMeta3._stacked,\n        _dataset = _this$_cachedMeta3._dataset;\n      var _this$_getSharedOptio4 = this._getSharedOptions(start, mode),\n        sharedOptions = _this$_getSharedOptio4.sharedOptions,\n        includeOptions = _this$_getSharedOptio4.includeOptions;\n      var iAxis = iScale.axis;\n      var vAxis = vScale.axis;\n      var _this$options2 = this.options,\n        spanGaps = _this$options2.spanGaps,\n        segment = _this$options2.segment;\n      var maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n      var directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n      var end = start + count;\n      var pointsCount = points.length;\n      var prevParsed = start > 0 && this.getParsed(start - 1);\n      for (var i = 0; i < pointsCount; ++i) {\n        var point = points[i];\n        var properties = directUpdate ? point : {};\n        if (i < start || i >= end) {\n          properties.skip = true;\n          continue;\n        }\n        var parsed = this.getParsed(i);\n        var nullData = isNullOrUndef(parsed[vAxis]);\n        var iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n        var vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n        properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n        properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n        if (segment) {\n          properties.parsed = parsed;\n          properties.raw = _dataset.data[i];\n        }\n        if (includeOptions) {\n          properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n        }\n        if (!directUpdate) {\n          this.updateElement(point, i, properties, mode);\n        }\n        prevParsed = parsed;\n      }\n    }\n  }, {\n    key: \"getMaxOverflow\",\n    value: function getMaxOverflow() {\n      var meta = this._cachedMeta;\n      var dataset = meta.dataset;\n      var border = dataset.options && dataset.options.borderWidth || 0;\n      var data = meta.data || [];\n      if (!data.length) {\n        return border;\n      }\n      var firstPoint = data[0].size(this.resolveDataElementOptions(0));\n      var lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n      return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n  }, {\n    key: \"draw\",\n    value: function draw() {\n      var meta = this._cachedMeta;\n      meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n      _get(_getPrototypeOf(LineController.prototype), \"draw\", this).call(this);\n    }\n  }]);\n  return LineController;\n}(DatasetController);\n_defineProperty(LineController, \"id\", 'line');\n_defineProperty(LineController, \"defaults\", {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  showLine: true,\n  spanGaps: false\n});\n_defineProperty(LineController, \"overrides\", {\n  scales: {\n    _index_: {\n      type: 'category'\n    },\n    _value_: {\n      type: 'linear'\n    }\n  }\n});\nvar PolarAreaController = /*#__PURE__*/function (_DatasetController5) {\n  _inherits(PolarAreaController, _DatasetController5);\n  var _super5 = _createSuper(PolarAreaController);\n  function PolarAreaController(chart, datasetIndex) {\n    var _this5;\n    _classCallCheck(this, PolarAreaController);\n    _this5 = _super5.call(this, chart, datasetIndex);\n    _this5.innerRadius = undefined;\n    _this5.outerRadius = undefined;\n    return _this5;\n  }\n  _createClass(PolarAreaController, [{\n    key: \"getLabelAndValue\",\n    value: function getLabelAndValue(index) {\n      var meta = this._cachedMeta;\n      var chart = this.chart;\n      var labels = chart.data.labels || [];\n      var value = formatNumber(meta._parsed[index].r, chart.options.locale);\n      return {\n        label: labels[index] || '',\n        value: value\n      };\n    }\n  }, {\n    key: \"parseObjectData\",\n    value: function parseObjectData(meta, data, start, count) {\n      return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n  }, {\n    key: \"update\",\n    value: function update(mode) {\n      var arcs = this._cachedMeta.data;\n      this._updateRadius();\n      this.updateElements(arcs, 0, arcs.length, mode);\n    }\n  }, {\n    key: \"getMinMax\",\n    value: function getMinMax() {\n      var _this6 = this;\n      var meta = this._cachedMeta;\n      var range = {\n        min: Number.POSITIVE_INFINITY,\n        max: Number.NEGATIVE_INFINITY\n      };\n      meta.data.forEach(function (element, index) {\n        var parsed = _this6.getParsed(index).r;\n        if (!isNaN(parsed) && _this6.chart.getDataVisibility(index)) {\n          if (parsed < range.min) {\n            range.min = parsed;\n          }\n          if (parsed > range.max) {\n            range.max = parsed;\n          }\n        }\n      });\n      return range;\n    }\n  }, {\n    key: \"_updateRadius\",\n    value: function _updateRadius() {\n      var chart = this.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n      var outerRadius = Math.max(minSize / 2, 0);\n      var innerRadius = Math.max(opts.cutoutPercentage ? outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n      var radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n      this.outerRadius = outerRadius - radiusLength * this.index;\n      this.innerRadius = this.outerRadius - radiusLength;\n    }\n  }, {\n    key: \"updateElements\",\n    value: function updateElements(arcs, start, count, mode) {\n      var reset = mode === 'reset';\n      var chart = this.chart;\n      var opts = chart.options;\n      var animationOpts = opts.animation;\n      var scale = this._cachedMeta.rScale;\n      var centerX = scale.xCenter;\n      var centerY = scale.yCenter;\n      var datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n      var angle = datasetStartAngle;\n      var i;\n      var defaultAngle = 360 / this.countVisibleElements();\n      for (i = 0; i < start; ++i) {\n        angle += this._computeAngle(i, mode, defaultAngle);\n      }\n      for (i = start; i < start + count; i++) {\n        var arc = arcs[i];\n        var startAngle = angle;\n        var endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n        var outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n        angle = endAngle;\n        if (reset) {\n          if (animationOpts.animateScale) {\n            outerRadius = 0;\n          }\n          if (animationOpts.animateRotate) {\n            startAngle = endAngle = datasetStartAngle;\n          }\n        }\n        var properties = {\n          x: centerX,\n          y: centerY,\n          innerRadius: 0,\n          outerRadius: outerRadius,\n          startAngle: startAngle,\n          endAngle: endAngle,\n          options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n        };\n        this.updateElement(arc, i, properties, mode);\n      }\n    }\n  }, {\n    key: \"countVisibleElements\",\n    value: function countVisibleElements() {\n      var _this7 = this;\n      var meta = this._cachedMeta;\n      var count = 0;\n      meta.data.forEach(function (element, index) {\n        if (!isNaN(_this7.getParsed(index).r) && _this7.chart.getDataVisibility(index)) {\n          count++;\n        }\n      });\n      return count;\n    }\n  }, {\n    key: \"_computeAngle\",\n    value: function _computeAngle(index, mode, defaultAngle) {\n      return this.chart.getDataVisibility(index) ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle) : 0;\n    }\n  }]);\n  return PolarAreaController;\n}(DatasetController);\n_defineProperty(PolarAreaController, \"id\", 'polarArea');\n_defineProperty(PolarAreaController, \"defaults\", {\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: true\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n    }\n  },\n  indexAxis: 'r',\n  startAngle: 0\n});\n_defineProperty(PolarAreaController, \"overrides\", {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels: function generateLabels(chart) {\n          var data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            var _chart$legend$options3 = chart.legend.options.labels,\n              pointStyle = _chart$legend$options3.pointStyle,\n              color = _chart$legend$options3.color;\n            return data.labels.map(function (label, i) {\n              var meta = chart.getDatasetMeta(0);\n              var style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                fontColor: color,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick: function onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    }\n  },\n  scales: {\n    r: {\n      type: 'radialLinear',\n      angleLines: {\n        display: false\n      },\n      beginAtZero: true,\n      grid: {\n        circular: true\n      },\n      pointLabels: {\n        display: false\n      },\n      startAngle: 0\n    }\n  }\n});\nvar PieController = /*#__PURE__*/function (_DoughnutController) {\n  _inherits(PieController, _DoughnutController);\n  var _super6 = _createSuper(PieController);\n  function PieController() {\n    _classCallCheck(this, PieController);\n    return _super6.apply(this, arguments);\n  }\n  return _createClass(PieController);\n}(DoughnutController);\n_defineProperty(PieController, \"id\", 'pie');\n_defineProperty(PieController, \"defaults\", {\n  cutout: 0,\n  rotation: 0,\n  circumference: 360,\n  radius: '100%'\n});\nvar RadarController = /*#__PURE__*/function (_DatasetController6) {\n  _inherits(RadarController, _DatasetController6);\n  var _super7 = _createSuper(RadarController);\n  function RadarController() {\n    _classCallCheck(this, RadarController);\n    return _super7.apply(this, arguments);\n  }\n  _createClass(RadarController, [{\n    key: \"getLabelAndValue\",\n    value: function getLabelAndValue(index) {\n      var vScale = this._cachedMeta.vScale;\n      var parsed = this.getParsed(index);\n      return {\n        label: vScale.getLabels()[index],\n        value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n      };\n    }\n  }, {\n    key: \"parseObjectData\",\n    value: function parseObjectData(meta, data, start, count) {\n      return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n  }, {\n    key: \"update\",\n    value: function update(mode) {\n      var meta = this._cachedMeta;\n      var line = meta.dataset;\n      var points = meta.data || [];\n      var labels = meta.iScale.getLabels();\n      line.points = points;\n      if (mode !== 'resize') {\n        var options = this.resolveDatasetElementOptions(mode);\n        if (!this.options.showLine) {\n          options.borderWidth = 0;\n        }\n        var properties = {\n          _loop: true,\n          _fullLoop: labels.length === points.length,\n          options: options\n        };\n        this.updateElement(line, undefined, properties, mode);\n      }\n      this.updateElements(points, 0, points.length, mode);\n    }\n  }, {\n    key: \"updateElements\",\n    value: function updateElements(points, start, count, mode) {\n      var scale = this._cachedMeta.rScale;\n      var reset = mode === 'reset';\n      for (var i = start; i < start + count; i++) {\n        var point = points[i];\n        var options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n        var pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n        var x = reset ? scale.xCenter : pointPosition.x;\n        var y = reset ? scale.yCenter : pointPosition.y;\n        var properties = {\n          x: x,\n          y: y,\n          angle: pointPosition.angle,\n          skip: isNaN(x) || isNaN(y),\n          options: options\n        };\n        this.updateElement(point, i, properties, mode);\n      }\n    }\n  }]);\n  return RadarController;\n}(DatasetController);\n_defineProperty(RadarController, \"id\", 'radar');\n_defineProperty(RadarController, \"defaults\", {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  indexAxis: 'r',\n  showLine: true,\n  elements: {\n    line: {\n      fill: 'start'\n    }\n  }\n});\n_defineProperty(RadarController, \"overrides\", {\n  aspectRatio: 1,\n  scales: {\n    r: {\n      type: 'radialLinear'\n    }\n  }\n});\nvar ScatterController = /*#__PURE__*/function (_DatasetController7) {\n  _inherits(ScatterController, _DatasetController7);\n  var _super8 = _createSuper(ScatterController);\n  function ScatterController() {\n    _classCallCheck(this, ScatterController);\n    return _super8.apply(this, arguments);\n  }\n  _createClass(ScatterController, [{\n    key: \"getLabelAndValue\",\n    value: function getLabelAndValue(index) {\n      var meta = this._cachedMeta;\n      var labels = this.chart.data.labels || [];\n      var xScale = meta.xScale,\n        yScale = meta.yScale;\n      var parsed = this.getParsed(index);\n      var x = xScale.getLabelForValue(parsed.x);\n      var y = yScale.getLabelForValue(parsed.y);\n      return {\n        label: labels[index] || '',\n        value: '(' + x + ', ' + y + ')'\n      };\n    }\n  }, {\n    key: \"update\",\n    value: function update(mode) {\n      var meta = this._cachedMeta;\n      var _meta$data2 = meta.data,\n        points = _meta$data2 === void 0 ? [] : _meta$data2;\n      var animationsDisabled = this.chart._animationsDisabled;\n      var _getStartAndCountOfVi2 = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled),\n        start = _getStartAndCountOfVi2.start,\n        count = _getStartAndCountOfVi2.count;\n      this._drawStart = start;\n      this._drawCount = count;\n      if (_scaleRangesChanged(meta)) {\n        start = 0;\n        count = points.length;\n      }\n      if (this.options.showLine) {\n        var line = meta.dataset,\n          _dataset = meta._dataset;\n        line._chart = this.chart;\n        line._datasetIndex = this.index;\n        line._decimated = !!_dataset._decimated;\n        line.points = points;\n        var options = this.resolveDatasetElementOptions(mode);\n        options.segment = this.options.segment;\n        this.updateElement(line, undefined, {\n          animated: !animationsDisabled,\n          options: options\n        }, mode);\n      }\n      this.updateElements(points, start, count, mode);\n    }\n  }, {\n    key: \"addElements\",\n    value: function addElements() {\n      var showLine = this.options.showLine;\n      if (!this.datasetElementType && showLine) {\n        this.datasetElementType = this.chart.registry.getElement('line');\n      }\n      _get(_getPrototypeOf(ScatterController.prototype), \"addElements\", this).call(this);\n    }\n  }, {\n    key: \"updateElements\",\n    value: function updateElements(points, start, count, mode) {\n      var reset = mode === 'reset';\n      var _this$_cachedMeta4 = this._cachedMeta,\n        iScale = _this$_cachedMeta4.iScale,\n        vScale = _this$_cachedMeta4.vScale,\n        _stacked = _this$_cachedMeta4._stacked,\n        _dataset = _this$_cachedMeta4._dataset;\n      var firstOpts = this.resolveDataElementOptions(start, mode);\n      var sharedOptions = this.getSharedOptions(firstOpts);\n      var includeOptions = this.includeOptions(mode, sharedOptions);\n      var iAxis = iScale.axis;\n      var vAxis = vScale.axis;\n      var _this$options3 = this.options,\n        spanGaps = _this$options3.spanGaps,\n        segment = _this$options3.segment;\n      var maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n      var directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n      var prevParsed = start > 0 && this.getParsed(start - 1);\n      for (var i = start; i < start + count; ++i) {\n        var point = points[i];\n        var parsed = this.getParsed(i);\n        var properties = directUpdate ? point : {};\n        var nullData = isNullOrUndef(parsed[vAxis]);\n        var iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n        var vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n        properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n        properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n        if (segment) {\n          properties.parsed = parsed;\n          properties.raw = _dataset.data[i];\n        }\n        if (includeOptions) {\n          properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n        }\n        if (!directUpdate) {\n          this.updateElement(point, i, properties, mode);\n        }\n        prevParsed = parsed;\n      }\n      this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    }\n  }, {\n    key: \"getMaxOverflow\",\n    value: function getMaxOverflow() {\n      var meta = this._cachedMeta;\n      var data = meta.data || [];\n      if (!this.options.showLine) {\n        var max = 0;\n        for (var i = data.length - 1; i >= 0; --i) {\n          max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n        }\n        return max > 0 && max;\n      }\n      var dataset = meta.dataset;\n      var border = dataset.options && dataset.options.borderWidth || 0;\n      if (!data.length) {\n        return border;\n      }\n      var firstPoint = data[0].size(this.resolveDataElementOptions(0));\n      var lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n      return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n  }]);\n  return ScatterController;\n}(DatasetController);\n_defineProperty(ScatterController, \"id\", 'scatter');\n_defineProperty(ScatterController, \"defaults\", {\n  datasetElementType: false,\n  dataElementType: 'point',\n  showLine: false,\n  fill: false\n});\n_defineProperty(ScatterController, \"overrides\", {\n  interaction: {\n    mode: 'point'\n  },\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  }\n});\nvar controllers = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  BarController: BarController,\n  BubbleController: BubbleController,\n  DoughnutController: DoughnutController,\n  LineController: LineController,\n  PolarAreaController: PolarAreaController,\n  PieController: PieController,\n  RadarController: RadarController,\n  ScatterController: ScatterController\n});\n\n/**\n * @namespace Chart._adapters\n * @since 2.8.0\n * @private\n */\nfunction abstract() {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */\nvar DateAdapterBase = /*#__PURE__*/function () {\n  function DateAdapterBase(options) {\n    _classCallCheck(this, DateAdapterBase);\n    this.options = options || {};\n  }\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  _createClass(DateAdapterBase, [{\n    key: \"init\",\n    value: function init() {}\n  }, {\n    key: \"formats\",\n    value: function formats() {\n      return abstract();\n    }\n  }, {\n    key: \"parse\",\n    value: function parse() {\n      return abstract();\n    }\n  }, {\n    key: \"format\",\n    value: function format() {\n      return abstract();\n    }\n  }, {\n    key: \"add\",\n    value: function add() {\n      return abstract();\n    }\n  }, {\n    key: \"diff\",\n    value: function diff() {\n      return abstract();\n    }\n  }, {\n    key: \"startOf\",\n    value: function startOf() {\n      return abstract();\n    }\n  }, {\n    key: \"endOf\",\n    value: function endOf() {\n      return abstract();\n    }\n  }], [{\n    key: \"override\",\n    value:\n    /**\n    * Override default date adapter methods.\n    * Accepts type parameter to define options type.\n    * @example\n    * Chart._adapters._date.override<{myAdapterOption: string}>({\n    *   init() {\n    *     console.log(this.options.myAdapterOption);\n    *   }\n    * })\n    */\n    function override(members) {\n      Object.assign(DateAdapterBase.prototype, members);\n    }\n  }]);\n  return DateAdapterBase;\n}();\nvar adapters = {\n  _date: DateAdapterBase\n};\nfunction binarySearch(metaset, axis, value, intersect) {\n  var controller = metaset.controller,\n    data = metaset.data,\n    _sorted = metaset._sorted;\n  var iScale = controller._cachedMeta.iScale;\n  if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n    var lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      var el = data[0];\n      var range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        var start = lookupMethod(data, axis, value - range);\n        var end = lookupMethod(data, axis, value + range);\n        return {\n          lo: start.lo,\n          hi: end.hi\n        };\n      }\n    }\n  }\n  return {\n    lo: 0,\n    hi: data.length - 1\n  };\n}\nfunction evaluateInteractionItems(chart, axis, position, handler, intersect) {\n  var metasets = chart.getSortedVisibleDatasetMetas();\n  var value = position[axis];\n  for (var i = 0, ilen = metasets.length; i < ilen; ++i) {\n    var _metasets$i = metasets[i],\n      _index2 = _metasets$i.index,\n      data = _metasets$i.data;\n    var _binarySearch = binarySearch(metasets[i], axis, value, intersect),\n      lo = _binarySearch.lo,\n      hi = _binarySearch.hi;\n    for (var j = lo; j <= hi; ++j) {\n      var element = data[j];\n      if (!element.skip) {\n        handler(element, _index2, j);\n      }\n    }\n  }\n}\nfunction getDistanceMetricForAxis(axis) {\n  var useX = axis.indexOf('x') !== -1;\n  var useY = axis.indexOf('y') !== -1;\n  return function (pt1, pt2) {\n    var deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    var deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\nfunction getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n  var items = [];\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return items;\n  }\n  var evaluationFunc = function evaluationFunc(element, datasetIndex, index) {\n    if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n      return;\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({\n        element: element,\n        datasetIndex: datasetIndex,\n        index: index\n      });\n    }\n  };\n  evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\nfunction getNearestRadialItems(chart, position, axis, useFinalPosition) {\n  var items = [];\n  function evaluationFunc(element, datasetIndex, index) {\n    var _element$getProps = element.getProps(['startAngle', 'endAngle'], useFinalPosition),\n      startAngle = _element$getProps.startAngle,\n      endAngle = _element$getProps.endAngle;\n    var _getAngleFromPoint = getAngleFromPoint(element, {\n        x: position.x,\n        y: position.y\n      }),\n      angle = _getAngleFromPoint.angle;\n    if (_angleBetween(angle, startAngle, endAngle)) {\n      items.push({\n        element: element,\n        datasetIndex: datasetIndex,\n        index: index\n      });\n    }\n  }\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\nfunction getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  var items = [];\n  var distanceMetric = getDistanceMetricForAxis(axis);\n  var minDistance = Number.POSITIVE_INFINITY;\n  function evaluationFunc(element, datasetIndex, index) {\n    var inRange = element.inRange(position.x, position.y, useFinalPosition);\n    if (intersect && !inRange) {\n      return;\n    }\n    var center = element.getCenterPoint(useFinalPosition);\n    var pointInArea = !!includeInvisible || chart.isPointInArea(center);\n    if (!pointInArea && !inRange) {\n      return;\n    }\n    var distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{\n        element: element,\n        datasetIndex: datasetIndex,\n        index: index\n      }];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      items.push({\n        element: element,\n        datasetIndex: datasetIndex,\n        index: index\n      });\n    }\n  }\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return [];\n  }\n  return axis === 'r' && !intersect ? getNearestRadialItems(chart, position, axis, useFinalPosition) : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\nfunction getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n  var items = [];\n  var rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  var intersectsItem = false;\n  evaluateInteractionItems(chart, axis, position, function (element, datasetIndex, index) {\n    if (element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({\n        element: element,\n        datasetIndex: datasetIndex,\n        index: index\n      });\n      intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n    }\n  });\n  if (intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\nvar Interaction = {\n  evaluateInteractionItems: evaluateInteractionItems,\n  modes: {\n    index: function index(chart, e, options, useFinalPosition) {\n      var position = getRelativePosition(e, chart);\n      var axis = options.axis || 'x';\n      var includeInvisible = options.includeInvisible || false;\n      var items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n      var elements = [];\n      if (!items.length) {\n        return [];\n      }\n      chart.getSortedVisibleDatasetMetas().forEach(function (meta) {\n        var index = items[0].index;\n        var element = meta.data[index];\n        if (element && !element.skip) {\n          elements.push({\n            element: element,\n            datasetIndex: meta.index,\n            index: index\n          });\n        }\n      });\n      return elements;\n    },\n    dataset: function dataset(chart, e, options, useFinalPosition) {\n      var position = getRelativePosition(e, chart);\n      var axis = options.axis || 'xy';\n      var includeInvisible = options.includeInvisible || false;\n      var items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n      if (items.length > 0) {\n        var datasetIndex = items[0].datasetIndex;\n        var data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (var i = 0; i < data.length; ++i) {\n          items.push({\n            element: data[i],\n            datasetIndex: datasetIndex,\n            index: i\n          });\n        }\n      }\n      return items;\n    },\n    point: function point(chart, e, options, useFinalPosition) {\n      var position = getRelativePosition(e, chart);\n      var axis = options.axis || 'xy';\n      var includeInvisible = options.includeInvisible || false;\n      return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n    },\n    nearest: function nearest(chart, e, options, useFinalPosition) {\n      var position = getRelativePosition(e, chart);\n      var axis = options.axis || 'xy';\n      var includeInvisible = options.includeInvisible || false;\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n    },\n    x: function x(chart, e, options, useFinalPosition) {\n      var position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n    },\n    y: function y(chart, e, options, useFinalPosition) {\n      var position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n    }\n  }\n};\nvar STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\nfunction filterByPosition(array, position) {\n  return array.filter(function (v) {\n    return v.pos === position;\n  });\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(function (v) {\n    return STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis;\n  });\n}\nfunction sortByWeight(array, reverse) {\n  return array.sort(function (a, b) {\n    var v0 = reverse ? b : a;\n    var v1 = reverse ? a : b;\n    return v0.weight === v1.weight ? v0.index - v1.index : v0.weight - v1.weight;\n  });\n}\nfunction wrapBoxes(boxes) {\n  var layoutBoxes = [];\n  var i, ilen, box, pos, stack, stackWeight;\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    var _box = box;\n    pos = _box.position;\n    var _box$options = _box.options;\n    stack = _box$options.stack;\n    var _box$options$stackWei = _box$options.stackWeight;\n    stackWeight = _box$options$stackWei === void 0 ? 1 : _box$options$stackWei;\n    layoutBoxes.push({\n      index: i,\n      box: box,\n      pos: pos,\n      horizontal: box.isHorizontal(),\n      weight: box.weight,\n      stack: stack && pos + stack,\n      stackWeight: stackWeight\n    });\n  }\n  return layoutBoxes;\n}\nfunction buildStacks(layouts) {\n  var stacks = {};\n  var _iterator6 = _createForOfIteratorHelper(layouts),\n    _step6;\n  try {\n    for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n      var wrap = _step6.value;\n      var stack = wrap.stack,\n        pos = wrap.pos,\n        stackWeight = wrap.stackWeight;\n      if (!stack || !STATIC_POSITIONS.includes(pos)) {\n        continue;\n      }\n      var _stack = stacks[stack] || (stacks[stack] = {\n        count: 0,\n        placed: 0,\n        weight: 0,\n        size: 0\n      });\n      _stack.count++;\n      _stack.weight += stackWeight;\n    }\n  } catch (err) {\n    _iterator6.e(err);\n  } finally {\n    _iterator6.f();\n  }\n  return stacks;\n}\nfunction setLayoutDims(layouts, params) {\n  var stacks = buildStacks(layouts);\n  var vBoxMaxWidth = params.vBoxMaxWidth,\n    hBoxMaxHeight = params.hBoxMaxHeight;\n  var i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    var fullSize = layout.box.fullSize;\n    var stack = stacks[layout.stack];\n    var factor = stack && layout.stackWeight / stack.weight;\n    if (layout.horizontal) {\n      layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n      layout.height = hBoxMaxHeight;\n    } else {\n      layout.width = vBoxMaxWidth;\n      layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n    }\n  }\n  return stacks;\n}\nfunction buildLayoutBoxes(boxes) {\n  var layoutBoxes = wrapBoxes(boxes);\n  var fullSize = sortByWeight(layoutBoxes.filter(function (wrap) {\n    return wrap.box.fullSize;\n  }), true);\n  var left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  var right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  var top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  var bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  var centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  var centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n  return {\n    fullSize: fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout, stacks) {\n  var pos = layout.pos,\n    box = layout.box;\n  var maxPadding = chartArea.maxPadding;\n  if (!isObject(pos)) {\n    if (layout.size) {\n      chartArea[pos] -= layout.size;\n    }\n    var stack = stacks[layout.stack] || {\n      size: 0,\n      count: 1\n    };\n    stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n    layout.size = stack.size / stack.count;\n    chartArea[pos] += layout.size;\n  }\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n  var newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  var newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  var widthChanged = newWidth !== chartArea.w;\n  var heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n  return layout.horizontal ? {\n    same: widthChanged,\n    other: heightChanged\n  } : {\n    same: heightChanged,\n    other: widthChanged\n  };\n}\nfunction handleMaxPadding(chartArea) {\n  var maxPadding = chartArea.maxPadding;\n  function updatePos(pos) {\n    var change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n  var maxPadding = chartArea.maxPadding;\n  function marginForPositions(positions) {\n    var margin = {\n      left: 0,\n      top: 0,\n      right: 0,\n      bottom: 0\n    };\n    positions.forEach(function (pos) {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n  return horizontal ? marginForPositions(['left', 'right']) : marginForPositions(['top', 'bottom']);\n}\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n  var refitBoxes = [];\n  var i, ilen, layout, box, refit, changed;\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n    box.update(layout.width || chartArea.w, layout.height || chartArea.h, getMargins(layout.horizontal, chartArea));\n    var _updateDims = updateDims(chartArea, params, layout, stacks),\n      same = _updateDims.same,\n      other = _updateDims.other;\n    refit |= same && refitBoxes.length;\n    changed = changed || other;\n    if (!box.fullSize) {\n      refitBoxes.push(layout);\n    }\n  }\n  return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\nfunction setBoxDims(box, left, top, width, height) {\n  box.top = top;\n  box.left = left;\n  box.right = left + width;\n  box.bottom = top + height;\n  box.width = width;\n  box.height = height;\n}\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n  var userPadding = params.padding;\n  var x = chartArea.x,\n    y = chartArea.y;\n  var _iterator7 = _createForOfIteratorHelper(boxes),\n    _step7;\n  try {\n    for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {\n      var layout = _step7.value;\n      var box = layout.box;\n      var stack = stacks[layout.stack] || {\n        count: 1,\n        placed: 0,\n        weight: 1\n      };\n      var weight = layout.stackWeight / stack.weight || 1;\n      if (layout.horizontal) {\n        var width = chartArea.w * weight;\n        var height = stack.size || box.height;\n        if (defined(stack.start)) {\n          y = stack.start;\n        }\n        if (box.fullSize) {\n          setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n        } else {\n          setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n        }\n        stack.start = y;\n        stack.placed += width;\n        y = box.bottom;\n      } else {\n        var height1 = chartArea.h * weight;\n        var width1 = stack.size || box.width;\n        if (defined(stack.start)) {\n          x = stack.start;\n        }\n        if (box.fullSize) {\n          setBoxDims(box, x, userPadding.top, width1, params.outerHeight - userPadding.bottom - userPadding.top);\n        } else {\n          setBoxDims(box, x, chartArea.top + stack.placed, width1, height1);\n        }\n        stack.start = x;\n        stack.placed += height1;\n        x = box.right;\n      }\n    }\n  } catch (err) {\n    _iterator7.e(err);\n  } finally {\n    _iterator7.f();\n  }\n  chartArea.x = x;\n  chartArea.y = y;\n}\nvar layouts = {\n  addBox: function addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    item._layers = item._layers || function () {\n      return [{\n        z: 0,\n        draw: function draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n    chart.boxes.push(item);\n  },\n  removeBox: function removeBox(chart, layoutItem) {\n    var index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n  configure: function configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n  update: function update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n    var padding = toPadding(chart.options.layout.padding);\n    var availableWidth = Math.max(width - padding.width, 0);\n    var availableHeight = Math.max(height - padding.height, 0);\n    var boxes = buildLayoutBoxes(chart.boxes);\n    var verticalBoxes = boxes.vertical;\n    var horizontalBoxes = boxes.horizontal;\n    each(chart.boxes, function (box) {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n    var visibleVerticalBoxCount = verticalBoxes.reduce(function (total, wrap) {\n      return wrap.box.options && wrap.box.options.display === false ? total : total + 1;\n    }, 0) || 1;\n    var params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding: padding,\n      availableWidth: availableWidth,\n      availableHeight: availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    var maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    var chartArea = Object.assign({\n      maxPadding: maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n    var stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n    fitBoxes(boxes.fullSize, chartArea, params, stacks);\n    fitBoxes(verticalBoxes, chartArea, params, stacks);\n    if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n      fitBoxes(verticalBoxes, chartArea, params, stacks);\n    }\n    handleMaxPadding(chartArea);\n    placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n    placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w\n    };\n    each(boxes.chartArea, function (layout) {\n      var box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h, {\n        left: 0,\n        top: 0,\n        right: 0,\n        bottom: 0\n      });\n    });\n  }\n};\nvar BasePlatform = /*#__PURE__*/function () {\n  function BasePlatform() {\n    _classCallCheck(this, BasePlatform);\n  }\n  _createClass(BasePlatform, [{\n    key: \"acquireContext\",\n    value: function acquireContext(canvas, aspectRatio) {}\n  }, {\n    key: \"releaseContext\",\n    value: function releaseContext(context) {\n      return false;\n    }\n  }, {\n    key: \"addEventListener\",\n    value: function addEventListener(chart, type, listener) {}\n  }, {\n    key: \"removeEventListener\",\n    value: function removeEventListener(chart, type, listener) {}\n  }, {\n    key: \"getDevicePixelRatio\",\n    value: function getDevicePixelRatio() {\n      return 1;\n    }\n  }, {\n    key: \"getMaximumSize\",\n    value: function getMaximumSize(element, width, height, aspectRatio) {\n      width = Math.max(0, width || element.width);\n      height = height || element.height;\n      return {\n        width: width,\n        height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n      };\n    }\n  }, {\n    key: \"isAttached\",\n    value: function isAttached(canvas) {\n      return true;\n    }\n  }, {\n    key: \"updateConfig\",\n    value: function updateConfig(config) {}\n  }]);\n  return BasePlatform;\n}();\nvar BasicPlatform = /*#__PURE__*/function (_BasePlatform) {\n  _inherits(BasicPlatform, _BasePlatform);\n  var _super9 = _createSuper(BasicPlatform);\n  function BasicPlatform() {\n    _classCallCheck(this, BasicPlatform);\n    return _super9.apply(this, arguments);\n  }\n  _createClass(BasicPlatform, [{\n    key: \"acquireContext\",\n    value: function acquireContext(item) {\n      return item && item.getContext && item.getContext('2d') || null;\n    }\n  }, {\n    key: \"updateConfig\",\n    value: function updateConfig(config) {\n      config.options.animation = false;\n    }\n  }]);\n  return BasicPlatform;\n}(BasePlatform);\nvar EXPANDO_KEY = '$chartjs';\nvar EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\nvar isNullOrEmpty = function isNullOrEmpty(value) {\n  return value === null || value === '';\n};\nfunction initCanvas(canvas, aspectRatio) {\n  var style = canvas.style;\n  var renderHeight = canvas.getAttribute('height');\n  var renderWidth = canvas.getAttribute('width');\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n  style.display = style.display || 'block';\n  style.boxSizing = style.boxSizing || 'border-box';\n  if (isNullOrEmpty(renderWidth)) {\n    var displayWidth = readUsedSize(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      var displayHeight = readUsedSize(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n  return canvas;\n}\nvar eventListenerOptions = supportsEventListenerOptions ? {\n  passive: true\n} : false;\nfunction addListener(node, type, listener) {\n  node.addEventListener(type, listener, eventListenerOptions);\n}\nfunction removeListener(chart, type, listener) {\n  chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\nfunction fromNativeEvent(event, chart) {\n  var type = EVENT_TYPES[event.type] || event.type;\n  var _getRelativePosition = getRelativePosition(event, chart),\n    x = _getRelativePosition.x,\n    y = _getRelativePosition.y;\n  return {\n    type: type,\n    chart: chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null\n  };\n}\nfunction nodeListContains(nodeList, canvas) {\n  var _iterator8 = _createForOfIteratorHelper(nodeList),\n    _step8;\n  try {\n    for (_iterator8.s(); !(_step8 = _iterator8.n()).done;) {\n      var node = _step8.value;\n      if (node === canvas || node.contains(canvas)) {\n        return true;\n      }\n    }\n  } catch (err) {\n    _iterator8.e(err);\n  } finally {\n    _iterator8.f();\n  }\n}\nfunction createAttachObserver(chart, type, listener) {\n  var canvas = chart.canvas;\n  var observer = new MutationObserver(function (entries) {\n    var trigger = false;\n    var _iterator9 = _createForOfIteratorHelper(entries),\n      _step9;\n    try {\n      for (_iterator9.s(); !(_step9 = _iterator9.n()).done;) {\n        var entry = _step9.value;\n        trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n        trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n      }\n    } catch (err) {\n      _iterator9.e(err);\n    } finally {\n      _iterator9.f();\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {\n    childList: true,\n    subtree: true\n  });\n  return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n  var canvas = chart.canvas;\n  var observer = new MutationObserver(function (entries) {\n    var trigger = false;\n    var _iterator10 = _createForOfIteratorHelper(entries),\n      _step10;\n    try {\n      for (_iterator10.s(); !(_step10 = _iterator10.n()).done;) {\n        var entry = _step10.value;\n        trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n        trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n      }\n    } catch (err) {\n      _iterator10.e(err);\n    } finally {\n      _iterator10.f();\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {\n    childList: true,\n    subtree: true\n  });\n  return observer;\n}\nvar drpListeningCharts = new Map();\nvar oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n  var dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach(function (resize, chart) {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\nfunction createResizeObserver(chart, type, listener) {\n  var canvas = chart.canvas;\n  var container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  var resize = throttled(function (width, height) {\n    var w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      listener();\n    }\n  }, window);\n  var observer = new ResizeObserver(function (entries) {\n    var entry = entries[0];\n    var width = entry.contentRect.width;\n    var height = entry.contentRect.height;\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n  return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\nfunction createProxyAndListen(chart, type, listener) {\n  var canvas = chart.canvas;\n  var proxy = throttled(function (event) {\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart);\n  addListener(canvas, type, proxy);\n  return proxy;\n}\nvar DomPlatform = /*#__PURE__*/function (_BasePlatform2) {\n  _inherits(DomPlatform, _BasePlatform2);\n  var _super10 = _createSuper(DomPlatform);\n  function DomPlatform() {\n    _classCallCheck(this, DomPlatform);\n    return _super10.apply(this, arguments);\n  }\n  _createClass(DomPlatform, [{\n    key: \"acquireContext\",\n    value: function acquireContext(canvas, aspectRatio) {\n      var context = canvas && canvas.getContext && canvas.getContext('2d');\n      if (context && context.canvas === canvas) {\n        initCanvas(canvas, aspectRatio);\n        return context;\n      }\n      return null;\n    }\n  }, {\n    key: \"releaseContext\",\n    value: function releaseContext(context) {\n      var canvas = context.canvas;\n      if (!canvas[EXPANDO_KEY]) {\n        return false;\n      }\n      var initial = canvas[EXPANDO_KEY].initial;\n      ['height', 'width'].forEach(function (prop) {\n        var value = initial[prop];\n        if (isNullOrUndef(value)) {\n          canvas.removeAttribute(prop);\n        } else {\n          canvas.setAttribute(prop, value);\n        }\n      });\n      var style = initial.style || {};\n      Object.keys(style).forEach(function (key) {\n        canvas.style[key] = style[key];\n      });\n      canvas.width = canvas.width;\n      delete canvas[EXPANDO_KEY];\n      return true;\n    }\n  }, {\n    key: \"addEventListener\",\n    value: function addEventListener(chart, type, listener) {\n      this.removeEventListener(chart, type);\n      var proxies = chart.$proxies || (chart.$proxies = {});\n      var handlers = {\n        attach: createAttachObserver,\n        detach: createDetachObserver,\n        resize: createResizeObserver\n      };\n      var handler = handlers[type] || createProxyAndListen;\n      proxies[type] = handler(chart, type, listener);\n    }\n  }, {\n    key: \"removeEventListener\",\n    value: function removeEventListener(chart, type) {\n      var proxies = chart.$proxies || (chart.$proxies = {});\n      var proxy = proxies[type];\n      if (!proxy) {\n        return;\n      }\n      var handlers = {\n        attach: releaseObserver,\n        detach: releaseObserver,\n        resize: releaseObserver\n      };\n      var handler = handlers[type] || removeListener;\n      handler(chart, type, proxy);\n      proxies[type] = undefined;\n    }\n  }, {\n    key: \"getDevicePixelRatio\",\n    value: function getDevicePixelRatio() {\n      return window.devicePixelRatio;\n    }\n  }, {\n    key: \"getMaximumSize\",\n    value: function getMaximumSize(canvas, width, height, aspectRatio) {\n      return _getMaximumSize(canvas, width, height, aspectRatio);\n    }\n  }, {\n    key: \"isAttached\",\n    value: function isAttached(canvas) {\n      var container = _getParentNode(canvas);\n      return !!(container && container.isConnected);\n    }\n  }]);\n  return DomPlatform;\n}(BasePlatform);\nfunction _detectPlatform(canvas) {\n  if (!_isDomSupported() || typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas) {\n    return BasicPlatform;\n  }\n  return DomPlatform;\n}\nvar Element = /*#__PURE__*/function () {\n  function Element() {\n    _classCallCheck(this, Element);\n    _defineProperty(this, \"active\", false);\n  }\n  _createClass(Element, [{\n    key: \"tooltipPosition\",\n    value: function tooltipPosition(useFinalPosition) {\n      var _this$getProps = this.getProps(['x', 'y'], useFinalPosition),\n        x = _this$getProps.x,\n        y = _this$getProps.y;\n      return {\n        x: x,\n        y: y\n      };\n    }\n  }, {\n    key: \"hasValue\",\n    value: function hasValue() {\n      return isNumber(this.x) && isNumber(this.y);\n    }\n  }, {\n    key: \"getProps\",\n    value: function getProps(props, final) {\n      var _this8 = this;\n      var anims = this.$animations;\n      if (!final || !anims) {\n        // let's not create an object, if not needed\n        return this;\n      }\n      var ret = {};\n      props.forEach(function (prop) {\n        ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : _this8[prop];\n      });\n      return ret;\n    }\n  }]);\n  return Element;\n}();\n_defineProperty(Element, \"defaults\", {});\n_defineProperty(Element, \"defaultRoutes\", undefined);\nfunction autoSkip(scale, ticks) {\n  var tickOpts = scale.options.ticks;\n  var determinedMaxTicks = determineMaxTicks(scale);\n  var ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\n  var majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  var numMajorIndices = majorIndices.length;\n  var first = majorIndices[0];\n  var last = majorIndices[numMajorIndices - 1];\n  var newTicks = [];\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n  var spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n  if (numMajorIndices > 0) {\n    var i, ilen;\n    var avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\nfunction determineMaxTicks(scale) {\n  var offset = scale.options.offset;\n  var tickLength = scale._tickSize();\n  var maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  var maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  var evenMajorSpacing = getEvenSpacing(majorIndices);\n  var spacing = ticks.length / ticksLimit;\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n  var factors = _factorize(evenMajorSpacing);\n  for (var i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    var factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\nfunction getMajorIndices(ticks) {\n  var result = [];\n  var i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  var count = 0;\n  var next = majorIndices[0];\n  var i;\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  var start = valueOrDefault(majorStart, 0);\n  var end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  var count = 0;\n  var length, i, next;\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n  next = start;\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\nfunction getEvenSpacing(arr) {\n  var len = arr.length;\n  var i, diff;\n  if (len < 2) {\n    return false;\n  }\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\nvar reverseAlign = function reverseAlign(align) {\n  return align === 'left' ? 'right' : align === 'right' ? 'left' : align;\n};\nvar offsetFromEdge = function offsetFromEdge(scale, edge, offset) {\n  return edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\n};\nfunction sample(arr, numItems) {\n  var result = [];\n  var increment = arr.length / numItems;\n  var len = arr.length;\n  var i = 0;\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  var length = scale.ticks.length;\n  var validIndex = Math.min(index, length - 1);\n  var start = scale._startPixel;\n  var end = scale._endPixel;\n  var epsilon = 1e-6;\n  var lineValue = scale.getPixelForTick(validIndex);\n  var offset;\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\nfunction garbageCollect(caches, length) {\n  each(caches, function (cache) {\n    var gc = cache.gc;\n    var gcLen = gc.length / 2;\n    var i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n  var font = toFont(options.font, fallback);\n  var padding = toPadding(options.padding);\n  var lines = isArray(options.text) ? options.text.length : 1;\n  return lines * font.lineHeight + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n  return createContext(parent, {\n    scale: scale,\n    type: 'scale'\n  });\n}\nfunction createTickContext(parent, index, tick) {\n  return createContext(parent, {\n    tick: tick,\n    index: index,\n    type: 'tick'\n  });\n}\nfunction titleAlign(align, position, reverse) {\n  var ret = _toLeftRightCenter(align);\n  if (reverse && position !== 'right' || !reverse && position === 'right') {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n  var top = scale.top,\n    left = scale.left,\n    bottom = scale.bottom,\n    right = scale.right,\n    chart = scale.chart;\n  var chartArea = chart.chartArea,\n    scales = chart.scales;\n  var rotation = 0;\n  var maxWidth, titleX, titleY;\n  var height = bottom - top;\n  var width = right - left;\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n    if (isObject(position)) {\n      var positionAxisID = Object.keys(position)[0];\n      var value = position[positionAxisID];\n      titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n    } else if (position === 'center') {\n      titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n    } else {\n      titleY = offsetFromEdge(scale, position, offset);\n    }\n    maxWidth = right - left;\n  } else {\n    if (isObject(position)) {\n      var positionAxisID1 = Object.keys(position)[0];\n      var value1 = position[positionAxisID1];\n      titleX = scales[positionAxisID1].getPixelForValue(value1) - width + offset;\n    } else if (position === 'center') {\n      titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n    } else {\n      titleX = offsetFromEdge(scale, position, offset);\n    }\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n  return {\n    titleX: titleX,\n    titleY: titleY,\n    maxWidth: maxWidth,\n    rotation: rotation\n  };\n}\nvar Scale = /*#__PURE__*/function (_Element) {\n  _inherits(Scale, _Element);\n  var _super11 = _createSuper(Scale);\n  function Scale(cfg) {\n    var _this9;\n    _classCallCheck(this, Scale);\n    _this9 = _super11.call(this);\n    _this9.id = cfg.id;\n    _this9.type = cfg.type;\n    _this9.options = undefined;\n    _this9.ctx = cfg.ctx;\n    _this9.chart = cfg.chart;\n    _this9.top = undefined;\n    _this9.bottom = undefined;\n    _this9.left = undefined;\n    _this9.right = undefined;\n    _this9.width = undefined;\n    _this9.height = undefined;\n    _this9._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    _this9.maxWidth = undefined;\n    _this9.maxHeight = undefined;\n    _this9.paddingTop = undefined;\n    _this9.paddingBottom = undefined;\n    _this9.paddingLeft = undefined;\n    _this9.paddingRight = undefined;\n    _this9.axis = undefined;\n    _this9.labelRotation = undefined;\n    _this9.min = undefined;\n    _this9.max = undefined;\n    _this9._range = undefined;\n    _this9.ticks = [];\n    _this9._gridLineItems = null;\n    _this9._labelItems = null;\n    _this9._labelSizes = null;\n    _this9._length = 0;\n    _this9._maxLength = 0;\n    _this9._longestTextCache = {};\n    _this9._startPixel = undefined;\n    _this9._endPixel = undefined;\n    _this9._reversePixels = false;\n    _this9._userMax = undefined;\n    _this9._userMin = undefined;\n    _this9._suggestedMax = undefined;\n    _this9._suggestedMin = undefined;\n    _this9._ticksLength = 0;\n    _this9._borderValue = 0;\n    _this9._cache = {};\n    _this9._dataLimitsCached = false;\n    _this9.$context = undefined;\n    return _this9;\n  }\n  _createClass(Scale, [{\n    key: \"init\",\n    value: function init(options) {\n      this.options = options.setContext(this.getContext());\n      this.axis = options.axis;\n      this._userMin = this.parse(options.min);\n      this._userMax = this.parse(options.max);\n      this._suggestedMin = this.parse(options.suggestedMin);\n      this._suggestedMax = this.parse(options.suggestedMax);\n    }\n  }, {\n    key: \"parse\",\n    value: function parse(raw, index) {\n      return raw;\n    }\n  }, {\n    key: \"getUserBounds\",\n    value: function getUserBounds() {\n      var _userMin = this._userMin,\n        _userMax = this._userMax,\n        _suggestedMin = this._suggestedMin,\n        _suggestedMax = this._suggestedMax;\n      _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n      _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n      _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n      _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n      return {\n        min: finiteOrDefault(_userMin, _suggestedMin),\n        max: finiteOrDefault(_userMax, _suggestedMax),\n        minDefined: isNumberFinite(_userMin),\n        maxDefined: isNumberFinite(_userMax)\n      };\n    }\n  }, {\n    key: \"getMinMax\",\n    value: function getMinMax(canStack) {\n      var _this$getUserBounds = this.getUserBounds(),\n        min = _this$getUserBounds.min,\n        max = _this$getUserBounds.max,\n        minDefined = _this$getUserBounds.minDefined,\n        maxDefined = _this$getUserBounds.maxDefined;\n      var range;\n      if (minDefined && maxDefined) {\n        return {\n          min: min,\n          max: max\n        };\n      }\n      var metas = this.getMatchingVisibleMetas();\n      for (var i = 0, ilen = metas.length; i < ilen; ++i) {\n        range = metas[i].controller.getMinMax(this, canStack);\n        if (!minDefined) {\n          min = Math.min(min, range.min);\n        }\n        if (!maxDefined) {\n          max = Math.max(max, range.max);\n        }\n      }\n      min = maxDefined && min > max ? max : min;\n      max = minDefined && min > max ? min : max;\n      return {\n        min: finiteOrDefault(min, finiteOrDefault(max, min)),\n        max: finiteOrDefault(max, finiteOrDefault(min, max))\n      };\n    }\n  }, {\n    key: \"getPadding\",\n    value: function getPadding() {\n      return {\n        left: this.paddingLeft || 0,\n        top: this.paddingTop || 0,\n        right: this.paddingRight || 0,\n        bottom: this.paddingBottom || 0\n      };\n    }\n  }, {\n    key: \"getTicks\",\n    value: function getTicks() {\n      return this.ticks;\n    }\n  }, {\n    key: \"getLabels\",\n    value: function getLabels() {\n      var data = this.chart.data;\n      return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n    }\n  }, {\n    key: \"beforeLayout\",\n    value: function beforeLayout() {\n      this._cache = {};\n      this._dataLimitsCached = false;\n    }\n  }, {\n    key: \"beforeUpdate\",\n    value: function beforeUpdate() {\n      callback(this.options.beforeUpdate, [this]);\n    }\n  }, {\n    key: \"update\",\n    value: function update(maxWidth, maxHeight, margins) {\n      var _this$options4 = this.options,\n        beginAtZero = _this$options4.beginAtZero,\n        grace = _this$options4.grace,\n        tickOpts = _this$options4.ticks;\n      var sampleSize = tickOpts.sampleSize;\n      this.beforeUpdate();\n      this.maxWidth = maxWidth;\n      this.maxHeight = maxHeight;\n      this._margins = margins = Object.assign({\n        left: 0,\n        right: 0,\n        top: 0,\n        bottom: 0\n      }, margins);\n      this.ticks = null;\n      this._labelSizes = null;\n      this._gridLineItems = null;\n      this._labelItems = null;\n      this.beforeSetDimensions();\n      this.setDimensions();\n      this.afterSetDimensions();\n      this._maxLength = this.isHorizontal() ? this.width + margins.left + margins.right : this.height + margins.top + margins.bottom;\n      if (!this._dataLimitsCached) {\n        this.beforeDataLimits();\n        this.determineDataLimits();\n        this.afterDataLimits();\n        this._range = _addGrace(this, grace, beginAtZero);\n        this._dataLimitsCached = true;\n      }\n      this.beforeBuildTicks();\n      this.ticks = this.buildTicks() || [];\n      this.afterBuildTicks();\n      var samplingEnabled = sampleSize < this.ticks.length;\n      this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n      this.configure();\n      this.beforeCalculateLabelRotation();\n      this.calculateLabelRotation();\n      this.afterCalculateLabelRotation();\n      if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n        this.ticks = autoSkip(this, this.ticks);\n        this._labelSizes = null;\n        this.afterAutoSkip();\n      }\n      if (samplingEnabled) {\n        this._convertTicksToLabels(this.ticks);\n      }\n      this.beforeFit();\n      this.fit();\n      this.afterFit();\n      this.afterUpdate();\n    }\n  }, {\n    key: \"configure\",\n    value: function configure() {\n      var reversePixels = this.options.reverse;\n      var startPixel, endPixel;\n      if (this.isHorizontal()) {\n        startPixel = this.left;\n        endPixel = this.right;\n      } else {\n        startPixel = this.top;\n        endPixel = this.bottom;\n        reversePixels = !reversePixels;\n      }\n      this._startPixel = startPixel;\n      this._endPixel = endPixel;\n      this._reversePixels = reversePixels;\n      this._length = endPixel - startPixel;\n      this._alignToPixels = this.options.alignToPixels;\n    }\n  }, {\n    key: \"afterUpdate\",\n    value: function afterUpdate() {\n      callback(this.options.afterUpdate, [this]);\n    }\n  }, {\n    key: \"beforeSetDimensions\",\n    value: function beforeSetDimensions() {\n      callback(this.options.beforeSetDimensions, [this]);\n    }\n  }, {\n    key: \"setDimensions\",\n    value: function setDimensions() {\n      if (this.isHorizontal()) {\n        this.width = this.maxWidth;\n        this.left = 0;\n        this.right = this.width;\n      } else {\n        this.height = this.maxHeight;\n        this.top = 0;\n        this.bottom = this.height;\n      }\n      this.paddingLeft = 0;\n      this.paddingTop = 0;\n      this.paddingRight = 0;\n      this.paddingBottom = 0;\n    }\n  }, {\n    key: \"afterSetDimensions\",\n    value: function afterSetDimensions() {\n      callback(this.options.afterSetDimensions, [this]);\n    }\n  }, {\n    key: \"_callHooks\",\n    value: function _callHooks(name) {\n      this.chart.notifyPlugins(name, this.getContext());\n      callback(this.options[name], [this]);\n    }\n  }, {\n    key: \"beforeDataLimits\",\n    value: function beforeDataLimits() {\n      this._callHooks('beforeDataLimits');\n    }\n  }, {\n    key: \"determineDataLimits\",\n    value: function determineDataLimits() {}\n  }, {\n    key: \"afterDataLimits\",\n    value: function afterDataLimits() {\n      this._callHooks('afterDataLimits');\n    }\n  }, {\n    key: \"beforeBuildTicks\",\n    value: function beforeBuildTicks() {\n      this._callHooks('beforeBuildTicks');\n    }\n  }, {\n    key: \"buildTicks\",\n    value: function buildTicks() {\n      return [];\n    }\n  }, {\n    key: \"afterBuildTicks\",\n    value: function afterBuildTicks() {\n      this._callHooks('afterBuildTicks');\n    }\n  }, {\n    key: \"beforeTickToLabelConversion\",\n    value: function beforeTickToLabelConversion() {\n      callback(this.options.beforeTickToLabelConversion, [this]);\n    }\n  }, {\n    key: \"generateTickLabels\",\n    value: function generateTickLabels(ticks) {\n      var tickOpts = this.options.ticks;\n      var i, ilen, tick;\n      for (i = 0, ilen = ticks.length; i < ilen; i++) {\n        tick = ticks[i];\n        tick.label = callback(tickOpts.callback, [tick.value, i, ticks], this);\n      }\n    }\n  }, {\n    key: \"afterTickToLabelConversion\",\n    value: function afterTickToLabelConversion() {\n      callback(this.options.afterTickToLabelConversion, [this]);\n    }\n  }, {\n    key: \"beforeCalculateLabelRotation\",\n    value: function beforeCalculateLabelRotation() {\n      callback(this.options.beforeCalculateLabelRotation, [this]);\n    }\n  }, {\n    key: \"calculateLabelRotation\",\n    value: function calculateLabelRotation() {\n      var options = this.options;\n      var tickOpts = options.ticks;\n      var numTicks = this.ticks.length;\n      var minRotation = tickOpts.minRotation || 0;\n      var maxRotation = tickOpts.maxRotation;\n      var labelRotation = minRotation;\n      var tickWidth, maxHeight, maxLabelDiagonal;\n      if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n        this.labelRotation = minRotation;\n        return;\n      }\n      var labelSizes = this._getLabelSizes();\n      var maxLabelWidth = labelSizes.widest.width;\n      var maxLabelHeight = labelSizes.highest.height;\n      var maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n      tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n      if (maxLabelWidth + 6 > tickWidth) {\n        tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n        maxHeight = this.maxHeight - getTickMarkLength(options.grid) - tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n        maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n        labelRotation = toDegrees(Math.min(Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)), Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))));\n        labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n      }\n      this.labelRotation = labelRotation;\n    }\n  }, {\n    key: \"afterCalculateLabelRotation\",\n    value: function afterCalculateLabelRotation() {\n      callback(this.options.afterCalculateLabelRotation, [this]);\n    }\n  }, {\n    key: \"afterAutoSkip\",\n    value: function afterAutoSkip() {}\n  }, {\n    key: \"beforeFit\",\n    value: function beforeFit() {\n      callback(this.options.beforeFit, [this]);\n    }\n  }, {\n    key: \"fit\",\n    value: function fit() {\n      var minSize = {\n        width: 0,\n        height: 0\n      };\n      var chart = this.chart,\n        _this$options5 = this.options,\n        tickOpts = _this$options5.ticks,\n        titleOpts = _this$options5.title,\n        gridOpts = _this$options5.grid;\n      var display = this._isVisible();\n      var isHorizontal = this.isHorizontal();\n      if (display) {\n        var titleHeight = getTitleHeight(titleOpts, chart.options.font);\n        if (isHorizontal) {\n          minSize.width = this.maxWidth;\n          minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n        } else {\n          minSize.height = this.maxHeight;\n          minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n        }\n        if (tickOpts.display && this.ticks.length) {\n          var _this$_getLabelSizes = this._getLabelSizes(),\n            first = _this$_getLabelSizes.first,\n            last = _this$_getLabelSizes.last,\n            widest = _this$_getLabelSizes.widest,\n            highest = _this$_getLabelSizes.highest;\n          var tickPadding = tickOpts.padding * 2;\n          var angleRadians = toRadians(this.labelRotation);\n          var cos = Math.cos(angleRadians);\n          var sin = Math.sin(angleRadians);\n          if (isHorizontal) {\n            var labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n            minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n          } else {\n            var labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n            minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n          }\n          this._calculatePadding(first, last, sin, cos);\n        }\n      }\n      this._handleMargins();\n      if (isHorizontal) {\n        this.width = this._length = chart.width - this._margins.left - this._margins.right;\n        this.height = minSize.height;\n      } else {\n        this.width = minSize.width;\n        this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n      }\n    }\n  }, {\n    key: \"_calculatePadding\",\n    value: function _calculatePadding(first, last, sin, cos) {\n      var _this$options6 = this.options,\n        _this$options6$ticks = _this$options6.ticks,\n        align = _this$options6$ticks.align,\n        padding = _this$options6$ticks.padding,\n        position = _this$options6.position;\n      var isRotated = this.labelRotation !== 0;\n      var labelsBelowTicks = position !== 'top' && this.axis === 'x';\n      if (this.isHorizontal()) {\n        var offsetLeft = this.getPixelForTick(0) - this.left;\n        var offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n        var paddingLeft = 0;\n        var paddingRight = 0;\n        if (isRotated) {\n          if (labelsBelowTicks) {\n            paddingLeft = cos * first.width;\n            paddingRight = sin * last.height;\n          } else {\n            paddingLeft = sin * first.height;\n            paddingRight = cos * last.width;\n          }\n        } else if (align === 'start') {\n          paddingRight = last.width;\n        } else if (align === 'end') {\n          paddingLeft = first.width;\n        } else if (align !== 'inner') {\n          paddingLeft = first.width / 2;\n          paddingRight = last.width / 2;\n        }\n        this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n        this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n      } else {\n        var paddingTop = last.height / 2;\n        var paddingBottom = first.height / 2;\n        if (align === 'start') {\n          paddingTop = 0;\n          paddingBottom = first.height;\n        } else if (align === 'end') {\n          paddingTop = last.height;\n          paddingBottom = 0;\n        }\n        this.paddingTop = paddingTop + padding;\n        this.paddingBottom = paddingBottom + padding;\n      }\n    }\n  }, {\n    key: \"_handleMargins\",\n    value: function _handleMargins() {\n      if (this._margins) {\n        this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n        this._margins.top = Math.max(this.paddingTop, this._margins.top);\n        this._margins.right = Math.max(this.paddingRight, this._margins.right);\n        this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n      }\n    }\n  }, {\n    key: \"afterFit\",\n    value: function afterFit() {\n      callback(this.options.afterFit, [this]);\n    }\n  }, {\n    key: \"isHorizontal\",\n    value: function isHorizontal() {\n      var _this$options7 = this.options,\n        axis = _this$options7.axis,\n        position = _this$options7.position;\n      return position === 'top' || position === 'bottom' || axis === 'x';\n    }\n  }, {\n    key: \"isFullSize\",\n    value: function isFullSize() {\n      return this.options.fullSize;\n    }\n  }, {\n    key: \"_convertTicksToLabels\",\n    value: function _convertTicksToLabels(ticks) {\n      this.beforeTickToLabelConversion();\n      this.generateTickLabels(ticks);\n      var i, ilen;\n      for (i = 0, ilen = ticks.length; i < ilen; i++) {\n        if (isNullOrUndef(ticks[i].label)) {\n          ticks.splice(i, 1);\n          ilen--;\n          i--;\n        }\n      }\n      this.afterTickToLabelConversion();\n    }\n  }, {\n    key: \"_getLabelSizes\",\n    value: function _getLabelSizes() {\n      var labelSizes = this._labelSizes;\n      if (!labelSizes) {\n        var sampleSize = this.options.ticks.sampleSize;\n        var ticks = this.ticks;\n        if (sampleSize < ticks.length) {\n          ticks = sample(ticks, sampleSize);\n        }\n        this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length);\n      }\n      return labelSizes;\n    }\n  }, {\n    key: \"_computeLabelSizes\",\n    value: function _computeLabelSizes(ticks, length) {\n      var ctx = this.ctx,\n        caches = this._longestTextCache;\n      var widths = [];\n      var heights = [];\n      var widestLabelSize = 0;\n      var highestLabelSize = 0;\n      var i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n      for (i = 0; i < length; ++i) {\n        label = ticks[i].label;\n        tickFont = this._resolveTickFontOptions(i);\n        ctx.font = fontString = tickFont.string;\n        cache = caches[fontString] = caches[fontString] || {\n          data: {},\n          gc: []\n        };\n        lineHeight = tickFont.lineHeight;\n        width = height = 0;\n        if (!isNullOrUndef(label) && !isArray(label)) {\n          width = _measureText(ctx, cache.data, cache.gc, width, label);\n          height = lineHeight;\n        } else if (isArray(label)) {\n          for (j = 0, jlen = label.length; j < jlen; ++j) {\n            nestedLabel = label[j];\n            if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n              width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n              height += lineHeight;\n            }\n          }\n        }\n        widths.push(width);\n        heights.push(height);\n        widestLabelSize = Math.max(width, widestLabelSize);\n        highestLabelSize = Math.max(height, highestLabelSize);\n      }\n      garbageCollect(caches, length);\n      var widest = widths.indexOf(widestLabelSize);\n      var highest = heights.indexOf(highestLabelSize);\n      var valueAt = function valueAt(idx) {\n        return {\n          width: widths[idx] || 0,\n          height: heights[idx] || 0\n        };\n      };\n      return {\n        first: valueAt(0),\n        last: valueAt(length - 1),\n        widest: valueAt(widest),\n        highest: valueAt(highest),\n        widths: widths,\n        heights: heights\n      };\n    }\n  }, {\n    key: \"getLabelForValue\",\n    value: function getLabelForValue(value) {\n      return value;\n    }\n  }, {\n    key: \"getPixelForValue\",\n    value: function getPixelForValue(value, index) {\n      return NaN;\n    }\n  }, {\n    key: \"getValueForPixel\",\n    value: function getValueForPixel(pixel) {}\n  }, {\n    key: \"getPixelForTick\",\n    value: function getPixelForTick(index) {\n      var ticks = this.ticks;\n      if (index < 0 || index > ticks.length - 1) {\n        return null;\n      }\n      return this.getPixelForValue(ticks[index].value);\n    }\n  }, {\n    key: \"getPixelForDecimal\",\n    value: function getPixelForDecimal(decimal) {\n      if (this._reversePixels) {\n        decimal = 1 - decimal;\n      }\n      var pixel = this._startPixel + decimal * this._length;\n      return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n    }\n  }, {\n    key: \"getDecimalForPixel\",\n    value: function getDecimalForPixel(pixel) {\n      var decimal = (pixel - this._startPixel) / this._length;\n      return this._reversePixels ? 1 - decimal : decimal;\n    }\n  }, {\n    key: \"getBasePixel\",\n    value: function getBasePixel() {\n      return this.getPixelForValue(this.getBaseValue());\n    }\n  }, {\n    key: \"getBaseValue\",\n    value: function getBaseValue() {\n      var min = this.min,\n        max = this.max;\n      return min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n    }\n  }, {\n    key: \"getContext\",\n    value: function getContext(index) {\n      var ticks = this.ticks || [];\n      if (index >= 0 && index < ticks.length) {\n        var tick = ticks[index];\n        return tick.$context || (tick.$context = createTickContext(this.getContext(), index, tick));\n      }\n      return this.$context || (this.$context = createScaleContext(this.chart.getContext(), this));\n    }\n  }, {\n    key: \"_tickSize\",\n    value: function _tickSize() {\n      var optionTicks = this.options.ticks;\n      var rot = toRadians(this.labelRotation);\n      var cos = Math.abs(Math.cos(rot));\n      var sin = Math.abs(Math.sin(rot));\n      var labelSizes = this._getLabelSizes();\n      var padding = optionTicks.autoSkipPadding || 0;\n      var w = labelSizes ? labelSizes.widest.width + padding : 0;\n      var h = labelSizes ? labelSizes.highest.height + padding : 0;\n      return this.isHorizontal() ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\n    }\n  }, {\n    key: \"_isVisible\",\n    value: function _isVisible() {\n      var display = this.options.display;\n      if (display !== 'auto') {\n        return !!display;\n      }\n      return this.getMatchingVisibleMetas().length > 0;\n    }\n  }, {\n    key: \"_computeGridLineItems\",\n    value: function _computeGridLineItems(chartArea) {\n      var axis = this.axis;\n      var chart = this.chart;\n      var options = this.options;\n      var grid = options.grid,\n        position = options.position,\n        border = options.border;\n      var offset = grid.offset;\n      var isHorizontal = this.isHorizontal();\n      var ticks = this.ticks;\n      var ticksLength = ticks.length + (offset ? 1 : 0);\n      var tl = getTickMarkLength(grid);\n      var items = [];\n      var borderOpts = border.setContext(this.getContext());\n      var axisWidth = borderOpts.display ? borderOpts.width : 0;\n      var axisHalfWidth = axisWidth / 2;\n      var alignBorderValue = function alignBorderValue(pixel) {\n        return _alignPixel(chart, pixel, axisWidth);\n      };\n      var borderValue, i, lineValue, alignedLineValue;\n      var tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n      if (position === 'top') {\n        borderValue = alignBorderValue(this.bottom);\n        ty1 = this.bottom - tl;\n        ty2 = borderValue - axisHalfWidth;\n        y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n        y2 = chartArea.bottom;\n      } else if (position === 'bottom') {\n        borderValue = alignBorderValue(this.top);\n        y1 = chartArea.top;\n        y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n        ty1 = borderValue + axisHalfWidth;\n        ty2 = this.top + tl;\n      } else if (position === 'left') {\n        borderValue = alignBorderValue(this.right);\n        tx1 = this.right - tl;\n        tx2 = borderValue - axisHalfWidth;\n        x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n        x2 = chartArea.right;\n      } else if (position === 'right') {\n        borderValue = alignBorderValue(this.left);\n        x1 = chartArea.left;\n        x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n        tx1 = borderValue + axisHalfWidth;\n        tx2 = this.left + tl;\n      } else if (axis === 'x') {\n        if (position === 'center') {\n          borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n        } else if (isObject(position)) {\n          var positionAxisID = Object.keys(position)[0];\n          var value = position[positionAxisID];\n          borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n        }\n        y1 = chartArea.top;\n        y2 = chartArea.bottom;\n        ty1 = borderValue + axisHalfWidth;\n        ty2 = ty1 + tl;\n      } else if (axis === 'y') {\n        if (position === 'center') {\n          borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n        } else if (isObject(position)) {\n          var positionAxisID1 = Object.keys(position)[0];\n          var value1 = position[positionAxisID1];\n          borderValue = alignBorderValue(this.chart.scales[positionAxisID1].getPixelForValue(value1));\n        }\n        tx1 = borderValue - axisHalfWidth;\n        tx2 = tx1 - tl;\n        x1 = chartArea.left;\n        x2 = chartArea.right;\n      }\n      var limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n      var step = Math.max(1, Math.ceil(ticksLength / limit));\n      for (i = 0; i < ticksLength; i += step) {\n        var context = this.getContext(i);\n        var optsAtIndex = grid.setContext(context);\n        var optsAtIndexBorder = border.setContext(context);\n        var lineWidth = optsAtIndex.lineWidth;\n        var lineColor = optsAtIndex.color;\n        var borderDash = optsAtIndexBorder.dash || [];\n        var borderDashOffset = optsAtIndexBorder.dashOffset;\n        var tickWidth = optsAtIndex.tickWidth;\n        var tickColor = optsAtIndex.tickColor;\n        var tickBorderDash = optsAtIndex.tickBorderDash || [];\n        var tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n        lineValue = getPixelForGridLine(this, i, offset);\n        if (lineValue === undefined) {\n          continue;\n        }\n        alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n        if (isHorizontal) {\n          tx1 = tx2 = x1 = x2 = alignedLineValue;\n        } else {\n          ty1 = ty2 = y1 = y2 = alignedLineValue;\n        }\n        items.push({\n          tx1: tx1,\n          ty1: ty1,\n          tx2: tx2,\n          ty2: ty2,\n          x1: x1,\n          y1: y1,\n          x2: x2,\n          y2: y2,\n          width: lineWidth,\n          color: lineColor,\n          borderDash: borderDash,\n          borderDashOffset: borderDashOffset,\n          tickWidth: tickWidth,\n          tickColor: tickColor,\n          tickBorderDash: tickBorderDash,\n          tickBorderDashOffset: tickBorderDashOffset\n        });\n      }\n      this._ticksLength = ticksLength;\n      this._borderValue = borderValue;\n      return items;\n    }\n  }, {\n    key: \"_computeLabelItems\",\n    value: function _computeLabelItems(chartArea) {\n      var axis = this.axis;\n      var options = this.options;\n      var position = options.position,\n        optionTicks = options.ticks;\n      var isHorizontal = this.isHorizontal();\n      var ticks = this.ticks;\n      var align = optionTicks.align,\n        crossAlign = optionTicks.crossAlign,\n        padding = optionTicks.padding,\n        mirror = optionTicks.mirror;\n      var tl = getTickMarkLength(options.grid);\n      var tickAndPadding = tl + padding;\n      var hTickAndPadding = mirror ? -padding : tickAndPadding;\n      var rotation = -toRadians(this.labelRotation);\n      var items = [];\n      var i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n      var textBaseline = 'middle';\n      if (position === 'top') {\n        y = this.bottom - hTickAndPadding;\n        textAlign = this._getXAxisLabelAlignment();\n      } else if (position === 'bottom') {\n        y = this.top + hTickAndPadding;\n        textAlign = this._getXAxisLabelAlignment();\n      } else if (position === 'left') {\n        var ret = this._getYAxisLabelAlignment(tl);\n        textAlign = ret.textAlign;\n        x = ret.x;\n      } else if (position === 'right') {\n        var ret1 = this._getYAxisLabelAlignment(tl);\n        textAlign = ret1.textAlign;\n        x = ret1.x;\n      } else if (axis === 'x') {\n        if (position === 'center') {\n          y = (chartArea.top + chartArea.bottom) / 2 + tickAndPadding;\n        } else if (isObject(position)) {\n          var positionAxisID = Object.keys(position)[0];\n          var value = position[positionAxisID];\n          y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n        }\n        textAlign = this._getXAxisLabelAlignment();\n      } else if (axis === 'y') {\n        if (position === 'center') {\n          x = (chartArea.left + chartArea.right) / 2 - tickAndPadding;\n        } else if (isObject(position)) {\n          var positionAxisID1 = Object.keys(position)[0];\n          var value1 = position[positionAxisID1];\n          x = this.chart.scales[positionAxisID1].getPixelForValue(value1);\n        }\n        textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n      }\n      if (axis === 'y') {\n        if (align === 'start') {\n          textBaseline = 'top';\n        } else if (align === 'end') {\n          textBaseline = 'bottom';\n        }\n      }\n      var labelSizes = this._getLabelSizes();\n      for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n        tick = ticks[i];\n        label = tick.label;\n        var optsAtIndex = optionTicks.setContext(this.getContext(i));\n        pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n        font = this._resolveTickFontOptions(i);\n        lineHeight = font.lineHeight;\n        lineCount = isArray(label) ? label.length : 1;\n        var halfCount = lineCount / 2;\n        var color = optsAtIndex.color;\n        var strokeColor = optsAtIndex.textStrokeColor;\n        var strokeWidth = optsAtIndex.textStrokeWidth;\n        var tickTextAlign = textAlign;\n        if (isHorizontal) {\n          x = pixel;\n          if (textAlign === 'inner') {\n            if (i === ilen - 1) {\n              tickTextAlign = !this.options.reverse ? 'right' : 'left';\n            } else if (i === 0) {\n              tickTextAlign = !this.options.reverse ? 'left' : 'right';\n            } else {\n              tickTextAlign = 'center';\n            }\n          }\n          if (position === 'top') {\n            if (crossAlign === 'near' || rotation !== 0) {\n              textOffset = -lineCount * lineHeight + lineHeight / 2;\n            } else if (crossAlign === 'center') {\n              textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n            } else {\n              textOffset = -labelSizes.highest.height + lineHeight / 2;\n            }\n          } else {\n            if (crossAlign === 'near' || rotation !== 0) {\n              textOffset = lineHeight / 2;\n            } else if (crossAlign === 'center') {\n              textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n            } else {\n              textOffset = labelSizes.highest.height - lineCount * lineHeight;\n            }\n          }\n          if (mirror) {\n            textOffset *= -1;\n          }\n          if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) {\n            x += lineHeight / 2 * Math.sin(rotation);\n          }\n        } else {\n          y = pixel;\n          textOffset = (1 - lineCount) * lineHeight / 2;\n        }\n        var backdrop = void 0;\n        if (optsAtIndex.showLabelBackdrop) {\n          var labelPadding = toPadding(optsAtIndex.backdropPadding);\n          var height = labelSizes.heights[i];\n          var width = labelSizes.widths[i];\n          var top = textOffset - labelPadding.top;\n          var left = 0 - labelPadding.left;\n          switch (textBaseline) {\n            case 'middle':\n              top -= height / 2;\n              break;\n            case 'bottom':\n              top -= height;\n              break;\n          }\n          switch (textAlign) {\n            case 'center':\n              left -= width / 2;\n              break;\n            case 'right':\n              left -= width;\n              break;\n          }\n          backdrop = {\n            left: left,\n            top: top,\n            width: width + labelPadding.width,\n            height: height + labelPadding.height,\n            color: optsAtIndex.backdropColor\n          };\n        }\n        items.push({\n          rotation: rotation,\n          label: label,\n          font: font,\n          color: color,\n          strokeColor: strokeColor,\n          strokeWidth: strokeWidth,\n          textOffset: textOffset,\n          textAlign: tickTextAlign,\n          textBaseline: textBaseline,\n          translation: [x, y],\n          backdrop: backdrop\n        });\n      }\n      return items;\n    }\n  }, {\n    key: \"_getXAxisLabelAlignment\",\n    value: function _getXAxisLabelAlignment() {\n      var _this$options8 = this.options,\n        position = _this$options8.position,\n        ticks = _this$options8.ticks;\n      var rotation = -toRadians(this.labelRotation);\n      if (rotation) {\n        return position === 'top' ? 'left' : 'right';\n      }\n      var align = 'center';\n      if (ticks.align === 'start') {\n        align = 'left';\n      } else if (ticks.align === 'end') {\n        align = 'right';\n      } else if (ticks.align === 'inner') {\n        align = 'inner';\n      }\n      return align;\n    }\n  }, {\n    key: \"_getYAxisLabelAlignment\",\n    value: function _getYAxisLabelAlignment(tl) {\n      var _this$options9 = this.options,\n        position = _this$options9.position,\n        _this$options9$ticks = _this$options9.ticks,\n        crossAlign = _this$options9$ticks.crossAlign,\n        mirror = _this$options9$ticks.mirror,\n        padding = _this$options9$ticks.padding;\n      var labelSizes = this._getLabelSizes();\n      var tickAndPadding = tl + padding;\n      var widest = labelSizes.widest.width;\n      var textAlign;\n      var x;\n      if (position === 'left') {\n        if (mirror) {\n          x = this.right + padding;\n          if (crossAlign === 'near') {\n            textAlign = 'left';\n          } else if (crossAlign === 'center') {\n            textAlign = 'center';\n            x += widest / 2;\n          } else {\n            textAlign = 'right';\n            x += widest;\n          }\n        } else {\n          x = this.right - tickAndPadding;\n          if (crossAlign === 'near') {\n            textAlign = 'right';\n          } else if (crossAlign === 'center') {\n            textAlign = 'center';\n            x -= widest / 2;\n          } else {\n            textAlign = 'left';\n            x = this.left;\n          }\n        }\n      } else if (position === 'right') {\n        if (mirror) {\n          x = this.left + padding;\n          if (crossAlign === 'near') {\n            textAlign = 'right';\n          } else if (crossAlign === 'center') {\n            textAlign = 'center';\n            x -= widest / 2;\n          } else {\n            textAlign = 'left';\n            x -= widest;\n          }\n        } else {\n          x = this.left + tickAndPadding;\n          if (crossAlign === 'near') {\n            textAlign = 'left';\n          } else if (crossAlign === 'center') {\n            textAlign = 'center';\n            x += widest / 2;\n          } else {\n            textAlign = 'right';\n            x = this.right;\n          }\n        }\n      } else {\n        textAlign = 'right';\n      }\n      return {\n        textAlign: textAlign,\n        x: x\n      };\n    }\n  }, {\n    key: \"_computeLabelArea\",\n    value: function _computeLabelArea() {\n      if (this.options.ticks.mirror) {\n        return;\n      }\n      var chart = this.chart;\n      var position = this.options.position;\n      if (position === 'left' || position === 'right') {\n        return {\n          top: 0,\n          left: this.left,\n          bottom: chart.height,\n          right: this.right\n        };\n      }\n      if (position === 'top' || position === 'bottom') {\n        return {\n          top: this.top,\n          left: 0,\n          bottom: this.bottom,\n          right: chart.width\n        };\n      }\n    }\n  }, {\n    key: \"drawBackground\",\n    value: function drawBackground() {\n      var ctx = this.ctx,\n        backgroundColor = this.options.backgroundColor,\n        left = this.left,\n        top = this.top,\n        width = this.width,\n        height = this.height;\n      if (backgroundColor) {\n        ctx.save();\n        ctx.fillStyle = backgroundColor;\n        ctx.fillRect(left, top, width, height);\n        ctx.restore();\n      }\n    }\n  }, {\n    key: \"getLineWidthForValue\",\n    value: function getLineWidthForValue(value) {\n      var grid = this.options.grid;\n      if (!this._isVisible() || !grid.display) {\n        return 0;\n      }\n      var ticks = this.ticks;\n      var index = ticks.findIndex(function (t) {\n        return t.value === value;\n      });\n      if (index >= 0) {\n        var opts = grid.setContext(this.getContext(index));\n        return opts.lineWidth;\n      }\n      return 0;\n    }\n  }, {\n    key: \"drawGrid\",\n    value: function drawGrid(chartArea) {\n      var grid = this.options.grid;\n      var ctx = this.ctx;\n      var items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n      var i, ilen;\n      var drawLine = function drawLine(p1, p2, style) {\n        if (!style.width || !style.color) {\n          return;\n        }\n        ctx.save();\n        ctx.lineWidth = style.width;\n        ctx.strokeStyle = style.color;\n        ctx.setLineDash(style.borderDash || []);\n        ctx.lineDashOffset = style.borderDashOffset;\n        ctx.beginPath();\n        ctx.moveTo(p1.x, p1.y);\n        ctx.lineTo(p2.x, p2.y);\n        ctx.stroke();\n        ctx.restore();\n      };\n      if (grid.display) {\n        for (i = 0, ilen = items.length; i < ilen; ++i) {\n          var item = items[i];\n          if (grid.drawOnChartArea) {\n            drawLine({\n              x: item.x1,\n              y: item.y1\n            }, {\n              x: item.x2,\n              y: item.y2\n            }, item);\n          }\n          if (grid.drawTicks) {\n            drawLine({\n              x: item.tx1,\n              y: item.ty1\n            }, {\n              x: item.tx2,\n              y: item.ty2\n            }, {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            });\n          }\n        }\n      }\n    }\n  }, {\n    key: \"drawBorder\",\n    value: function drawBorder() {\n      var chart = this.chart,\n        ctx = this.ctx,\n        _this$options10 = this.options,\n        border = _this$options10.border,\n        grid = _this$options10.grid;\n      var borderOpts = border.setContext(this.getContext());\n      var axisWidth = border.display ? borderOpts.width : 0;\n      if (!axisWidth) {\n        return;\n      }\n      var lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n      var borderValue = this._borderValue;\n      var x1, x2, y1, y2;\n      if (this.isHorizontal()) {\n        x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n        x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n        y1 = y2 = borderValue;\n      } else {\n        y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n        y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n        x1 = x2 = borderValue;\n      }\n      ctx.save();\n      ctx.lineWidth = borderOpts.width;\n      ctx.strokeStyle = borderOpts.color;\n      ctx.beginPath();\n      ctx.moveTo(x1, y1);\n      ctx.lineTo(x2, y2);\n      ctx.stroke();\n      ctx.restore();\n    }\n  }, {\n    key: \"drawLabels\",\n    value: function drawLabels(chartArea) {\n      var optionTicks = this.options.ticks;\n      if (!optionTicks.display) {\n        return;\n      }\n      var ctx = this.ctx;\n      var area = this._computeLabelArea();\n      if (area) {\n        clipArea(ctx, area);\n      }\n      var items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n      var i, ilen;\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        var item = items[i];\n        var tickFont = item.font;\n        var label = item.label;\n        var y = item.textOffset;\n        renderText(ctx, label, 0, y, tickFont, item);\n      }\n      if (area) {\n        unclipArea(ctx);\n      }\n    }\n  }, {\n    key: \"drawTitle\",\n    value: function drawTitle() {\n      var ctx = this.ctx,\n        _this$options11 = this.options,\n        position = _this$options11.position,\n        title = _this$options11.title,\n        reverse = _this$options11.reverse;\n      if (!title.display) {\n        return;\n      }\n      var font = toFont(title.font);\n      var padding = toPadding(title.padding);\n      var align = title.align;\n      var offset = font.lineHeight / 2;\n      if (position === 'bottom' || position === 'center' || isObject(position)) {\n        offset += padding.bottom;\n        if (isArray(title.text)) {\n          offset += font.lineHeight * (title.text.length - 1);\n        }\n      } else {\n        offset += padding.top;\n      }\n      var _titleArgs = titleArgs(this, offset, position, align),\n        titleX = _titleArgs.titleX,\n        titleY = _titleArgs.titleY,\n        maxWidth = _titleArgs.maxWidth,\n        rotation = _titleArgs.rotation;\n      renderText(ctx, title.text, 0, 0, font, {\n        color: title.color,\n        maxWidth: maxWidth,\n        rotation: rotation,\n        textAlign: titleAlign(align, position, reverse),\n        textBaseline: 'middle',\n        translation: [titleX, titleY]\n      });\n    }\n  }, {\n    key: \"draw\",\n    value: function draw(chartArea) {\n      if (!this._isVisible()) {\n        return;\n      }\n      this.drawBackground();\n      this.drawGrid(chartArea);\n      this.drawBorder();\n      this.drawTitle();\n      this.drawLabels(chartArea);\n    }\n  }, {\n    key: \"_layers\",\n    value: function _layers() {\n      var _this10 = this;\n      var opts = this.options;\n      var tz = opts.ticks && opts.ticks.z || 0;\n      var gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n      var bz = valueOrDefault(opts.border && opts.border.z, 0);\n      if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n        return [{\n          z: tz,\n          draw: function draw(chartArea) {\n            _this10.draw(chartArea);\n          }\n        }];\n      }\n      return [{\n        z: gz,\n        draw: function draw(chartArea) {\n          _this10.drawBackground();\n          _this10.drawGrid(chartArea);\n          _this10.drawTitle();\n        }\n      }, {\n        z: bz,\n        draw: function draw() {\n          _this10.drawBorder();\n        }\n      }, {\n        z: tz,\n        draw: function draw(chartArea) {\n          _this10.drawLabels(chartArea);\n        }\n      }];\n    }\n  }, {\n    key: \"getMatchingVisibleMetas\",\n    value: function getMatchingVisibleMetas(type) {\n      var metas = this.chart.getSortedVisibleDatasetMetas();\n      var axisID = this.axis + 'AxisID';\n      var result = [];\n      var i, ilen;\n      for (i = 0, ilen = metas.length; i < ilen; ++i) {\n        var meta = metas[i];\n        if (meta[axisID] === this.id && (!type || meta.type === type)) {\n          result.push(meta);\n        }\n      }\n      return result;\n    }\n  }, {\n    key: \"_resolveTickFontOptions\",\n    value: function _resolveTickFontOptions(index) {\n      var opts = this.options.ticks.setContext(this.getContext(index));\n      return toFont(opts.font);\n    }\n  }, {\n    key: \"_maxDigits\",\n    value: function _maxDigits() {\n      var fontSize = this._resolveTickFontOptions(0).lineHeight;\n      return (this.isHorizontal() ? this.width : this.height) / fontSize;\n    }\n  }]);\n  return Scale;\n}(Element);\nvar TypedRegistry = /*#__PURE__*/function () {\n  function TypedRegistry(type, scope, override) {\n    _classCallCheck(this, TypedRegistry);\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n  _createClass(TypedRegistry, [{\n    key: \"isForType\",\n    value: function isForType(type) {\n      return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n    }\n  }, {\n    key: \"register\",\n    value: function register(item) {\n      var proto = Object.getPrototypeOf(item);\n      var parentScope;\n      if (isIChartComponent(proto)) {\n        parentScope = this.register(proto);\n      }\n      var items = this.items;\n      var id = item.id;\n      var scope = this.scope + '.' + id;\n      if (!id) {\n        throw new Error('class does not have id: ' + item);\n      }\n      if (id in items) {\n        return scope;\n      }\n      items[id] = item;\n      registerDefaults(item, scope, parentScope);\n      if (this.override) {\n        defaults.override(item.id, item.overrides);\n      }\n      return scope;\n    }\n  }, {\n    key: \"get\",\n    value: function get(id) {\n      return this.items[id];\n    }\n  }, {\n    key: \"unregister\",\n    value: function unregister(item) {\n      var items = this.items;\n      var id = item.id;\n      var scope = this.scope;\n      if (id in items) {\n        delete items[id];\n      }\n      if (scope && id in defaults[scope]) {\n        delete defaults[scope][id];\n        if (this.override) {\n          delete overrides[id];\n        }\n      }\n    }\n  }]);\n  return TypedRegistry;\n}();\nfunction registerDefaults(item, scope, parentScope) {\n  var itemDefaults = merge(Object.create(null), [parentScope ? defaults.get(parentScope) : {}, defaults.get(scope), item.defaults]);\n  defaults.set(scope, itemDefaults);\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(function (property) {\n    var propertyParts = property.split('.');\n    var sourceName = propertyParts.pop();\n    var sourceScope = [scope].concat(propertyParts).join('.');\n    var parts = routes[property].split('.');\n    var targetName = parts.pop();\n    var targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\nvar Registry = /*#__PURE__*/function () {\n  function Registry() {\n    _classCallCheck(this, Registry);\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n  _createClass(Registry, [{\n    key: \"add\",\n    value: function add() {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      this._each('register', args);\n    }\n  }, {\n    key: \"remove\",\n    value: function remove() {\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n      this._each('unregister', args);\n    }\n  }, {\n    key: \"addControllers\",\n    value: function addControllers() {\n      for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n        args[_key3] = arguments[_key3];\n      }\n      this._each('register', args, this.controllers);\n    }\n  }, {\n    key: \"addElements\",\n    value: function addElements() {\n      for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n        args[_key4] = arguments[_key4];\n      }\n      this._each('register', args, this.elements);\n    }\n  }, {\n    key: \"addPlugins\",\n    value: function addPlugins() {\n      for (var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n        args[_key5] = arguments[_key5];\n      }\n      this._each('register', args, this.plugins);\n    }\n  }, {\n    key: \"addScales\",\n    value: function addScales() {\n      for (var _len6 = arguments.length, args = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {\n        args[_key6] = arguments[_key6];\n      }\n      this._each('register', args, this.scales);\n    }\n  }, {\n    key: \"getController\",\n    value: function getController(id) {\n      return this._get(id, this.controllers, 'controller');\n    }\n  }, {\n    key: \"getElement\",\n    value: function getElement(id) {\n      return this._get(id, this.elements, 'element');\n    }\n  }, {\n    key: \"getPlugin\",\n    value: function getPlugin(id) {\n      return this._get(id, this.plugins, 'plugin');\n    }\n  }, {\n    key: \"getScale\",\n    value: function getScale(id) {\n      return this._get(id, this.scales, 'scale');\n    }\n  }, {\n    key: \"removeControllers\",\n    value: function removeControllers() {\n      for (var _len7 = arguments.length, args = new Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {\n        args[_key7] = arguments[_key7];\n      }\n      this._each('unregister', args, this.controllers);\n    }\n  }, {\n    key: \"removeElements\",\n    value: function removeElements() {\n      for (var _len8 = arguments.length, args = new Array(_len8), _key8 = 0; _key8 < _len8; _key8++) {\n        args[_key8] = arguments[_key8];\n      }\n      this._each('unregister', args, this.elements);\n    }\n  }, {\n    key: \"removePlugins\",\n    value: function removePlugins() {\n      for (var _len9 = arguments.length, args = new Array(_len9), _key9 = 0; _key9 < _len9; _key9++) {\n        args[_key9] = arguments[_key9];\n      }\n      this._each('unregister', args, this.plugins);\n    }\n  }, {\n    key: \"removeScales\",\n    value: function removeScales() {\n      for (var _len10 = arguments.length, args = new Array(_len10), _key10 = 0; _key10 < _len10; _key10++) {\n        args[_key10] = arguments[_key10];\n      }\n      this._each('unregister', args, this.scales);\n    }\n  }, {\n    key: \"_each\",\n    value: function _each(method, args, typedRegistry) {\n      var _this11 = this;\n      _toConsumableArray(args).forEach(function (arg) {\n        var reg = typedRegistry || _this11._getRegistryForType(arg);\n        if (typedRegistry || reg.isForType(arg) || reg === _this11.plugins && arg.id) {\n          _this11._exec(method, reg, arg);\n        } else {\n          each(arg, function (item) {\n            var itemReg = typedRegistry || _this11._getRegistryForType(item);\n            _this11._exec(method, itemReg, item);\n          });\n        }\n      });\n    }\n  }, {\n    key: \"_exec\",\n    value: function _exec(method, registry, component) {\n      var camelMethod = _capitalize(method);\n      callback(component['before' + camelMethod], [], component);\n      registry[method](component);\n      callback(component['after' + camelMethod], [], component);\n    }\n  }, {\n    key: \"_getRegistryForType\",\n    value: function _getRegistryForType(type) {\n      for (var i = 0; i < this._typedRegistries.length; i++) {\n        var reg = this._typedRegistries[i];\n        if (reg.isForType(type)) {\n          return reg;\n        }\n      }\n      return this.plugins;\n    }\n  }, {\n    key: \"_get\",\n    value: function _get(id, typedRegistry, type) {\n      var item = typedRegistry.get(id);\n      if (item === undefined) {\n        throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n      }\n      return item;\n    }\n  }]);\n  return Registry;\n}();\nvar registry = /* #__PURE__ */new Registry();\nvar PluginService = /*#__PURE__*/function () {\n  function PluginService() {\n    _classCallCheck(this, PluginService);\n    this._init = [];\n  }\n  _createClass(PluginService, [{\n    key: \"notify\",\n    value: function notify(chart, hook, args, filter) {\n      if (hook === 'beforeInit') {\n        this._init = this._createDescriptors(chart, true);\n        this._notify(this._init, chart, 'install');\n      }\n      var descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n      var result = this._notify(descriptors, chart, hook, args);\n      if (hook === 'afterDestroy') {\n        this._notify(descriptors, chart, 'stop');\n        this._notify(this._init, chart, 'uninstall');\n      }\n      return result;\n    }\n  }, {\n    key: \"_notify\",\n    value: function _notify(descriptors, chart, hook, args) {\n      args = args || {};\n      var _iterator11 = _createForOfIteratorHelper(descriptors),\n        _step11;\n      try {\n        for (_iterator11.s(); !(_step11 = _iterator11.n()).done;) {\n          var descriptor = _step11.value;\n          var plugin = descriptor.plugin;\n          var method = plugin[hook];\n          var params = [chart, args, descriptor.options];\n          if (callback(method, params, plugin) === false && args.cancelable) {\n            return false;\n          }\n        }\n      } catch (err) {\n        _iterator11.e(err);\n      } finally {\n        _iterator11.f();\n      }\n      return true;\n    }\n  }, {\n    key: \"invalidate\",\n    value: function invalidate() {\n      if (!isNullOrUndef(this._cache)) {\n        this._oldCache = this._cache;\n        this._cache = undefined;\n      }\n    }\n  }, {\n    key: \"_descriptors\",\n    value: function _descriptors(chart) {\n      if (this._cache) {\n        return this._cache;\n      }\n      var descriptors = this._cache = this._createDescriptors(chart);\n      this._notifyStateChanges(chart);\n      return descriptors;\n    }\n  }, {\n    key: \"_createDescriptors\",\n    value: function _createDescriptors(chart, all) {\n      var config = chart && chart.config;\n      var options = valueOrDefault(config.options && config.options.plugins, {});\n      var plugins = allPlugins(config);\n      return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n    }\n  }, {\n    key: \"_notifyStateChanges\",\n    value: function _notifyStateChanges(chart) {\n      var previousDescriptors = this._oldCache || [];\n      var descriptors = this._cache;\n      var diff = function diff(a, b) {\n        return a.filter(function (x) {\n          return !b.some(function (y) {\n            return x.plugin.id === y.plugin.id;\n          });\n        });\n      };\n      this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n      this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n    }\n  }]);\n  return PluginService;\n}();\nfunction allPlugins(config) {\n  var localIds = {};\n  var plugins = [];\n  var keys = Object.keys(registry.plugins.items);\n  for (var i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n  var local = config.plugins || [];\n  for (var i1 = 0; i1 < local.length; i1++) {\n    var plugin = local[i1];\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n      localIds[plugin.id] = true;\n    }\n  }\n  return {\n    plugins: plugins,\n    localIds: localIds\n  };\n}\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\nfunction createDescriptors(chart, _ref2, options, all) {\n  var plugins = _ref2.plugins,\n    localIds = _ref2.localIds;\n  var result = [];\n  var context = chart.getContext();\n  var _iterator12 = _createForOfIteratorHelper(plugins),\n    _step12;\n  try {\n    for (_iterator12.s(); !(_step12 = _iterator12.n()).done;) {\n      var plugin = _step12.value;\n      var id = plugin.id;\n      var opts = getOpts(options[id], all);\n      if (opts === null) {\n        continue;\n      }\n      result.push({\n        plugin: plugin,\n        options: pluginOpts(chart.config, {\n          plugin: plugin,\n          local: localIds[id]\n        }, opts, context)\n      });\n    }\n  } catch (err) {\n    _iterator12.e(err);\n  } finally {\n    _iterator12.f();\n  }\n  return result;\n}\nfunction pluginOpts(config, _ref3, opts, context) {\n  var plugin = _ref3.plugin,\n    local = _ref3.local;\n  var keys = config.pluginScopeKeys(plugin);\n  var scopes = config.getOptionScopes(opts, keys);\n  if (local && plugin.defaults) {\n    scopes.push(plugin.defaults);\n  }\n  return config.createResolver(scopes, context, [''], {\n    scriptable: false,\n    indexable: false,\n    allKeys: true\n  });\n}\nfunction getIndexAxis(type, options) {\n  var datasetDefaults = defaults.datasets[type] || {};\n  var datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  var axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\nfunction determineAxis(id, scaleOptions) {\n  if (id === 'x' || id === 'y' || id === 'r') {\n    return id;\n  }\n  id = scaleOptions.axis || axisFromPosition(scaleOptions.position) || id.length > 1 && determineAxis(id[0].toLowerCase(), scaleOptions);\n  if (id) {\n    return id;\n  }\n  throw new Error(\"Cannot determine type of '\".concat(name, \"' axis. Please provide 'axis' or 'position' option.\"));\n}\nfunction mergeScaleConfig(config, options) {\n  var chartDefaults = overrides[config.type] || {\n    scales: {}\n  };\n  var configScales = options.scales || {};\n  var chartIndexAxis = getIndexAxis(config.type, options);\n  var scales = Object.create(null);\n  Object.keys(configScales).forEach(function (id) {\n    var scaleConf = configScales[id];\n    if (!isObject(scaleConf)) {\n      return console.error(\"Invalid scale configuration for scale: \".concat(id));\n    }\n    if (scaleConf._proxy) {\n      return console.warn(\"Ignoring resolver passed as options for scale: \".concat(id));\n    }\n    var axis = determineAxis(id, scaleConf);\n    var defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    var defaultScaleOptions = chartDefaults.scales || {};\n    scales[id] = mergeIf(Object.create(null), [{\n      axis: axis\n    }, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n  config.data.datasets.forEach(function (dataset) {\n    var type = dataset.type || config.type;\n    var indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    var datasetDefaults = overrides[type] || {};\n    var defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(function (defaultID) {\n      var axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      var id = dataset[axis + 'AxisID'] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{\n        axis: axis\n      }, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n  Object.keys(scales).forEach(function (key) {\n    var scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n  return scales;\n}\nfunction initOptions(config) {\n  var options = config.options || (config.options = {});\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n  initOptions(config);\n  return config;\n}\nvar keyCache = new Map();\nvar keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n  var keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\nvar addIfFound = function addIfFound(set, obj, key) {\n  var opts = resolveObjectKey(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\nvar Config = /*#__PURE__*/function () {\n  function Config(config) {\n    _classCallCheck(this, Config);\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n  _createClass(Config, [{\n    key: \"platform\",\n    get: function get() {\n      return this._config.platform;\n    }\n  }, {\n    key: \"type\",\n    get: function get() {\n      return this._config.type;\n    },\n    set: function set(type) {\n      this._config.type = type;\n    }\n  }, {\n    key: \"data\",\n    get: function get() {\n      return this._config.data;\n    },\n    set: function set(data) {\n      this._config.data = initData(data);\n    }\n  }, {\n    key: \"options\",\n    get: function get() {\n      return this._config.options;\n    },\n    set: function set(options) {\n      this._config.options = options;\n    }\n  }, {\n    key: \"plugins\",\n    get: function get() {\n      return this._config.plugins;\n    }\n  }, {\n    key: \"update\",\n    value: function update() {\n      var config = this._config;\n      this.clearCache();\n      initOptions(config);\n    }\n  }, {\n    key: \"clearCache\",\n    value: function clearCache() {\n      this._scopeCache.clear();\n      this._resolverCache.clear();\n    }\n  }, {\n    key: \"datasetScopeKeys\",\n    value: function datasetScopeKeys(datasetType) {\n      return cachedKeys(datasetType, function () {\n        return [[\"datasets.\".concat(datasetType), '']];\n      });\n    }\n  }, {\n    key: \"datasetAnimationScopeKeys\",\n    value: function datasetAnimationScopeKeys(datasetType, transition) {\n      return cachedKeys(\"\".concat(datasetType, \".transition.\").concat(transition), function () {\n        return [[\"datasets.\".concat(datasetType, \".transitions.\").concat(transition), \"transitions.\".concat(transition)], [\"datasets.\".concat(datasetType), '']];\n      });\n    }\n  }, {\n    key: \"datasetElementScopeKeys\",\n    value: function datasetElementScopeKeys(datasetType, elementType) {\n      return cachedKeys(\"\".concat(datasetType, \"-\").concat(elementType), function () {\n        return [[\"datasets.\".concat(datasetType, \".elements.\").concat(elementType), \"datasets.\".concat(datasetType), \"elements.\".concat(elementType), '']];\n      });\n    }\n  }, {\n    key: \"pluginScopeKeys\",\n    value: function pluginScopeKeys(plugin) {\n      var id = plugin.id;\n      var type = this.type;\n      return cachedKeys(\"\".concat(type, \"-plugin-\").concat(id), function () {\n        return [[\"plugins.\".concat(id)].concat(_toConsumableArray(plugin.additionalOptionScopes || []))];\n      });\n    }\n  }, {\n    key: \"_cachedScopes\",\n    value: function _cachedScopes(mainScope, resetCache) {\n      var _scopeCache = this._scopeCache;\n      var cache = _scopeCache.get(mainScope);\n      if (!cache || resetCache) {\n        cache = new Map();\n        _scopeCache.set(mainScope, cache);\n      }\n      return cache;\n    }\n  }, {\n    key: \"getOptionScopes\",\n    value: function getOptionScopes(mainScope, keyLists, resetCache) {\n      var options = this.options,\n        type = this.type;\n      var cache = this._cachedScopes(mainScope, resetCache);\n      var cached = cache.get(keyLists);\n      if (cached) {\n        return cached;\n      }\n      var scopes = new Set();\n      keyLists.forEach(function (keys) {\n        if (mainScope) {\n          scopes.add(mainScope);\n          keys.forEach(function (key) {\n            return addIfFound(scopes, mainScope, key);\n          });\n        }\n        keys.forEach(function (key) {\n          return addIfFound(scopes, options, key);\n        });\n        keys.forEach(function (key) {\n          return addIfFound(scopes, overrides[type] || {}, key);\n        });\n        keys.forEach(function (key) {\n          return addIfFound(scopes, defaults, key);\n        });\n        keys.forEach(function (key) {\n          return addIfFound(scopes, descriptors, key);\n        });\n      });\n      var array = Array.from(scopes);\n      if (array.length === 0) {\n        array.push(Object.create(null));\n      }\n      if (keysCached.has(keyLists)) {\n        cache.set(keyLists, array);\n      }\n      return array;\n    }\n  }, {\n    key: \"chartOptionScopes\",\n    value: function chartOptionScopes() {\n      var options = this.options,\n        type = this.type;\n      return [options, overrides[type] || {}, defaults.datasets[type] || {}, {\n        type: type\n      }, defaults, descriptors];\n    }\n  }, {\n    key: \"resolveNamedOptions\",\n    value: function resolveNamedOptions(scopes, names, context) {\n      var prefixes = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [''];\n      var result = {\n        $shared: true\n      };\n      var _getResolver = getResolver(this._resolverCache, scopes, prefixes),\n        resolver = _getResolver.resolver,\n        subPrefixes = _getResolver.subPrefixes;\n      var options = resolver;\n      if (needContext(resolver, names)) {\n        result.$shared = false;\n        context = isFunction(context) ? context() : context;\n        var subResolver = this.createResolver(scopes, context, subPrefixes);\n        options = _attachContext(resolver, context, subResolver);\n      }\n      var _iterator13 = _createForOfIteratorHelper(names),\n        _step13;\n      try {\n        for (_iterator13.s(); !(_step13 = _iterator13.n()).done;) {\n          var prop = _step13.value;\n          result[prop] = options[prop];\n        }\n      } catch (err) {\n        _iterator13.e(err);\n      } finally {\n        _iterator13.f();\n      }\n      return result;\n    }\n  }, {\n    key: \"createResolver\",\n    value: function createResolver(scopes, context) {\n      var prefixes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [''];\n      var descriptorDefaults = arguments.length > 3 ? arguments[3] : undefined;\n      var _getResolver2 = getResolver(this._resolverCache, scopes, prefixes),\n        resolver = _getResolver2.resolver;\n      return isObject(context) ? _attachContext(resolver, context, undefined, descriptorDefaults) : resolver;\n    }\n  }]);\n  return Config;\n}();\nfunction getResolver(resolverCache, scopes, prefixes) {\n  var cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  var cacheKey = prefixes.join();\n  var cached = cache.get(cacheKey);\n  if (!cached) {\n    var resolver = _createResolver(scopes, prefixes);\n    cached = {\n      resolver: resolver,\n      subPrefixes: prefixes.filter(function (p) {\n        return !p.toLowerCase().includes('hover');\n      })\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\nvar hasFunction = function hasFunction(value) {\n  return isObject(value) && Object.getOwnPropertyNames(value).reduce(function (acc, key) {\n    return acc || isFunction(value[key]);\n  }, false);\n};\nfunction needContext(proxy, names) {\n  var _descriptors2 = _descriptors(proxy),\n    isScriptable = _descriptors2.isScriptable,\n    isIndexable = _descriptors2.isIndexable;\n  var _iterator14 = _createForOfIteratorHelper(names),\n    _step14;\n  try {\n    for (_iterator14.s(); !(_step14 = _iterator14.n()).done;) {\n      var prop = _step14.value;\n      var scriptable = isScriptable(prop);\n      var indexable = isIndexable(prop);\n      var value = (indexable || scriptable) && proxy[prop];\n      if (scriptable && (isFunction(value) || hasFunction(value)) || indexable && isArray(value)) {\n        return true;\n      }\n    }\n  } catch (err) {\n    _iterator14.e(err);\n  } finally {\n    _iterator14.f();\n  }\n  return false;\n}\nvar version = \"4.0.1\";\nvar KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x';\n}\nfunction compare2Level(l1, l2) {\n  return function (a, b) {\n    return a[l1] === b[l1] ? a[l2] - b[l2] : a[l1] - b[l1];\n  };\n}\nfunction onAnimationsComplete(context) {\n  var chart = context.chart;\n  var animationOptions = chart.options.animation;\n  chart.notifyPlugins('afterRender');\n  callback(animationOptions && animationOptions.onComplete, [context], chart);\n}\nfunction onAnimationProgress(context) {\n  var chart = context.chart;\n  var animationOptions = chart.options.animation;\n  callback(animationOptions && animationOptions.onProgress, [context], chart);\n}\nfunction getCanvas(item) {\n  if (_isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    item = item[0];\n  }\n  if (item && item.canvas) {\n    item = item.canvas;\n  }\n  return item;\n}\nvar instances = {};\nvar getChart = function getChart(key) {\n  var canvas = getCanvas(key);\n  return Object.values(instances).filter(function (c) {\n    return c.canvas === canvas;\n  }).pop();\n};\nfunction moveNumericKeys(obj, start, move) {\n  var keys = Object.keys(obj);\n  for (var _i = 0, _keys = keys; _i < _keys.length; _i++) {\n    var key = _keys[_i];\n    var intKey = +key;\n    if (intKey >= start) {\n      var value = obj[key];\n      delete obj[key];\n      if (move > 0 || intKey > start) {\n        obj[intKey + move] = value;\n      }\n    }\n  }\n}\nfunction determineLastEvent(e, lastEvent, inChartArea, isClick) {\n  if (!inChartArea || e.type === 'mouseout') {\n    return null;\n  }\n  if (isClick) {\n    return lastEvent;\n  }\n  return e;\n}\nfunction getDatasetArea(meta) {\n  var xScale = meta.xScale,\n    yScale = meta.yScale;\n  if (xScale && yScale) {\n    return {\n      left: xScale.left,\n      right: xScale.right,\n      top: yScale.top,\n      bottom: yScale.bottom\n    };\n  }\n}\nvar Chart = /*#__PURE__*/function () {\n  function Chart(item, userConfig) {\n    var _this12 = this;\n    _classCallCheck(this, Chart);\n    var config = this.config = new Config(userConfig);\n    var initialCanvas = getCanvas(item);\n    var existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error('Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' + ' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.');\n    }\n    var options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n    this.platform.updateConfig(config);\n    var context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n    var canvas = context && context.canvas;\n    var height = canvas && canvas.height;\n    var width = canvas && canvas.width;\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(function (mode) {\n      return _this12.update(mode);\n    }, options.resizeDelay || 0);\n    this._dataChanges = [];\n    instances[this.id] = this;\n    if (!context || !canvas) {\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n    animator.listen(this, 'complete', onAnimationsComplete);\n    animator.listen(this, 'progress', onAnimationProgress);\n    this._initialize();\n    if (this.attached) {\n      this.update();\n    }\n  }\n  _createClass(Chart, [{\n    key: \"aspectRatio\",\n    get: function get() {\n      var _this$options12 = this.options,\n        aspectRatio = _this$options12.aspectRatio,\n        maintainAspectRatio = _this$options12.maintainAspectRatio,\n        width = this.width,\n        height = this.height,\n        _aspectRatio = this._aspectRatio;\n      if (!isNullOrUndef(aspectRatio)) {\n        return aspectRatio;\n      }\n      if (maintainAspectRatio && _aspectRatio) {\n        return _aspectRatio;\n      }\n      return height ? width / height : null;\n    }\n  }, {\n    key: \"data\",\n    get: function get() {\n      return this.config.data;\n    },\n    set: function set(data) {\n      this.config.data = data;\n    }\n  }, {\n    key: \"options\",\n    get: function get() {\n      return this._options;\n    },\n    set: function set(options) {\n      this.config.options = options;\n    }\n  }, {\n    key: \"registry\",\n    get: function get() {\n      return registry;\n    }\n  }, {\n    key: \"_initialize\",\n    value: function _initialize() {\n      this.notifyPlugins('beforeInit');\n      if (this.options.responsive) {\n        this.resize();\n      } else {\n        retinaScale(this, this.options.devicePixelRatio);\n      }\n      this.bindEvents();\n      this.notifyPlugins('afterInit');\n      return this;\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      clearCanvas(this.canvas, this.ctx);\n      return this;\n    }\n  }, {\n    key: \"stop\",\n    value: function stop() {\n      animator.stop(this);\n      return this;\n    }\n  }, {\n    key: \"resize\",\n    value: function resize(width, height) {\n      if (!animator.running(this)) {\n        this._resize(width, height);\n      } else {\n        this._resizeBeforeDraw = {\n          width: width,\n          height: height\n        };\n      }\n    }\n  }, {\n    key: \"_resize\",\n    value: function _resize(width, height) {\n      var options = this.options;\n      var canvas = this.canvas;\n      var aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n      var newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n      var newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n      var mode = this.width ? 'resize' : 'attach';\n      this.width = newSize.width;\n      this.height = newSize.height;\n      this._aspectRatio = this.aspectRatio;\n      if (!retinaScale(this, newRatio, true)) {\n        return;\n      }\n      this.notifyPlugins('resize', {\n        size: newSize\n      });\n      callback(options.onResize, [this, newSize], this);\n      if (this.attached) {\n        if (this._doResize(mode)) {\n          this.render();\n        }\n      }\n    }\n  }, {\n    key: \"ensureScalesHaveIDs\",\n    value: function ensureScalesHaveIDs() {\n      var options = this.options;\n      var scalesOptions = options.scales || {};\n      each(scalesOptions, function (axisOptions, axisID) {\n        axisOptions.id = axisID;\n      });\n    }\n  }, {\n    key: \"buildOrUpdateScales\",\n    value: function buildOrUpdateScales() {\n      var _this13 = this;\n      var options = this.options;\n      var scaleOpts = options.scales;\n      var scales = this.scales;\n      var updated = Object.keys(scales).reduce(function (obj, id) {\n        obj[id] = false;\n        return obj;\n      }, {});\n      var items = [];\n      if (scaleOpts) {\n        items = items.concat(Object.keys(scaleOpts).map(function (id) {\n          var scaleOptions = scaleOpts[id];\n          var axis = determineAxis(id, scaleOptions);\n          var isRadial = axis === 'r';\n          var isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        }));\n      }\n      each(items, function (item) {\n        var scaleOptions = item.options;\n        var id = scaleOptions.id;\n        var axis = determineAxis(id, scaleOptions);\n        var scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n        if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n          scaleOptions.position = item.dposition;\n        }\n        updated[id] = true;\n        var scale = null;\n        if (id in scales && scales[id].type === scaleType) {\n          scale = scales[id];\n        } else {\n          var scaleClass = registry.getScale(scaleType);\n          scale = new scaleClass({\n            id: id,\n            type: scaleType,\n            ctx: _this13.ctx,\n            chart: _this13\n          });\n          scales[scale.id] = scale;\n        }\n        scale.init(scaleOptions, options);\n      });\n      each(updated, function (hasUpdated, id) {\n        if (!hasUpdated) {\n          delete scales[id];\n        }\n      });\n      each(scales, function (scale) {\n        layouts.configure(_this13, scale, scale.options);\n        layouts.addBox(_this13, scale);\n      });\n    }\n  }, {\n    key: \"_updateMetasets\",\n    value: function _updateMetasets() {\n      var metasets = this._metasets;\n      var numData = this.data.datasets.length;\n      var numMeta = metasets.length;\n      metasets.sort(function (a, b) {\n        return a.index - b.index;\n      });\n      if (numMeta > numData) {\n        for (var i = numData; i < numMeta; ++i) {\n          this._destroyDatasetMeta(i);\n        }\n        metasets.splice(numData, numMeta - numData);\n      }\n      this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n    }\n  }, {\n    key: \"_removeUnreferencedMetasets\",\n    value: function _removeUnreferencedMetasets() {\n      var _this14 = this;\n      var metasets = this._metasets,\n        datasets = this.data.datasets;\n      if (metasets.length > datasets.length) {\n        delete this._stacks;\n      }\n      metasets.forEach(function (meta, index) {\n        if (datasets.filter(function (x) {\n          return x === meta._dataset;\n        }).length === 0) {\n          _this14._destroyDatasetMeta(index);\n        }\n      });\n    }\n  }, {\n    key: \"buildOrUpdateControllers\",\n    value: function buildOrUpdateControllers() {\n      var newControllers = [];\n      var datasets = this.data.datasets;\n      var i, ilen;\n      this._removeUnreferencedMetasets();\n      for (i = 0, ilen = datasets.length; i < ilen; i++) {\n        var dataset = datasets[i];\n        var meta = this.getDatasetMeta(i);\n        var type = dataset.type || this.config.type;\n        if (meta.type && meta.type !== type) {\n          this._destroyDatasetMeta(i);\n          meta = this.getDatasetMeta(i);\n        }\n        meta.type = type;\n        meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n        meta.order = dataset.order || 0;\n        meta.index = i;\n        meta.label = '' + dataset.label;\n        meta.visible = this.isDatasetVisible(i);\n        if (meta.controller) {\n          meta.controller.updateIndex(i);\n          meta.controller.linkScales();\n        } else {\n          var ControllerClass = registry.getController(type);\n          var _defaults$datasets$ty = defaults.datasets[type],\n            datasetElementType = _defaults$datasets$ty.datasetElementType,\n            dataElementType = _defaults$datasets$ty.dataElementType;\n          Object.assign(ControllerClass, {\n            dataElementType: registry.getElement(dataElementType),\n            datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n          });\n          meta.controller = new ControllerClass(this, i);\n          newControllers.push(meta.controller);\n        }\n      }\n      this._updateMetasets();\n      return newControllers;\n    }\n  }, {\n    key: \"_resetElements\",\n    value: function _resetElements() {\n      var _this15 = this;\n      each(this.data.datasets, function (dataset, datasetIndex) {\n        _this15.getDatasetMeta(datasetIndex).controller.reset();\n      }, this);\n    }\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      this._resetElements();\n      this.notifyPlugins('reset');\n    }\n  }, {\n    key: \"update\",\n    value: function update(mode) {\n      var config = this.config;\n      config.update();\n      var options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n      var animsDisabled = this._animationsDisabled = !options.animation;\n      this._updateScales();\n      this._checkEventBindings();\n      this._updateHiddenIndices();\n      this._plugins.invalidate();\n      if (this.notifyPlugins('beforeUpdate', {\n        mode: mode,\n        cancelable: true\n      }) === false) {\n        return;\n      }\n      var newControllers = this.buildOrUpdateControllers();\n      this.notifyPlugins('beforeElementsUpdate');\n      var minPadding = 0;\n      for (var i = 0, ilen = this.data.datasets.length; i < ilen; i++) {\n        var _this$getDatasetMeta = this.getDatasetMeta(i),\n          controller = _this$getDatasetMeta.controller;\n        var reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n        controller.buildOrUpdateElements(reset);\n        minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n      }\n      minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n      this._updateLayout(minPadding);\n      if (!animsDisabled) {\n        each(newControllers, function (controller) {\n          controller.reset();\n        });\n      }\n      this._updateDatasets(mode);\n      this.notifyPlugins('afterUpdate', {\n        mode: mode\n      });\n      this._layers.sort(compare2Level('z', '_idx'));\n      var _active = this._active,\n        _lastEvent = this._lastEvent;\n      if (_lastEvent) {\n        this._eventHandler(_lastEvent, true);\n      } else if (_active.length) {\n        this._updateHoverStyles(_active, _active, true);\n      }\n      this.render();\n    }\n  }, {\n    key: \"_updateScales\",\n    value: function _updateScales() {\n      var _this16 = this;\n      each(this.scales, function (scale) {\n        layouts.removeBox(_this16, scale);\n      });\n      this.ensureScalesHaveIDs();\n      this.buildOrUpdateScales();\n    }\n  }, {\n    key: \"_checkEventBindings\",\n    value: function _checkEventBindings() {\n      var options = this.options;\n      var existingEvents = new Set(Object.keys(this._listeners));\n      var newEvents = new Set(options.events);\n      if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n        this.unbindEvents();\n        this.bindEvents();\n      }\n    }\n  }, {\n    key: \"_updateHiddenIndices\",\n    value: function _updateHiddenIndices() {\n      var _hiddenIndices = this._hiddenIndices;\n      var changes = this._getUniformDataChanges() || [];\n      var _iterator15 = _createForOfIteratorHelper(changes),\n        _step15;\n      try {\n        for (_iterator15.s(); !(_step15 = _iterator15.n()).done;) {\n          var _step15$value = _step15.value,\n            method = _step15$value.method,\n            start = _step15$value.start,\n            count = _step15$value.count;\n          var move = method === '_removeElements' ? -count : count;\n          moveNumericKeys(_hiddenIndices, start, move);\n        }\n      } catch (err) {\n        _iterator15.e(err);\n      } finally {\n        _iterator15.f();\n      }\n    }\n  }, {\n    key: \"_getUniformDataChanges\",\n    value: function _getUniformDataChanges() {\n      var _dataChanges = this._dataChanges;\n      if (!_dataChanges || !_dataChanges.length) {\n        return;\n      }\n      this._dataChanges = [];\n      var datasetCount = this.data.datasets.length;\n      var makeSet = function makeSet(idx) {\n        return new Set(_dataChanges.filter(function (c) {\n          return c[0] === idx;\n        }).map(function (c, i) {\n          return i + ',' + c.splice(1).join(',');\n        }));\n      };\n      var changeSet = makeSet(0);\n      for (var i = 1; i < datasetCount; i++) {\n        if (!setsEqual(changeSet, makeSet(i))) {\n          return;\n        }\n      }\n      return Array.from(changeSet).map(function (c) {\n        return c.split(',');\n      }).map(function (a) {\n        return {\n          method: a[1],\n          start: +a[2],\n          count: +a[3]\n        };\n      });\n    }\n  }, {\n    key: \"_updateLayout\",\n    value: function _updateLayout(minPadding) {\n      var _this17 = this;\n      if (this.notifyPlugins('beforeLayout', {\n        cancelable: true\n      }) === false) {\n        return;\n      }\n      layouts.update(this, this.width, this.height, minPadding);\n      var area = this.chartArea;\n      var noArea = area.width <= 0 || area.height <= 0;\n      this._layers = [];\n      each(this.boxes, function (box) {\n        var _this17$_layers;\n        if (noArea && box.position === 'chartArea') {\n          return;\n        }\n        if (box.configure) {\n          box.configure();\n        }\n        (_this17$_layers = _this17._layers).push.apply(_this17$_layers, _toConsumableArray(box._layers()));\n      }, this);\n      this._layers.forEach(function (item, index) {\n        item._idx = index;\n      });\n      this.notifyPlugins('afterLayout');\n    }\n  }, {\n    key: \"_updateDatasets\",\n    value: function _updateDatasets(mode) {\n      if (this.notifyPlugins('beforeDatasetsUpdate', {\n        mode: mode,\n        cancelable: true\n      }) === false) {\n        return;\n      }\n      for (var i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n        this.getDatasetMeta(i).controller.configure();\n      }\n      for (var i1 = 0, ilen1 = this.data.datasets.length; i1 < ilen1; ++i1) {\n        this._updateDataset(i1, isFunction(mode) ? mode({\n          datasetIndex: i1\n        }) : mode);\n      }\n      this.notifyPlugins('afterDatasetsUpdate', {\n        mode: mode\n      });\n    }\n  }, {\n    key: \"_updateDataset\",\n    value: function _updateDataset(index, mode) {\n      var meta = this.getDatasetMeta(index);\n      var args = {\n        meta: meta,\n        index: index,\n        mode: mode,\n        cancelable: true\n      };\n      if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n        return;\n      }\n      meta.controller._update(mode);\n      args.cancelable = false;\n      this.notifyPlugins('afterDatasetUpdate', args);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.notifyPlugins('beforeRender', {\n        cancelable: true\n      }) === false) {\n        return;\n      }\n      if (animator.has(this)) {\n        if (this.attached && !animator.running(this)) {\n          animator.start(this);\n        }\n      } else {\n        this.draw();\n        onAnimationsComplete({\n          chart: this\n        });\n      }\n    }\n  }, {\n    key: \"draw\",\n    value: function draw() {\n      var i;\n      if (this._resizeBeforeDraw) {\n        var _this$_resizeBeforeDr = this._resizeBeforeDraw,\n          width = _this$_resizeBeforeDr.width,\n          height = _this$_resizeBeforeDr.height;\n        this._resize(width, height);\n        this._resizeBeforeDraw = null;\n      }\n      this.clear();\n      if (this.width <= 0 || this.height <= 0) {\n        return;\n      }\n      if (this.notifyPlugins('beforeDraw', {\n        cancelable: true\n      }) === false) {\n        return;\n      }\n      var layers = this._layers;\n      for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n        layers[i].draw(this.chartArea);\n      }\n      this._drawDatasets();\n      for (; i < layers.length; ++i) {\n        layers[i].draw(this.chartArea);\n      }\n      this.notifyPlugins('afterDraw');\n    }\n  }, {\n    key: \"_getSortedDatasetMetas\",\n    value: function _getSortedDatasetMetas(filterVisible) {\n      var metasets = this._sortedMetasets;\n      var result = [];\n      var i, ilen;\n      for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n        var meta = metasets[i];\n        if (!filterVisible || meta.visible) {\n          result.push(meta);\n        }\n      }\n      return result;\n    }\n  }, {\n    key: \"getSortedVisibleDatasetMetas\",\n    value: function getSortedVisibleDatasetMetas() {\n      return this._getSortedDatasetMetas(true);\n    }\n  }, {\n    key: \"_drawDatasets\",\n    value: function _drawDatasets() {\n      if (this.notifyPlugins('beforeDatasetsDraw', {\n        cancelable: true\n      }) === false) {\n        return;\n      }\n      var metasets = this.getSortedVisibleDatasetMetas();\n      for (var i = metasets.length - 1; i >= 0; --i) {\n        this._drawDataset(metasets[i]);\n      }\n      this.notifyPlugins('afterDatasetsDraw');\n    }\n  }, {\n    key: \"_drawDataset\",\n    value: function _drawDataset(meta) {\n      var ctx = this.ctx;\n      var clip = meta._clip;\n      var useClip = !clip.disabled;\n      var area = getDatasetArea(meta) || this.chartArea;\n      var args = {\n        meta: meta,\n        index: meta.index,\n        cancelable: true\n      };\n      if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n        return;\n      }\n      if (useClip) {\n        clipArea(ctx, {\n          left: clip.left === false ? 0 : area.left - clip.left,\n          right: clip.right === false ? this.width : area.right + clip.right,\n          top: clip.top === false ? 0 : area.top - clip.top,\n          bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n        });\n      }\n      meta.controller.draw();\n      if (useClip) {\n        unclipArea(ctx);\n      }\n      args.cancelable = false;\n      this.notifyPlugins('afterDatasetDraw', args);\n    }\n  }, {\n    key: \"isPointInArea\",\n    value: function isPointInArea(point) {\n      return _isPointInArea(point, this.chartArea, this._minPadding);\n    }\n  }, {\n    key: \"getElementsAtEventForMode\",\n    value: function getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n      var method = Interaction.modes[mode];\n      if (typeof method === 'function') {\n        return method(this, e, options, useFinalPosition);\n      }\n      return [];\n    }\n  }, {\n    key: \"getDatasetMeta\",\n    value: function getDatasetMeta(datasetIndex) {\n      var dataset = this.data.datasets[datasetIndex];\n      var metasets = this._metasets;\n      var meta = metasets.filter(function (x) {\n        return x && x._dataset === dataset;\n      }).pop();\n      if (!meta) {\n        meta = {\n          type: null,\n          data: [],\n          dataset: null,\n          controller: null,\n          hidden: null,\n          xAxisID: null,\n          yAxisID: null,\n          order: dataset && dataset.order || 0,\n          index: datasetIndex,\n          _dataset: dataset,\n          _parsed: [],\n          _sorted: false\n        };\n        metasets.push(meta);\n      }\n      return meta;\n    }\n  }, {\n    key: \"getContext\",\n    value: function getContext() {\n      return this.$context || (this.$context = createContext(null, {\n        chart: this,\n        type: 'chart'\n      }));\n    }\n  }, {\n    key: \"getVisibleDatasetCount\",\n    value: function getVisibleDatasetCount() {\n      return this.getSortedVisibleDatasetMetas().length;\n    }\n  }, {\n    key: \"isDatasetVisible\",\n    value: function isDatasetVisible(datasetIndex) {\n      var dataset = this.data.datasets[datasetIndex];\n      if (!dataset) {\n        return false;\n      }\n      var meta = this.getDatasetMeta(datasetIndex);\n      return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n    }\n  }, {\n    key: \"setDatasetVisibility\",\n    value: function setDatasetVisibility(datasetIndex, visible) {\n      var meta = this.getDatasetMeta(datasetIndex);\n      meta.hidden = !visible;\n    }\n  }, {\n    key: \"toggleDataVisibility\",\n    value: function toggleDataVisibility(index) {\n      this._hiddenIndices[index] = !this._hiddenIndices[index];\n    }\n  }, {\n    key: \"getDataVisibility\",\n    value: function getDataVisibility(index) {\n      return !this._hiddenIndices[index];\n    }\n  }, {\n    key: \"_updateVisibility\",\n    value: function _updateVisibility(datasetIndex, dataIndex, visible) {\n      var mode = visible ? 'show' : 'hide';\n      var meta = this.getDatasetMeta(datasetIndex);\n      var anims = meta.controller._resolveAnimations(undefined, mode);\n      if (defined(dataIndex)) {\n        meta.data[dataIndex].hidden = !visible;\n        this.update();\n      } else {\n        this.setDatasetVisibility(datasetIndex, visible);\n        anims.update(meta, {\n          visible: visible\n        });\n        this.update(function (ctx) {\n          return ctx.datasetIndex === datasetIndex ? mode : undefined;\n        });\n      }\n    }\n  }, {\n    key: \"hide\",\n    value: function hide(datasetIndex, dataIndex) {\n      this._updateVisibility(datasetIndex, dataIndex, false);\n    }\n  }, {\n    key: \"show\",\n    value: function show(datasetIndex, dataIndex) {\n      this._updateVisibility(datasetIndex, dataIndex, true);\n    }\n  }, {\n    key: \"_destroyDatasetMeta\",\n    value: function _destroyDatasetMeta(datasetIndex) {\n      var meta = this._metasets[datasetIndex];\n      if (meta && meta.controller) {\n        meta.controller._destroy();\n      }\n      delete this._metasets[datasetIndex];\n    }\n  }, {\n    key: \"_stop\",\n    value: function _stop() {\n      var i, ilen;\n      this.stop();\n      animator.remove(this);\n      for (i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n        this._destroyDatasetMeta(i);\n      }\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this.notifyPlugins('beforeDestroy');\n      var canvas = this.canvas,\n        ctx = this.ctx;\n      this._stop();\n      this.config.clearCache();\n      if (canvas) {\n        this.unbindEvents();\n        clearCanvas(canvas, ctx);\n        this.platform.releaseContext(ctx);\n        this.canvas = null;\n        this.ctx = null;\n      }\n      delete instances[this.id];\n      this.notifyPlugins('afterDestroy');\n    }\n  }, {\n    key: \"toBase64Image\",\n    value: function toBase64Image() {\n      var _this$canvas;\n      return (_this$canvas = this.canvas).toDataURL.apply(_this$canvas, arguments);\n    }\n  }, {\n    key: \"bindEvents\",\n    value: function bindEvents() {\n      this.bindUserEvents();\n      if (this.options.responsive) {\n        this.bindResponsiveEvents();\n      } else {\n        this.attached = true;\n      }\n    }\n  }, {\n    key: \"bindUserEvents\",\n    value: function bindUserEvents() {\n      var _this18 = this;\n      var listeners = this._listeners;\n      var platform = this.platform;\n      var _add = function _add(type, listener) {\n        platform.addEventListener(_this18, type, listener);\n        listeners[type] = listener;\n      };\n      var listener = function listener(e, x, y) {\n        e.offsetX = x;\n        e.offsetY = y;\n        _this18._eventHandler(e);\n      };\n      each(this.options.events, function (type) {\n        return _add(type, listener);\n      });\n    }\n  }, {\n    key: \"bindResponsiveEvents\",\n    value: function bindResponsiveEvents() {\n      var _this19 = this;\n      if (!this._responsiveListeners) {\n        this._responsiveListeners = {};\n      }\n      var listeners = this._responsiveListeners;\n      var platform = this.platform;\n      var _add = function _add(type, listener) {\n        platform.addEventListener(_this19, type, listener);\n        listeners[type] = listener;\n      };\n      var _remove = function _remove(type, listener) {\n        if (listeners[type]) {\n          platform.removeEventListener(_this19, type, listener);\n          delete listeners[type];\n        }\n      };\n      var listener = function listener(width, height) {\n        if (_this19.canvas) {\n          _this19.resize(width, height);\n        }\n      };\n      var detached;\n      var attached = function attached() {\n        _remove('attach', attached);\n        _this19.attached = true;\n        _this19.resize();\n        _add('resize', listener);\n        _add('detach', detached);\n      };\n      detached = function detached() {\n        _this19.attached = false;\n        _remove('resize', listener);\n        _this19._stop();\n        _this19._resize(0, 0);\n        _add('attach', attached);\n      };\n      if (platform.isAttached(this.canvas)) {\n        attached();\n      } else {\n        detached();\n      }\n    }\n  }, {\n    key: \"unbindEvents\",\n    value: function unbindEvents() {\n      var _this20 = this;\n      each(this._listeners, function (listener, type) {\n        _this20.platform.removeEventListener(_this20, type, listener);\n      });\n      this._listeners = {};\n      each(this._responsiveListeners, function (listener, type) {\n        _this20.platform.removeEventListener(_this20, type, listener);\n      });\n      this._responsiveListeners = undefined;\n    }\n  }, {\n    key: \"updateHoverStyle\",\n    value: function updateHoverStyle(items, mode, enabled) {\n      var prefix = enabled ? 'set' : 'remove';\n      var meta, item, i, ilen;\n      if (mode === 'dataset') {\n        meta = this.getDatasetMeta(items[0].datasetIndex);\n        meta.controller['_' + prefix + 'DatasetHoverStyle']();\n      }\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        item = items[i];\n        var controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n        if (controller) {\n          controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n        }\n      }\n    }\n  }, {\n    key: \"getActiveElements\",\n    value: function getActiveElements() {\n      return this._active || [];\n    }\n  }, {\n    key: \"setActiveElements\",\n    value: function setActiveElements(activeElements) {\n      var _this21 = this;\n      var lastActive = this._active || [];\n      var active = activeElements.map(function (_ref4) {\n        var datasetIndex = _ref4.datasetIndex,\n          index = _ref4.index;\n        var meta = _this21.getDatasetMeta(datasetIndex);\n        if (!meta) {\n          throw new Error('No dataset found at index ' + datasetIndex);\n        }\n        return {\n          datasetIndex: datasetIndex,\n          element: meta.data[index],\n          index: index\n        };\n      });\n      var changed = !_elementsEqual(active, lastActive);\n      if (changed) {\n        this._active = active;\n        this._lastEvent = null;\n        this._updateHoverStyles(active, lastActive);\n      }\n    }\n  }, {\n    key: \"notifyPlugins\",\n    value: function notifyPlugins(hook, args, filter) {\n      return this._plugins.notify(this, hook, args, filter);\n    }\n  }, {\n    key: \"isPluginEnabled\",\n    value: function isPluginEnabled(pluginId) {\n      return this._plugins._cache.filter(function (p) {\n        return p.plugin.id === pluginId;\n      }).length === 1;\n    }\n  }, {\n    key: \"_updateHoverStyles\",\n    value: function _updateHoverStyles(active, lastActive, replay) {\n      var hoverOptions = this.options.hover;\n      var diff = function diff(a, b) {\n        return a.filter(function (x) {\n          return !b.some(function (y) {\n            return x.datasetIndex === y.datasetIndex && x.index === y.index;\n          });\n        });\n      };\n      var deactivated = diff(lastActive, active);\n      var activated = replay ? active : diff(active, lastActive);\n      if (deactivated.length) {\n        this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n      }\n      if (activated.length && hoverOptions.mode) {\n        this.updateHoverStyle(activated, hoverOptions.mode, true);\n      }\n    }\n  }, {\n    key: \"_eventHandler\",\n    value: function _eventHandler(e, replay) {\n      var _this22 = this;\n      var args = {\n        event: e,\n        replay: replay,\n        cancelable: true,\n        inChartArea: this.isPointInArea(e)\n      };\n      var eventFilter = function eventFilter(plugin) {\n        return (plugin.options.events || _this22.options.events).includes(e.native.type);\n      };\n      if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n        return;\n      }\n      var changed = this._handleEvent(e, replay, args.inChartArea);\n      args.cancelable = false;\n      this.notifyPlugins('afterEvent', args, eventFilter);\n      if (changed || args.changed) {\n        this.render();\n      }\n      return this;\n    }\n  }, {\n    key: \"_handleEvent\",\n    value: function _handleEvent(e, replay, inChartArea) {\n      var _this$_active = this._active,\n        lastActive = _this$_active === void 0 ? [] : _this$_active,\n        options = this.options;\n      var useFinalPosition = replay;\n      var active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n      var isClick = _isClickEvent(e);\n      var lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n      if (inChartArea) {\n        this._lastEvent = null;\n        callback(options.onHover, [e, active, this], this);\n        if (isClick) {\n          callback(options.onClick, [e, active, this], this);\n        }\n      }\n      var changed = !_elementsEqual(active, lastActive);\n      if (changed || replay) {\n        this._active = active;\n        this._updateHoverStyles(active, lastActive, replay);\n      }\n      this._lastEvent = lastEvent;\n      return changed;\n    }\n  }, {\n    key: \"_getActiveElements\",\n    value: function _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n      if (e.type === 'mouseout') {\n        return [];\n      }\n      if (!inChartArea) {\n        return lastActive;\n      }\n      var hoverOptions = this.options.hover;\n      return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n    }\n  }], [{\n    key: \"register\",\n    value: function register() {\n      registry.add.apply(registry, arguments);\n      invalidatePlugins();\n    }\n  }, {\n    key: \"unregister\",\n    value: function unregister() {\n      registry.remove.apply(registry, arguments);\n      invalidatePlugins();\n    }\n  }]);\n  return Chart;\n}();\n_defineProperty(Chart, \"defaults\", defaults);\n_defineProperty(Chart, \"instances\", instances);\n_defineProperty(Chart, \"overrides\", overrides);\n_defineProperty(Chart, \"registry\", registry);\n_defineProperty(Chart, \"version\", version);\n_defineProperty(Chart, \"getChart\", getChart);\nfunction invalidatePlugins() {\n  return each(Chart.instances, function (chart) {\n    return chart._plugins.invalidate();\n  });\n}\nvar Chart$1 = Chart;\nfunction clipArc(ctx, element, endAngle) {\n  var startAngle = element.startAngle,\n    pixelMargin = element.pixelMargin,\n    x = element.x,\n    y = element.y,\n    outerRadius = element.outerRadius,\n    innerRadius = element.innerRadius;\n  var angleMargin = pixelMargin / outerRadius;\n  // Draw an inner border by clipping the arc and drawing a double-width border\n  // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n  ctx.closePath();\n  ctx.clip();\n}\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\n/**\n * Parse border radius from the provided options\n */\nfunction parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n  var o = toRadiusCorners(arc.options.borderRadius);\n  var halfThickness = (outerRadius - innerRadius) / 2;\n  var innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n  // Outer limits are complicated. We want to compute the available angular distance at\n  // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\n  // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\n  //\n  // If the borderRadius is large, that value can become negative.\n  // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\n  // we know that the thickness term will dominate and compute the limits at that point\n  var computeOuterLimit = function computeOuterLimit(val) {\n    var outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit)\n  };\n}\n/**\n * Convert (r, 𝜃) to (x, y)\n */\nfunction rThetaToXY(r, theta, x, y) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta)\n  };\n}\n/**\n * Path the arc, respecting border radius by separating into left and right halves.\n *\n *   Start      End\n *\n *    1--->a--->2    Outer\n *   /           \\\n *   8           3\n *   |           |\n *   |           |\n *   7           4\n *   \\           /\n *    6<---b<---5    Inner\n */\nfunction pathArc(ctx, element, offset, spacing, end, circular) {\n  var x = element.x,\n    y = element.y,\n    start = element.startAngle,\n    pixelMargin = element.pixelMargin,\n    innerR = element.innerRadius;\n  var outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n  var innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n  var spacingOffset = 0;\n  var alpha = end - start;\n  if (spacing) {\n    // When spacing is present, it is the same for all items\n    // So we adjust the start and end angle of the arc such that\n    // the distance is the same as it would be without the spacing\n    var noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n    var noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n    var avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n    var adjustedAngle = avNogSpacingRadius !== 0 ? alpha * avNogSpacingRadius / (avNogSpacingRadius + spacing) : alpha;\n    spacingOffset = (alpha - adjustedAngle) / 2;\n  }\n  var beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n  var angleOffset = (alpha - beta) / 2;\n  var startAngle = start + angleOffset + spacingOffset;\n  var endAngle = end - angleOffset - spacingOffset;\n  var _parseBorderRadius$ = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle),\n    outerStart = _parseBorderRadius$.outerStart,\n    outerEnd = _parseBorderRadius$.outerEnd,\n    innerStart = _parseBorderRadius$.innerStart,\n    innerEnd = _parseBorderRadius$.innerEnd;\n  var outerStartAdjustedRadius = outerRadius - outerStart;\n  var outerEndAdjustedRadius = outerRadius - outerEnd;\n  var outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  var outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n  var innerStartAdjustedRadius = innerRadius + innerStart;\n  var innerEndAdjustedRadius = innerRadius + innerEnd;\n  var innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  var innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n  ctx.beginPath();\n  if (circular) {\n    // The first arc segments from point 1 to point a to point 2\n    var outerMidAdjustedAngle = (outerStartAdjustedAngle + outerEndAdjustedAngle) / 2;\n    ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerMidAdjustedAngle);\n    ctx.arc(x, y, outerRadius, outerMidAdjustedAngle, outerEndAdjustedAngle);\n    // The corner segment from point 2 to point 3\n    if (outerEnd > 0) {\n      var pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n    }\n    // The line from point 3 to point 4\n    var p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n    ctx.lineTo(p4.x, p4.y);\n    // The corner segment from point 4 to point 5\n    if (innerEnd > 0) {\n      var pCenter1 = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter1.x, pCenter1.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n    }\n    // The inner arc from point 5 to point b to point 6\n    var innerMidAdjustedAngle = (endAngle - innerEnd / innerRadius + (startAngle + innerStart / innerRadius)) / 2;\n    ctx.arc(x, y, innerRadius, endAngle - innerEnd / innerRadius, innerMidAdjustedAngle, true);\n    ctx.arc(x, y, innerRadius, innerMidAdjustedAngle, startAngle + innerStart / innerRadius, true);\n    // The corner segment from point 6 to point 7\n    if (innerStart > 0) {\n      var pCenter2 = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter2.x, pCenter2.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n    }\n    // The line from point 7 to point 8\n    var p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n    ctx.lineTo(p8.x, p8.y);\n    // The corner segment from point 8 to point 1\n    if (outerStart > 0) {\n      var pCenter3 = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter3.x, pCenter3.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n    }\n  } else {\n    ctx.moveTo(x, y);\n    var outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n    var outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerStartX, outerStartY);\n    var outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n    var outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerEndX, outerEndY);\n  }\n  ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing, circular) {\n  var fullCircles = element.fullCircles,\n    startAngle = element.startAngle,\n    circumference = element.circumference;\n  var endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    for (var i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + (circumference % TAU || TAU);\n    }\n  }\n  pathArc(ctx, element, offset, spacing, endAngle, circular);\n  ctx.fill();\n  return endAngle;\n}\nfunction drawBorder(ctx, element, offset, spacing, circular) {\n  var fullCircles = element.fullCircles,\n    startAngle = element.startAngle,\n    circumference = element.circumference,\n    options = element.options;\n  var borderWidth = options.borderWidth,\n    borderJoinStyle = options.borderJoinStyle;\n  var inner = options.borderAlign === 'inner';\n  if (!borderWidth) {\n    return;\n  }\n  if (inner) {\n    ctx.lineWidth = borderWidth * 2;\n    ctx.lineJoin = borderJoinStyle || 'round';\n  } else {\n    ctx.lineWidth = borderWidth;\n    ctx.lineJoin = borderJoinStyle || 'bevel';\n  }\n  var endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    for (var i = 0; i < fullCircles; ++i) {\n      ctx.stroke();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + (circumference % TAU || TAU);\n    }\n  }\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n  if (!fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.stroke();\n  }\n}\nvar ArcElement = /*#__PURE__*/function (_Element2) {\n  _inherits(ArcElement, _Element2);\n  var _super12 = _createSuper(ArcElement);\n  function ArcElement(cfg) {\n    var _this23;\n    _classCallCheck(this, ArcElement);\n    _this23 = _super12.call(this);\n    _this23.options = undefined;\n    _this23.circumference = undefined;\n    _this23.startAngle = undefined;\n    _this23.endAngle = undefined;\n    _this23.innerRadius = undefined;\n    _this23.outerRadius = undefined;\n    _this23.pixelMargin = 0;\n    _this23.fullCircles = 0;\n    if (cfg) {\n      Object.assign(_assertThisInitialized(_this23), cfg);\n    }\n    return _this23;\n  }\n  _createClass(ArcElement, [{\n    key: \"inRange\",\n    value: function inRange(chartX, chartY, useFinalPosition) {\n      var point = this.getProps(['x', 'y'], useFinalPosition);\n      var _getAngleFromPoint2 = getAngleFromPoint(point, {\n          x: chartX,\n          y: chartY\n        }),\n        angle = _getAngleFromPoint2.angle,\n        distance = _getAngleFromPoint2.distance;\n      var _this$getProps2 = this.getProps(['startAngle', 'endAngle', 'innerRadius', 'outerRadius', 'circumference'], useFinalPosition),\n        startAngle = _this$getProps2.startAngle,\n        endAngle = _this$getProps2.endAngle,\n        innerRadius = _this$getProps2.innerRadius,\n        outerRadius = _this$getProps2.outerRadius,\n        circumference = _this$getProps2.circumference;\n      var rAdjust = this.options.spacing / 2;\n      var _circumference = valueOrDefault(circumference, endAngle - startAngle);\n      var betweenAngles = _circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n      var withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n      return betweenAngles && withinRadius;\n    }\n  }, {\n    key: \"getCenterPoint\",\n    value: function getCenterPoint(useFinalPosition) {\n      var _this$getProps3 = this.getProps(['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius', 'circumference'], useFinalPosition),\n        x = _this$getProps3.x,\n        y = _this$getProps3.y,\n        startAngle = _this$getProps3.startAngle,\n        endAngle = _this$getProps3.endAngle,\n        innerRadius = _this$getProps3.innerRadius,\n        outerRadius = _this$getProps3.outerRadius;\n      var _this$options13 = this.options,\n        offset = _this$options13.offset,\n        spacing = _this$options13.spacing;\n      var halfAngle = (startAngle + endAngle) / 2;\n      var halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n      return {\n        x: x + Math.cos(halfAngle) * halfRadius,\n        y: y + Math.sin(halfAngle) * halfRadius\n      };\n    }\n  }, {\n    key: \"tooltipPosition\",\n    value: function tooltipPosition(useFinalPosition) {\n      return this.getCenterPoint(useFinalPosition);\n    }\n  }, {\n    key: \"draw\",\n    value: function draw(ctx) {\n      var options = this.options,\n        circumference = this.circumference;\n      var offset = (options.offset || 0) / 4;\n      var spacing = (options.spacing || 0) / 2;\n      var circular = options.circular;\n      this.pixelMargin = options.borderAlign === 'inner' ? 0.33 : 0;\n      this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n      if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n        return;\n      }\n      ctx.save();\n      var halfAngle = (this.startAngle + this.endAngle) / 2;\n      ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n      var fix = 1 - Math.sin(Math.min(PI, circumference || 0));\n      var radiusOffset = offset * fix;\n      ctx.fillStyle = options.backgroundColor;\n      ctx.strokeStyle = options.borderColor;\n      drawArc(ctx, this, radiusOffset, spacing, circular);\n      drawBorder(ctx, this, radiusOffset, spacing, circular);\n      ctx.restore();\n    }\n  }]);\n  return ArcElement;\n}(Element);\n_defineProperty(ArcElement, \"id\", 'arc');\n_defineProperty(ArcElement, \"defaults\", {\n  borderAlign: 'center',\n  borderColor: '#fff',\n  borderJoinStyle: undefined,\n  borderRadius: 0,\n  borderWidth: 2,\n  offset: 0,\n  spacing: 0,\n  angle: undefined,\n  circular: true\n});\n_defineProperty(ArcElement, \"defaultRoutes\", {\n  backgroundColor: 'backgroundColor'\n});\nfunction setStyle(ctx, options) {\n  var style = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : options;\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierCurveTo;\n  }\n  return lineTo;\n}\nfunction pathVars(points, segment) {\n  var params = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var count = points.length;\n  var _params$start = params.start,\n    paramsStart = _params$start === void 0 ? 0 : _params$start,\n    _params$end = params.end,\n    paramsEnd = _params$end === void 0 ? count - 1 : _params$end;\n  var segmentStart = segment.start,\n    segmentEnd = segment.end;\n  var start = Math.max(paramsStart, segmentStart);\n  var end = Math.min(paramsEnd, segmentEnd);\n  var outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n  return {\n    count: count,\n    start: start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\nfunction pathSegment(ctx, line, segment, params) {\n  var points = line.points,\n    options = line.options;\n  var _pathVars = pathVars(points, segment, params),\n    count = _pathVars.count,\n    start = _pathVars.start,\n    loop = _pathVars.loop,\n    ilen = _pathVars.ilen;\n  var lineMethod = getLineMethod(options);\n  var _ref5 = params || {},\n    _ref5$move = _ref5.move,\n    move = _ref5$move === void 0 ? true : _ref5$move,\n    reverse = _ref5.reverse;\n  var i, point, prev;\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n    if (point.skip) {\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    prev = point;\n  }\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n  return !!loop;\n}\nfunction fastPathSegment(ctx, line, segment, params) {\n  var points = line.points;\n  var _pathVars2 = pathVars(points, segment, params),\n    count = _pathVars2.count,\n    start = _pathVars2.start,\n    ilen = _pathVars2.ilen;\n  var _ref6 = params || {},\n    _ref6$move = _ref6.move,\n    move = _ref6$move === void 0 ? true : _ref6$move,\n    reverse = _ref6.reverse;\n  var avgX = 0;\n  var countX = 0;\n  var i, point, prevX, minY, maxY, lastY;\n  var pointIndex = function pointIndex(index) {\n    return (start + (reverse ? ilen - index : index)) % count;\n  };\n  var drawX = function drawX() {\n    if (minY !== maxY) {\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n    if (point.skip) {\n      continue;\n    }\n    var x = point.x;\n    var y = point.y;\n    var truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      ctx.lineTo(x, y);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n    lastY = y;\n  }\n  drawX();\n}\nfunction _getSegmentMethod(line) {\n  var opts = line.options;\n  var borderDash = opts.borderDash && opts.borderDash.length;\n  var useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierInterpolation;\n  }\n  return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n  var path = line._path;\n  if (!path) {\n    path = line._path = new Path2D();\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n  var segments = line.segments,\n    options = line.options;\n  var segmentMethod = _getSegmentMethod(line);\n  var _iterator16 = _createForOfIteratorHelper(segments),\n    _step16;\n  try {\n    for (_iterator16.s(); !(_step16 = _iterator16.n()).done;) {\n      var segment = _step16.value;\n      setStyle(ctx, options, segment.style);\n      ctx.beginPath();\n      if (segmentMethod(ctx, line, segment, {\n        start: start,\n        end: start + count - 1\n      })) {\n        ctx.closePath();\n      }\n      ctx.stroke();\n    }\n  } catch (err) {\n    _iterator16.e(err);\n  } finally {\n    _iterator16.f();\n  }\n}\nvar usePath2D = typeof Path2D === 'function';\nfunction _draw(ctx, line, start, count) {\n  if (usePath2D && !line.options.segment) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\nvar LineElement = /*#__PURE__*/function (_Element3) {\n  _inherits(LineElement, _Element3);\n  var _super13 = _createSuper(LineElement);\n  function LineElement(cfg) {\n    var _this24;\n    _classCallCheck(this, LineElement);\n    _this24 = _super13.call(this);\n    _this24.animated = true;\n    _this24.options = undefined;\n    _this24._chart = undefined;\n    _this24._loop = undefined;\n    _this24._fullLoop = undefined;\n    _this24._path = undefined;\n    _this24._points = undefined;\n    _this24._segments = undefined;\n    _this24._decimated = false;\n    _this24._pointsUpdated = false;\n    _this24._datasetIndex = undefined;\n    if (cfg) {\n      Object.assign(_assertThisInitialized(_this24), cfg);\n    }\n    return _this24;\n  }\n  _createClass(LineElement, [{\n    key: \"updateControlPoints\",\n    value: function updateControlPoints(chartArea, indexAxis) {\n      var options = this.options;\n      if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n        var loop = options.spanGaps ? this._loop : this._fullLoop;\n        _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n        this._pointsUpdated = true;\n      }\n    }\n  }, {\n    key: \"points\",\n    get: function get() {\n      return this._points;\n    },\n    set: function set(points) {\n      this._points = points;\n      delete this._segments;\n      delete this._path;\n      this._pointsUpdated = false;\n    }\n  }, {\n    key: \"segments\",\n    get: function get() {\n      return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n    }\n  }, {\n    key: \"first\",\n    value: function first() {\n      var segments = this.segments;\n      var points = this.points;\n      return segments.length && points[segments[0].start];\n    }\n  }, {\n    key: \"last\",\n    value: function last() {\n      var segments = this.segments;\n      var points = this.points;\n      var count = segments.length;\n      return count && points[segments[count - 1].end];\n    }\n  }, {\n    key: \"interpolate\",\n    value: function interpolate(point, property) {\n      var options = this.options;\n      var value = point[property];\n      var points = this.points;\n      var segments = _boundSegments(this, {\n        property: property,\n        start: value,\n        end: value\n      });\n      if (!segments.length) {\n        return;\n      }\n      var result = [];\n      var _interpolate = _getInterpolationMethod(options);\n      var i, ilen;\n      for (i = 0, ilen = segments.length; i < ilen; ++i) {\n        var _segments$i = segments[i],\n          start = _segments$i.start,\n          end = _segments$i.end;\n        var p1 = points[start];\n        var p2 = points[end];\n        if (p1 === p2) {\n          result.push(p1);\n          continue;\n        }\n        var t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n        var interpolated = _interpolate(p1, p2, t, options.stepped);\n        interpolated[property] = point[property];\n        result.push(interpolated);\n      }\n      return result.length === 1 ? result[0] : result;\n    }\n  }, {\n    key: \"pathSegment\",\n    value: function pathSegment(ctx, segment, params) {\n      var segmentMethod = _getSegmentMethod(this);\n      return segmentMethod(ctx, this, segment, params);\n    }\n  }, {\n    key: \"path\",\n    value: function path(ctx, start, count) {\n      var segments = this.segments;\n      var segmentMethod = _getSegmentMethod(this);\n      var loop = this._loop;\n      start = start || 0;\n      count = count || this.points.length - start;\n      var _iterator17 = _createForOfIteratorHelper(segments),\n        _step17;\n      try {\n        for (_iterator17.s(); !(_step17 = _iterator17.n()).done;) {\n          var segment = _step17.value;\n          loop &= segmentMethod(ctx, this, segment, {\n            start: start,\n            end: start + count - 1\n          });\n        }\n      } catch (err) {\n        _iterator17.e(err);\n      } finally {\n        _iterator17.f();\n      }\n      return !!loop;\n    }\n  }, {\n    key: \"draw\",\n    value: function draw(ctx, chartArea, start, count) {\n      var options = this.options || {};\n      var points = this.points || [];\n      if (points.length && options.borderWidth) {\n        ctx.save();\n        _draw(ctx, this, start, count);\n        ctx.restore();\n      }\n      if (this.animated) {\n        this._pointsUpdated = false;\n        this._path = undefined;\n      }\n    }\n  }]);\n  return LineElement;\n}(Element);\n_defineProperty(LineElement, \"id\", 'line');\n_defineProperty(LineElement, \"defaults\", {\n  borderCapStyle: 'butt',\n  borderDash: [],\n  borderDashOffset: 0,\n  borderJoinStyle: 'miter',\n  borderWidth: 3,\n  capBezierPoints: true,\n  cubicInterpolationMode: 'default',\n  fill: false,\n  spanGaps: false,\n  stepped: false,\n  tension: 0\n});\n_defineProperty(LineElement, \"defaultRoutes\", {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n});\n_defineProperty(LineElement, \"descriptors\", {\n  _scriptable: true,\n  _indexable: function _indexable(name) {\n    return name !== 'borderDash' && name !== 'fill';\n  }\n});\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n  var options = el.options;\n  var _el$getProps = el.getProps([axis], useFinalPosition),\n    value = _el$getProps[axis];\n  return Math.abs(pos - value) < options.radius + options.hitRadius;\n}\nvar PointElement = /*#__PURE__*/function (_Element4) {\n  _inherits(PointElement, _Element4);\n  var _super14 = _createSuper(PointElement);\n  /**\n  * @type {any}\n  */\n\n  /**\n  * @type {any}\n  */\n\n  function PointElement(cfg) {\n    var _this25;\n    _classCallCheck(this, PointElement);\n    _this25 = _super14.call(this);\n    _this25.options = undefined;\n    _this25.parsed = undefined;\n    _this25.skip = undefined;\n    _this25.stop = undefined;\n    if (cfg) {\n      Object.assign(_assertThisInitialized(_this25), cfg);\n    }\n    return _this25;\n  }\n  _createClass(PointElement, [{\n    key: \"inRange\",\n    value: function inRange(mouseX, mouseY, useFinalPosition) {\n      var options = this.options;\n      var _this$getProps4 = this.getProps(['x', 'y'], useFinalPosition),\n        x = _this$getProps4.x,\n        y = _this$getProps4.y;\n      return Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2) < Math.pow(options.hitRadius + options.radius, 2);\n    }\n  }, {\n    key: \"inXRange\",\n    value: function inXRange(mouseX, useFinalPosition) {\n      return inRange$1(this, mouseX, 'x', useFinalPosition);\n    }\n  }, {\n    key: \"inYRange\",\n    value: function inYRange(mouseY, useFinalPosition) {\n      return inRange$1(this, mouseY, 'y', useFinalPosition);\n    }\n  }, {\n    key: \"getCenterPoint\",\n    value: function getCenterPoint(useFinalPosition) {\n      var _this$getProps5 = this.getProps(['x', 'y'], useFinalPosition),\n        x = _this$getProps5.x,\n        y = _this$getProps5.y;\n      return {\n        x: x,\n        y: y\n      };\n    }\n  }, {\n    key: \"size\",\n    value: function size(options) {\n      options = options || this.options || {};\n      var radius = options.radius || 0;\n      radius = Math.max(radius, radius && options.hoverRadius || 0);\n      var borderWidth = radius && options.borderWidth || 0;\n      return (radius + borderWidth) * 2;\n    }\n  }, {\n    key: \"draw\",\n    value: function draw(ctx, area) {\n      var options = this.options;\n      if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n        return;\n      }\n      ctx.strokeStyle = options.borderColor;\n      ctx.lineWidth = options.borderWidth;\n      ctx.fillStyle = options.backgroundColor;\n      drawPoint(ctx, options, this.x, this.y);\n    }\n  }, {\n    key: \"getRange\",\n    value: function getRange() {\n      var options = this.options || {};\n      // @ts-expect-error Fallbacks should never be hit in practice\n      return options.radius + options.hitRadius;\n    }\n  }]);\n  return PointElement;\n}(Element);\n_defineProperty(PointElement, \"id\", 'point');\n_defineProperty(PointElement, \"defaults\", {\n  borderWidth: 1,\n  hitRadius: 1,\n  hoverBorderWidth: 1,\n  hoverRadius: 4,\n  pointStyle: 'circle',\n  radius: 3,\n  rotation: 0\n});\n_defineProperty(PointElement, \"defaultRoutes\", {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n});\nfunction getBarBounds(bar, useFinalPosition) {\n  var _bar$getProps = bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition),\n    x = _bar$getProps.x,\n    y = _bar$getProps.y,\n    base = _bar$getProps.base,\n    width = _bar$getProps.width,\n    height = _bar$getProps.height;\n  var left, right, top, bottom, half;\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n  return {\n    left: left,\n    top: top,\n    right: right,\n    bottom: bottom\n  };\n}\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : _limitValue(value, min, max);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n  var value = bar.options.borderWidth;\n  var skip = bar.borderSkipped;\n  var o = toTRBL(value);\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n  var _bar$getProps2 = bar.getProps(['enableBorderRadius']),\n    enableBorderRadius = _bar$getProps2.enableBorderRadius;\n  var value = bar.options.borderRadius;\n  var o = toTRBLCorners(value);\n  var maxR = Math.min(maxW, maxH);\n  var skip = bar.borderSkipped;\n  var enableBorder = enableBorderRadius || isObject(value);\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\nfunction boundingRects(bar) {\n  var bounds = getBarBounds(bar);\n  var width = bounds.right - bounds.left;\n  var height = bounds.bottom - bounds.top;\n  var border = parseBorderWidth(bar, width / 2, height / 2);\n  var radius = parseBorderRadius(bar, width / 2, height / 2);\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius: radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r))\n      }\n    }\n  };\n}\nfunction _inRange(bar, x, y, useFinalPosition) {\n  var skipX = x === null;\n  var skipY = y === null;\n  var skipBoth = skipX && skipY;\n  var bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n  return bounds && (skipX || _isBetween(x, bounds.left, bounds.right)) && (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nfunction inflateRect(rect, amount) {\n  var refRect = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var x = rect.x !== refRect.x ? -amount : 0;\n  var y = rect.y !== refRect.y ? -amount : 0;\n  var w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n  var h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n  return {\n    x: rect.x + x,\n    y: rect.y + y,\n    w: rect.w + w,\n    h: rect.h + h,\n    radius: rect.radius\n  };\n}\nvar BarElement = /*#__PURE__*/function (_Element5) {\n  _inherits(BarElement, _Element5);\n  var _super15 = _createSuper(BarElement);\n  function BarElement(cfg) {\n    var _this26;\n    _classCallCheck(this, BarElement);\n    _this26 = _super15.call(this);\n    _this26.options = undefined;\n    _this26.horizontal = undefined;\n    _this26.base = undefined;\n    _this26.width = undefined;\n    _this26.height = undefined;\n    _this26.inflateAmount = undefined;\n    if (cfg) {\n      Object.assign(_assertThisInitialized(_this26), cfg);\n    }\n    return _this26;\n  }\n  _createClass(BarElement, [{\n    key: \"draw\",\n    value: function draw(ctx) {\n      var inflateAmount = this.inflateAmount,\n        _this$options14 = this.options,\n        borderColor = _this$options14.borderColor,\n        backgroundColor = _this$options14.backgroundColor;\n      var _boundingRects = boundingRects(this),\n        inner = _boundingRects.inner,\n        outer = _boundingRects.outer;\n      var addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n      ctx.save();\n      if (outer.w !== inner.w || outer.h !== inner.h) {\n        ctx.beginPath();\n        addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n        ctx.clip();\n        addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n        ctx.fillStyle = borderColor;\n        ctx.fill('evenodd');\n      }\n      ctx.beginPath();\n      addRectPath(ctx, inflateRect(inner, inflateAmount));\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }, {\n    key: \"inRange\",\n    value: function inRange(mouseX, mouseY, useFinalPosition) {\n      return _inRange(this, mouseX, mouseY, useFinalPosition);\n    }\n  }, {\n    key: \"inXRange\",\n    value: function inXRange(mouseX, useFinalPosition) {\n      return _inRange(this, mouseX, null, useFinalPosition);\n    }\n  }, {\n    key: \"inYRange\",\n    value: function inYRange(mouseY, useFinalPosition) {\n      return _inRange(this, null, mouseY, useFinalPosition);\n    }\n  }, {\n    key: \"getCenterPoint\",\n    value: function getCenterPoint(useFinalPosition) {\n      var _this$getProps6 = this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition),\n        x = _this$getProps6.x,\n        y = _this$getProps6.y,\n        base = _this$getProps6.base,\n        horizontal = _this$getProps6.horizontal;\n      return {\n        x: horizontal ? (x + base) / 2 : x,\n        y: horizontal ? y : (y + base) / 2\n      };\n    }\n  }, {\n    key: \"getRange\",\n    value: function getRange(axis) {\n      return axis === 'x' ? this.width / 2 : this.height / 2;\n    }\n  }]);\n  return BarElement;\n}(Element);\n_defineProperty(BarElement, \"id\", 'bar');\n_defineProperty(BarElement, \"defaults\", {\n  borderSkipped: 'start',\n  borderWidth: 0,\n  borderRadius: 0,\n  inflateAmount: 'auto',\n  pointStyle: undefined\n});\n_defineProperty(BarElement, \"defaultRoutes\", {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n});\nvar elements = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  ArcElement: ArcElement,\n  LineElement: LineElement,\n  PointElement: PointElement,\n  BarElement: BarElement\n});\nvar BORDER_COLORS = ['rgb(54, 162, 235)', 'rgb(255, 99, 132)', 'rgb(255, 159, 64)', 'rgb(255, 205, 86)', 'rgb(75, 192, 192)', 'rgb(153, 102, 255)', 'rgb(201, 203, 207)' // grey\n];\n// Border colors with 50% transparency\nvar BACKGROUND_COLORS = /* #__PURE__ */BORDER_COLORS.map(function (color) {\n  return color.replace('rgb(', 'rgba(').replace(')', ', 0.5)');\n});\nfunction getBorderColor(i) {\n  return BORDER_COLORS[i % BORDER_COLORS.length];\n}\nfunction getBackgroundColor(i) {\n  return BACKGROUND_COLORS[i % BACKGROUND_COLORS.length];\n}\nfunction createDefaultDatasetColorizer() {\n  return function (dataset, i) {\n    dataset.borderColor = getBorderColor(i);\n    dataset.backgroundColor = getBackgroundColor(i);\n  };\n}\nfunction createDoughnutDatasetColorizer() {\n  var i = 0;\n  return function (dataset) {\n    dataset.backgroundColor = dataset.data.map(function () {\n      return getBorderColor(i++);\n    });\n  };\n}\nfunction createPolarAreaDatasetColorizer() {\n  var i = 0;\n  return function (dataset) {\n    dataset.backgroundColor = dataset.data.map(function () {\n      return getBackgroundColor(i++);\n    });\n  };\n}\nfunction getColorizer(type) {\n  if (type === 'doughnut' || type === 'pie') {\n    return createDoughnutDatasetColorizer();\n  } else if (type === 'polarArea') {\n    return createPolarAreaDatasetColorizer();\n  }\n  return createDefaultDatasetColorizer();\n}\nfunction containsColorsDefinitions(descriptors) {\n  var k;\n  for (k in descriptors) {\n    if (descriptors[k].borderColor || descriptors[k].backgroundColor) {\n      return true;\n    }\n  }\n  return false;\n}\nvar plugin_colors = {\n  id: 'colors',\n  defaults: {\n    enabled: true\n  },\n  beforeLayout: function beforeLayout(chart, _args, options) {\n    if (!options.enabled) {\n      return;\n    }\n    var _chart$config = chart.config,\n      type = _chart$config.type,\n      elements = _chart$config.options.elements,\n      datasets = _chart$config.data.datasets;\n    if (containsColorsDefinitions(datasets) || elements && containsColorsDefinitions(elements)) {\n      return;\n    }\n    var colorizer = getColorizer(type);\n    datasets.forEach(colorizer);\n  }\n};\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n  var samples = options.samples || availableWidth;\n  if (samples >= count) {\n    return data.slice(start, start + count);\n  }\n  var decimated = [];\n  var bucketWidth = (count - 2) / (samples - 2);\n  var sampledIndex = 0;\n  var endIndex = start + count - 1;\n  var a = start;\n  var i, maxAreaPoint, maxArea, area, nextA;\n  decimated[sampledIndex++] = data[a];\n  for (i = 0; i < samples - 2; i++) {\n    var avgX = 0;\n    var avgY = 0;\n    var j = void 0;\n    var avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    var avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n    var avgRangeLength = avgRangeEnd - avgRangeStart;\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX += data[j].x;\n      avgY += data[j].y;\n    }\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n    var rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n    var rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n    var _data$a = data[a],\n      pointAx = _data$a.x,\n      pointAy = _data$a.y;\n    maxArea = area = -1;\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs((pointAx - avgX) * (data[j].y - pointAy) - (pointAx - data[j].x) * (avgY - pointAy));\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n  decimated[sampledIndex++] = data[endIndex];\n  return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n  var avgX = 0;\n  var countX = 0;\n  var i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  var decimated = [];\n  var endIndex = start + count - 1;\n  var xMin = data[start].x;\n  var xMax = data[endIndex].x;\n  var dx = xMax - xMin;\n  for (i = start; i < start + count; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    var truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      var lastIndex = i - 1;\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n        var intermediateIndex1 = Math.min(minIndex, maxIndex);\n        var intermediateIndex2 = Math.max(minIndex, maxIndex);\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push(_objectSpread(_objectSpread({}, data[intermediateIndex1]), {}, {\n            x: avgX\n          }));\n        }\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push(_objectSpread(_objectSpread({}, data[intermediateIndex2]), {}, {\n            x: avgX\n          }));\n        }\n      }\n      if (i > 0 && lastIndex !== startIndex) {\n        decimated.push(data[lastIndex]);\n      }\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n  return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n  if (dataset._decimated) {\n    var data = dataset._data;\n    delete dataset._decimated;\n    delete dataset._data;\n    Object.defineProperty(dataset, 'data', {\n      value: data\n    });\n  }\n}\nfunction cleanDecimatedData(chart) {\n  chart.data.datasets.forEach(function (dataset) {\n    cleanDecimatedDataset(dataset);\n  });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n  var pointCount = points.length;\n  var start = 0;\n  var count;\n  var iScale = meta.iScale;\n  var _iScale$getUserBounds = iScale.getUserBounds(),\n    min = _iScale$getUserBounds.min,\n    max = _iScale$getUserBounds.max,\n    minDefined = _iScale$getUserBounds.minDefined,\n    maxDefined = _iScale$getUserBounds.maxDefined;\n  if (minDefined) {\n    start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n  }\n  if (maxDefined) {\n    count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n  } else {\n    count = pointCount - start;\n  }\n  return {\n    start: start,\n    count: count\n  };\n}\nvar plugin_decimation = {\n  id: 'decimation',\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false\n  },\n  beforeElementsUpdate: function beforeElementsUpdate(chart, args, options) {\n    if (!options.enabled) {\n      cleanDecimatedData(chart);\n      return;\n    }\n    var availableWidth = chart.width;\n    chart.data.datasets.forEach(function (dataset, datasetIndex) {\n      var _data = dataset._data,\n        indexAxis = dataset.indexAxis;\n      var meta = chart.getDatasetMeta(datasetIndex);\n      var data = _data || dataset.data;\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\n        return;\n      }\n      if (!meta.controller.supportsDecimation) {\n        return;\n      }\n      var xAxis = chart.scales[meta.xAxisID];\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        return;\n      }\n      if (chart.options.parsing) {\n        return;\n      }\n      var _getStartAndCountOfVi3 = getStartAndCountOfVisiblePointsSimplified(meta, data),\n        start = _getStartAndCountOfVi3.start,\n        count = _getStartAndCountOfVi3.count;\n      var threshold = options.threshold || 4 * availableWidth;\n      if (count <= threshold) {\n        cleanDecimatedDataset(dataset);\n        return;\n      }\n      if (isNullOrUndef(_data)) {\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function get() {\n            return this._decimated;\n          },\n          set: function set(d) {\n            this._data = d;\n          }\n        });\n      }\n      var decimated;\n      switch (options.algorithm) {\n        case 'lttb':\n          decimated = lttbDecimation(data, start, count, availableWidth, options);\n          break;\n        case 'min-max':\n          decimated = minMaxDecimation(data, start, count, availableWidth);\n          break;\n        default:\n          throw new Error(\"Unsupported decimation algorithm '\".concat(options.algorithm, \"'\"));\n      }\n      dataset._decimated = decimated;\n    });\n  },\n  destroy: function destroy(chart) {\n    cleanDecimatedData(chart);\n  }\n};\nfunction _segments(line, target, property) {\n  var segments = line.segments;\n  var points = line.points;\n  var tpoints = target.points;\n  var parts = [];\n  var _iterator18 = _createForOfIteratorHelper(segments),\n    _step18;\n  try {\n    for (_iterator18.s(); !(_step18 = _iterator18.n()).done;) {\n      var segment = _step18.value;\n      var start = segment.start,\n        end = segment.end;\n      end = _findSegmentEnd(start, end, points);\n      var bounds = _getBounds(property, points[start], points[end], segment.loop);\n      if (!target.segments) {\n        parts.push({\n          source: segment,\n          target: bounds,\n          start: points[start],\n          end: points[end]\n        });\n        continue;\n      }\n      var targetSegments = _boundSegments(target, bounds);\n      var _iterator19 = _createForOfIteratorHelper(targetSegments),\n        _step19;\n      try {\n        for (_iterator19.s(); !(_step19 = _iterator19.n()).done;) {\n          var tgt = _step19.value;\n          var subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n          var fillSources = _boundSegment(segment, points, subBounds);\n          var _iterator20 = _createForOfIteratorHelper(fillSources),\n            _step20;\n          try {\n            for (_iterator20.s(); !(_step20 = _iterator20.n()).done;) {\n              var fillSource = _step20.value;\n              parts.push({\n                source: fillSource,\n                target: tgt,\n                start: _defineProperty({}, property, _getEdge(bounds, subBounds, 'start', Math.max)),\n                end: _defineProperty({}, property, _getEdge(bounds, subBounds, 'end', Math.min))\n              });\n            }\n          } catch (err) {\n            _iterator20.e(err);\n          } finally {\n            _iterator20.f();\n          }\n        }\n      } catch (err) {\n        _iterator19.e(err);\n      } finally {\n        _iterator19.f();\n      }\n    }\n  } catch (err) {\n    _iterator18.e(err);\n  } finally {\n    _iterator18.f();\n  }\n  return parts;\n}\nfunction _getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n  var start = first[property];\n  var end = last[property];\n  if (property === 'angle') {\n    start = _normalizeAngle(start);\n    end = _normalizeAngle(end);\n  }\n  return {\n    property: property,\n    start: start,\n    end: end\n  };\n}\nfunction _pointsFromSegments(boundary, line) {\n  var _ref7 = boundary || {},\n    _ref7$x = _ref7.x,\n    x = _ref7$x === void 0 ? null : _ref7$x,\n    _ref7$y = _ref7.y,\n    y = _ref7$y === void 0 ? null : _ref7$y;\n  var linePoints = line.points;\n  var points = [];\n  line.segments.forEach(function (_ref8) {\n    var start = _ref8.start,\n      end = _ref8.end;\n    end = _findSegmentEnd(start, end, linePoints);\n    var first = linePoints[start];\n    var last = linePoints[end];\n    if (y !== null) {\n      points.push({\n        x: first.x,\n        y: y\n      });\n      points.push({\n        x: last.x,\n        y: y\n      });\n    } else if (x !== null) {\n      points.push({\n        x: x,\n        y: first.y\n      });\n      points.push({\n        x: x,\n        y: last.y\n      });\n    }\n  });\n  return points;\n}\nfunction _findSegmentEnd(start, end, points) {\n  for (; end > start; end--) {\n    var point = points[end];\n    if (!isNaN(point.x) && !isNaN(point.y)) {\n      break;\n    }\n  }\n  return end;\n}\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n  return a ? a[prop] : b ? b[prop] : 0;\n}\nfunction _createBoundaryLine(boundary, line) {\n  var points = [];\n  var _loop = false;\n  if (isArray(boundary)) {\n    _loop = true;\n    points = boundary;\n  } else {\n    points = _pointsFromSegments(boundary, line);\n  }\n  return points.length ? new LineElement({\n    points: points,\n    options: {\n      tension: 0\n    },\n    _loop: _loop,\n    _fullLoop: _loop\n  }) : null;\n}\nfunction _shouldApplyFill(source) {\n  return source && source.fill !== false;\n}\nfunction _resolveTarget(sources, index, propagate) {\n  var source = sources[index];\n  var fill = source.fill;\n  var visited = [index];\n  var target;\n  if (!propagate) {\n    return fill;\n  }\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isNumberFinite(fill)) {\n      return fill;\n    }\n    target = sources[fill];\n    if (!target) {\n      return false;\n    }\n    if (target.visible) {\n      return fill;\n    }\n    visited.push(fill);\n    fill = target.fill;\n  }\n  return false;\n}\nfunction _decodeFill(line, index, count) {\n  var fill = parseFillOption(line);\n  if (isObject(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n  var target = parseFloat(fill);\n  if (isNumberFinite(target) && Math.floor(target) === target) {\n    return decodeTargetIndex(fill[0], index, target, count);\n  }\n  return ['origin', 'start', 'end', 'stack', 'shape'].indexOf(fill) >= 0 && fill;\n}\nfunction decodeTargetIndex(firstCh, index, target, count) {\n  if (firstCh === '-' || firstCh === '+') {\n    target = index + target;\n  }\n  if (target === index || target < 0 || target >= count) {\n    return false;\n  }\n  return target;\n}\nfunction _getTargetPixel(fill, scale) {\n  var pixel = null;\n  if (fill === 'start') {\n    pixel = scale.bottom;\n  } else if (fill === 'end') {\n    pixel = scale.top;\n  } else if (isObject(fill)) {\n    pixel = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    pixel = scale.getBasePixel();\n  }\n  return pixel;\n}\nfunction _getTargetValue(fill, scale, startValue) {\n  var value;\n  if (fill === 'start') {\n    value = startValue;\n  } else if (fill === 'end') {\n    value = scale.options.reverse ? scale.min : scale.max;\n  } else if (isObject(fill)) {\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n  return value;\n}\nfunction parseFillOption(line) {\n  var options = line.options;\n  var fillOption = options.fill;\n  var fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n  if (fill === false || fill === null) {\n    return false;\n  }\n  if (fill === true) {\n    return 'origin';\n  }\n  return fill;\n}\nfunction _buildStackLine(source) {\n  var scale = source.scale,\n    index = source.index,\n    line = source.line;\n  var points = [];\n  var segments = line.segments;\n  var sourcePoints = line.points;\n  var linesBelow = getLinesBelow(scale, index);\n  linesBelow.push(_createBoundaryLine({\n    x: null,\n    y: scale.bottom\n  }, line));\n  for (var i = 0; i < segments.length; i++) {\n    var segment = segments[i];\n    for (var j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n  return new LineElement({\n    points: points,\n    options: {}\n  });\n}\nfunction getLinesBelow(scale, index) {\n  var below = [];\n  var metas = scale.getMatchingVisibleMetas('line');\n  for (var i = 0; i < metas.length; i++) {\n    var meta = metas[i];\n    if (meta.index === index) {\n      break;\n    }\n    if (!meta.hidden) {\n      below.unshift(meta.dataset);\n    }\n  }\n  return below;\n}\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  var postponed = [];\n  for (var j = 0; j < linesBelow.length; j++) {\n    var line = linesBelow[j];\n    var _findPoint = findPoint(line, sourcePoint, 'x'),\n      first = _findPoint.first,\n      last = _findPoint.last,\n      point = _findPoint.point;\n    if (!point || first && last) {\n      continue;\n    }\n    if (first) {\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n      if (!last) {\n        break;\n      }\n    }\n  }\n  points.push.apply(points, postponed);\n}\nfunction findPoint(line, sourcePoint, property) {\n  var point = line.interpolate(sourcePoint, property);\n  if (!point) {\n    return {};\n  }\n  var pointValue = point[property];\n  var segments = line.segments;\n  var linePoints = line.points;\n  var first = false;\n  var last = false;\n  for (var i = 0; i < segments.length; i++) {\n    var segment = segments[i];\n    var firstValue = linePoints[segment.start][property];\n    var lastValue = linePoints[segment.end][property];\n    if (_isBetween(pointValue, firstValue, lastValue)) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n  return {\n    first: first,\n    last: last,\n    point: point\n  };\n}\nvar simpleArc = /*#__PURE__*/function () {\n  function simpleArc(opts) {\n    _classCallCheck(this, simpleArc);\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n  _createClass(simpleArc, [{\n    key: \"pathSegment\",\n    value: function pathSegment(ctx, bounds, opts) {\n      var x = this.x,\n        y = this.y,\n        radius = this.radius;\n      bounds = bounds || {\n        start: 0,\n        end: TAU\n      };\n      ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n      return !opts.bounds;\n    }\n  }, {\n    key: \"interpolate\",\n    value: function interpolate(point) {\n      var x = this.x,\n        y = this.y,\n        radius = this.radius;\n      var angle = point.angle;\n      return {\n        x: x + Math.cos(angle) * radius,\n        y: y + Math.sin(angle) * radius,\n        angle: angle\n      };\n    }\n  }]);\n  return simpleArc;\n}();\nfunction _getTarget(source) {\n  var chart = source.chart,\n    fill = source.fill,\n    line = source.line;\n  if (isNumberFinite(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n  if (fill === 'stack') {\n    return _buildStackLine(source);\n  }\n  if (fill === 'shape') {\n    return true;\n  }\n  var boundary = computeBoundary(source);\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n  return _createBoundaryLine(boundary, line);\n}\nfunction getLineByIndex(chart, index) {\n  var meta = chart.getDatasetMeta(index);\n  var visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\nfunction computeBoundary(source) {\n  var scale = source.scale || {};\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n  return computeLinearBoundary(source);\n}\nfunction computeLinearBoundary(source) {\n  var _source$scale = source.scale,\n    scale = _source$scale === void 0 ? {} : _source$scale,\n    fill = source.fill;\n  var pixel = _getTargetPixel(fill, scale);\n  if (isNumberFinite(pixel)) {\n    var horizontal = scale.isHorizontal();\n    return {\n      x: horizontal ? pixel : null,\n      y: horizontal ? null : pixel\n    };\n  }\n  return null;\n}\nfunction computeCircularBoundary(source) {\n  var scale = source.scale,\n    fill = source.fill;\n  var options = scale.options;\n  var length = scale.getLabels().length;\n  var start = options.reverse ? scale.max : scale.min;\n  var value = _getTargetValue(fill, scale, start);\n  var target = [];\n  if (options.grid.circular) {\n    var center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n  for (var i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n  return target;\n}\nfunction _drawfill(ctx, source, area) {\n  var target = _getTarget(source);\n  var line = source.line,\n    scale = source.scale,\n    axis = source.axis;\n  var lineOpts = line.options;\n  var fillOption = lineOpts.fill;\n  var color = lineOpts.backgroundColor;\n  var _ref9 = fillOption || {},\n    _ref9$above = _ref9.above,\n    above = _ref9$above === void 0 ? color : _ref9$above,\n    _ref9$below = _ref9.below,\n    below = _ref9$below === void 0 ? color : _ref9$below;\n  if (target && line.points.length) {\n    clipArea(ctx, area);\n    doFill(ctx, {\n      line: line,\n      target: target,\n      above: above,\n      below: below,\n      area: area,\n      scale: scale,\n      axis: axis\n    });\n    unclipArea(ctx);\n  }\n}\nfunction doFill(ctx, cfg) {\n  var line = cfg.line,\n    target = cfg.target,\n    above = cfg.above,\n    below = cfg.below,\n    area = cfg.area,\n    scale = cfg.scale;\n  var property = line._loop ? 'angle' : cfg.axis;\n  ctx.save();\n  if (property === 'x' && below !== above) {\n    clipVertical(ctx, target, area.top);\n    fill(ctx, {\n      line: line,\n      target: target,\n      color: above,\n      scale: scale,\n      property: property\n    });\n    ctx.restore();\n    ctx.save();\n    clipVertical(ctx, target, area.bottom);\n  }\n  fill(ctx, {\n    line: line,\n    target: target,\n    color: below,\n    scale: scale,\n    property: property\n  });\n  ctx.restore();\n}\nfunction clipVertical(ctx, target, clipY) {\n  var segments = target.segments,\n    points = target.points;\n  var first = true;\n  var lineLoop = false;\n  ctx.beginPath();\n  var _iterator21 = _createForOfIteratorHelper(segments),\n    _step21;\n  try {\n    for (_iterator21.s(); !(_step21 = _iterator21.n()).done;) {\n      var segment = _step21.value;\n      var start = segment.start,\n        end = segment.end;\n      var firstPoint = points[start];\n      var lastPoint = points[_findSegmentEnd(start, end, points)];\n      if (first) {\n        ctx.moveTo(firstPoint.x, firstPoint.y);\n        first = false;\n      } else {\n        ctx.lineTo(firstPoint.x, clipY);\n        ctx.lineTo(firstPoint.x, firstPoint.y);\n      }\n      lineLoop = !!target.pathSegment(ctx, segment, {\n        move: lineLoop\n      });\n      if (lineLoop) {\n        ctx.closePath();\n      } else {\n        ctx.lineTo(lastPoint.x, clipY);\n      }\n    }\n  } catch (err) {\n    _iterator21.e(err);\n  } finally {\n    _iterator21.f();\n  }\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\nfunction fill(ctx, cfg) {\n  var line = cfg.line,\n    target = cfg.target,\n    property = cfg.property,\n    color = cfg.color,\n    scale = cfg.scale;\n  var segments = _segments(line, target, property);\n  var _iterator22 = _createForOfIteratorHelper(segments),\n    _step22;\n  try {\n    for (_iterator22.s(); !(_step22 = _iterator22.n()).done;) {\n      var _step22$value = _step22.value,\n        src = _step22$value.source,\n        tgt = _step22$value.target,\n        start = _step22$value.start,\n        end = _step22$value.end;\n      var _src$style = src.style;\n      _src$style = _src$style === void 0 ? {} : _src$style;\n      var _src$style$background = _src$style.backgroundColor,\n        backgroundColor = _src$style$background === void 0 ? color : _src$style$background;\n      var notShape = target !== true;\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\n      ctx.beginPath();\n      var lineLoop = !!line.pathSegment(ctx, src);\n      var loop = void 0;\n      if (notShape) {\n        if (lineLoop) {\n          ctx.closePath();\n        } else {\n          interpolatedLineTo(ctx, target, end, property);\n        }\n        var targetLoop = !!target.pathSegment(ctx, tgt, {\n          move: lineLoop,\n          reverse: true\n        });\n        loop = lineLoop && targetLoop;\n        if (!loop) {\n          interpolatedLineTo(ctx, target, start, property);\n        }\n      }\n      ctx.closePath();\n      ctx.fill(loop ? 'evenodd' : 'nonzero');\n      ctx.restore();\n    }\n  } catch (err) {\n    _iterator22.e(err);\n  } finally {\n    _iterator22.f();\n  }\n}\nfunction clipBounds(ctx, scale, bounds) {\n  var _scale$chart$chartAre = scale.chart.chartArea,\n    top = _scale$chart$chartAre.top,\n    bottom = _scale$chart$chartAre.bottom;\n  var _ref10 = bounds || {},\n    property = _ref10.property,\n    start = _ref10.start,\n    end = _ref10.end;\n  if (property === 'x') {\n    ctx.beginPath();\n    ctx.rect(start, top, end - start, bottom - top);\n    ctx.clip();\n  }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n  var interpolatedPoint = target.interpolate(point, property);\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\nvar index = {\n  id: 'filler',\n  afterDatasetsUpdate: function afterDatasetsUpdate(chart, _args, options) {\n    var count = (chart.data.datasets || []).length;\n    var sources = [];\n    var meta, i, line, source;\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: _decodeFill(line, i, count),\n          chart: chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line: line\n        };\n      }\n      meta.$filler = source;\n      sources.push(source);\n    }\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n      if (!source || source.fill === false) {\n        continue;\n      }\n      source.fill = _resolveTarget(sources, i, options.propagate);\n    }\n  },\n  beforeDraw: function beforeDraw(chart, _args, options) {\n    var draw = options.drawTime === 'beforeDraw';\n    var metasets = chart.getSortedVisibleDatasetMetas();\n    var area = chart.chartArea;\n    for (var i = metasets.length - 1; i >= 0; --i) {\n      var source = metasets[i].$filler;\n      if (!source) {\n        continue;\n      }\n      source.line.updateControlPoints(area, source.axis);\n      if (draw && source.fill) {\n        _drawfill(chart.ctx, source, area);\n      }\n    }\n  },\n  beforeDatasetsDraw: function beforeDatasetsDraw(chart, _args, options) {\n    if (options.drawTime !== 'beforeDatasetsDraw') {\n      return;\n    }\n    var metasets = chart.getSortedVisibleDatasetMetas();\n    for (var i = metasets.length - 1; i >= 0; --i) {\n      var source = metasets[i].$filler;\n      if (_shouldApplyFill(source)) {\n        _drawfill(chart.ctx, source, chart.chartArea);\n      }\n    }\n  },\n  beforeDatasetDraw: function beforeDatasetDraw(chart, args, options) {\n    var source = args.meta.$filler;\n    if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n    _drawfill(chart.ctx, source, chart.chartArea);\n  },\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\nvar getBoxSize = function getBoxSize(labelOpts, fontSize) {\n  var _labelOpts$boxHeight = labelOpts.boxHeight,\n    boxHeight = _labelOpts$boxHeight === void 0 ? fontSize : _labelOpts$boxHeight,\n    _labelOpts$boxWidth = labelOpts.boxWidth,\n    boxWidth = _labelOpts$boxWidth === void 0 ? fontSize : _labelOpts$boxWidth;\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n  }\n  return {\n    boxWidth: boxWidth,\n    boxHeight: boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\nvar itemsEqual = function itemsEqual(a, b) {\n  return a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\n};\nvar Legend = /*#__PURE__*/function (_Element6) {\n  _inherits(Legend, _Element6);\n  var _super16 = _createSuper(Legend);\n  function Legend(config) {\n    var _this27;\n    _classCallCheck(this, Legend);\n    _this27 = _super16.call(this);\n    _this27._added = false;\n    _this27.legendHitBoxes = [];\n    _this27._hoveredItem = null;\n    _this27.doughnutMode = false;\n    _this27.chart = config.chart;\n    _this27.options = config.options;\n    _this27.ctx = config.ctx;\n    _this27.legendItems = undefined;\n    _this27.columnSizes = undefined;\n    _this27.lineWidths = undefined;\n    _this27.maxHeight = undefined;\n    _this27.maxWidth = undefined;\n    _this27.top = undefined;\n    _this27.bottom = undefined;\n    _this27.left = undefined;\n    _this27.right = undefined;\n    _this27.height = undefined;\n    _this27.width = undefined;\n    _this27._margins = undefined;\n    _this27.position = undefined;\n    _this27.weight = undefined;\n    _this27.fullSize = undefined;\n    return _this27;\n  }\n  _createClass(Legend, [{\n    key: \"update\",\n    value: function update(maxWidth, maxHeight, margins) {\n      this.maxWidth = maxWidth;\n      this.maxHeight = maxHeight;\n      this._margins = margins;\n      this.setDimensions();\n      this.buildLabels();\n      this.fit();\n    }\n  }, {\n    key: \"setDimensions\",\n    value: function setDimensions() {\n      if (this.isHorizontal()) {\n        this.width = this.maxWidth;\n        this.left = this._margins.left;\n        this.right = this.width;\n      } else {\n        this.height = this.maxHeight;\n        this.top = this._margins.top;\n        this.bottom = this.height;\n      }\n    }\n  }, {\n    key: \"buildLabels\",\n    value: function buildLabels() {\n      var _this28 = this;\n      var labelOpts = this.options.labels || {};\n      var legendItems = callback(labelOpts.generateLabels, [this.chart], this) || [];\n      if (labelOpts.filter) {\n        legendItems = legendItems.filter(function (item) {\n          return labelOpts.filter(item, _this28.chart.data);\n        });\n      }\n      if (labelOpts.sort) {\n        legendItems = legendItems.sort(function (a, b) {\n          return labelOpts.sort(a, b, _this28.chart.data);\n        });\n      }\n      if (this.options.reverse) {\n        legendItems.reverse();\n      }\n      this.legendItems = legendItems;\n    }\n  }, {\n    key: \"fit\",\n    value: function fit() {\n      var options = this.options,\n        ctx = this.ctx;\n      if (!options.display) {\n        this.width = this.height = 0;\n        return;\n      }\n      var labelOpts = options.labels;\n      var labelFont = toFont(labelOpts.font);\n      var fontSize = labelFont.size;\n      var titleHeight = this._computeTitleHeight();\n      var _getBoxSize = getBoxSize(labelOpts, fontSize),\n        boxWidth = _getBoxSize.boxWidth,\n        itemHeight = _getBoxSize.itemHeight;\n      var width, height;\n      ctx.font = labelFont.string;\n      if (this.isHorizontal()) {\n        width = this.maxWidth;\n        height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n      } else {\n        height = this.maxHeight;\n        width = this._fitCols(titleHeight, labelFont, boxWidth, itemHeight) + 10;\n      }\n      this.width = Math.min(width, options.maxWidth || this.maxWidth);\n      this.height = Math.min(height, options.maxHeight || this.maxHeight);\n    }\n  }, {\n    key: \"_fitRows\",\n    value: function _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n      var ctx = this.ctx,\n        maxWidth = this.maxWidth,\n        padding = this.options.labels.padding;\n      var hitboxes = this.legendHitBoxes = [];\n      var lineWidths = this.lineWidths = [0];\n      var lineHeight = itemHeight + padding;\n      var totalHeight = titleHeight;\n      ctx.textAlign = 'left';\n      ctx.textBaseline = 'middle';\n      var row = -1;\n      var top = -lineHeight;\n      this.legendItems.forEach(function (legendItem, i) {\n        var itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n        if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n          totalHeight += lineHeight;\n          lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n          top += lineHeight;\n          row++;\n        }\n        hitboxes[i] = {\n          left: 0,\n          top: top,\n          row: row,\n          width: itemWidth,\n          height: itemHeight\n        };\n        lineWidths[lineWidths.length - 1] += itemWidth + padding;\n      });\n      return totalHeight;\n    }\n  }, {\n    key: \"_fitCols\",\n    value: function _fitCols(titleHeight, labelFont, boxWidth, _itemHeight) {\n      var ctx = this.ctx,\n        maxHeight = this.maxHeight,\n        padding = this.options.labels.padding;\n      var hitboxes = this.legendHitBoxes = [];\n      var columnSizes = this.columnSizes = [];\n      var heightLimit = maxHeight - titleHeight;\n      var totalWidth = padding;\n      var currentColWidth = 0;\n      var currentColHeight = 0;\n      var left = 0;\n      var col = 0;\n      this.legendItems.forEach(function (legendItem, i) {\n        var _calculateItemSize = calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight),\n          itemWidth = _calculateItemSize.itemWidth,\n          itemHeight = _calculateItemSize.itemHeight;\n        if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n          totalWidth += currentColWidth + padding;\n          columnSizes.push({\n            width: currentColWidth,\n            height: currentColHeight\n          });\n          left += currentColWidth + padding;\n          col++;\n          currentColWidth = currentColHeight = 0;\n        }\n        hitboxes[i] = {\n          left: left,\n          top: currentColHeight,\n          col: col,\n          width: itemWidth,\n          height: itemHeight\n        };\n        currentColWidth = Math.max(currentColWidth, itemWidth);\n        currentColHeight += itemHeight + padding;\n      });\n      totalWidth += currentColWidth;\n      columnSizes.push({\n        width: currentColWidth,\n        height: currentColHeight\n      });\n      return totalWidth;\n    }\n  }, {\n    key: \"adjustHitBoxes\",\n    value: function adjustHitBoxes() {\n      if (!this.options.display) {\n        return;\n      }\n      var titleHeight = this._computeTitleHeight();\n      var hitboxes = this.legendHitBoxes,\n        _this$options15 = this.options,\n        align = _this$options15.align,\n        padding = _this$options15.labels.padding,\n        rtl = _this$options15.rtl;\n      var rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n      if (this.isHorizontal()) {\n        var row = 0;\n        var left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n        var _iterator23 = _createForOfIteratorHelper(hitboxes),\n          _step23;\n        try {\n          for (_iterator23.s(); !(_step23 = _iterator23.n()).done;) {\n            var hitbox = _step23.value;\n            if (row !== hitbox.row) {\n              row = hitbox.row;\n              left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n            }\n            hitbox.top += this.top + titleHeight + padding;\n            hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n            left += hitbox.width + padding;\n          }\n        } catch (err) {\n          _iterator23.e(err);\n        } finally {\n          _iterator23.f();\n        }\n      } else {\n        var col = 0;\n        var top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n        var _iterator24 = _createForOfIteratorHelper(hitboxes),\n          _step24;\n        try {\n          for (_iterator24.s(); !(_step24 = _iterator24.n()).done;) {\n            var hitbox1 = _step24.value;\n            if (hitbox1.col !== col) {\n              col = hitbox1.col;\n              top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n            }\n            hitbox1.top = top;\n            hitbox1.left += this.left + padding;\n            hitbox1.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox1.left), hitbox1.width);\n            top += hitbox1.height + padding;\n          }\n        } catch (err) {\n          _iterator24.e(err);\n        } finally {\n          _iterator24.f();\n        }\n      }\n    }\n  }, {\n    key: \"isHorizontal\",\n    value: function isHorizontal() {\n      return this.options.position === 'top' || this.options.position === 'bottom';\n    }\n  }, {\n    key: \"draw\",\n    value: function draw() {\n      if (this.options.display) {\n        var ctx = this.ctx;\n        clipArea(ctx, this);\n        this._draw();\n        unclipArea(ctx);\n      }\n    }\n  }, {\n    key: \"_draw\",\n    value: function _draw() {\n      var _this29 = this;\n      var opts = this.options,\n        columnSizes = this.columnSizes,\n        lineWidths = this.lineWidths,\n        ctx = this.ctx;\n      var align = opts.align,\n        labelOpts = opts.labels;\n      var defaultColor = defaults.color;\n      var rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n      var labelFont = toFont(labelOpts.font);\n      var padding = labelOpts.padding;\n      var fontSize = labelFont.size;\n      var halfFontSize = fontSize / 2;\n      var cursor;\n      this.drawTitle();\n      ctx.textAlign = rtlHelper.textAlign('left');\n      ctx.textBaseline = 'middle';\n      ctx.lineWidth = 0.5;\n      ctx.font = labelFont.string;\n      var _getBoxSize2 = getBoxSize(labelOpts, fontSize),\n        boxWidth = _getBoxSize2.boxWidth,\n        boxHeight = _getBoxSize2.boxHeight,\n        itemHeight = _getBoxSize2.itemHeight;\n      var drawLegendBox = function drawLegendBox(x, y, legendItem) {\n        if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n          return;\n        }\n        ctx.save();\n        var lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n        ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n        ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n        ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n        ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n        ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n        if (labelOpts.usePointStyle) {\n          var drawOptions = {\n            radius: boxHeight * Math.SQRT2 / 2,\n            pointStyle: legendItem.pointStyle,\n            rotation: legendItem.rotation,\n            borderWidth: lineWidth\n          };\n          var centerX = rtlHelper.xPlus(x, boxWidth / 2);\n          var centerY = y + halfFontSize;\n          drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n        } else {\n          var yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n          var xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n          var borderRadius = toTRBLCorners(legendItem.borderRadius);\n          ctx.beginPath();\n          if (Object.values(borderRadius).some(function (v) {\n            return v !== 0;\n          })) {\n            addRoundedRectPath(ctx, {\n              x: xBoxLeft,\n              y: yBoxTop,\n              w: boxWidth,\n              h: boxHeight,\n              radius: borderRadius\n            });\n          } else {\n            ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n          }\n          ctx.fill();\n          if (lineWidth !== 0) {\n            ctx.stroke();\n          }\n        }\n        ctx.restore();\n      };\n      var fillText = function fillText(x, y, legendItem) {\n        renderText(ctx, legendItem.text, x, y + itemHeight / 2, labelFont, {\n          strikethrough: legendItem.hidden,\n          textAlign: rtlHelper.textAlign(legendItem.textAlign)\n        });\n      };\n      var isHorizontal = this.isHorizontal();\n      var titleHeight = this._computeTitleHeight();\n      if (isHorizontal) {\n        cursor = {\n          x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n          y: this.top + padding + titleHeight,\n          line: 0\n        };\n      } else {\n        cursor = {\n          x: this.left + padding,\n          y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n          line: 0\n        };\n      }\n      overrideTextDirection(this.ctx, opts.textDirection);\n      var lineHeight = itemHeight + padding;\n      this.legendItems.forEach(function (legendItem, i) {\n        ctx.strokeStyle = legendItem.fontColor;\n        ctx.fillStyle = legendItem.fontColor;\n        var textWidth = ctx.measureText(legendItem.text).width;\n        var textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n        var width = boxWidth + halfFontSize + textWidth;\n        var x = cursor.x;\n        var y = cursor.y;\n        rtlHelper.setWidth(_this29.width);\n        if (isHorizontal) {\n          if (i > 0 && x + width + padding > _this29.right) {\n            y = cursor.y += lineHeight;\n            cursor.line++;\n            x = cursor.x = _alignStartEnd(align, _this29.left + padding, _this29.right - lineWidths[cursor.line]);\n          }\n        } else if (i > 0 && y + lineHeight > _this29.bottom) {\n          x = cursor.x = x + columnSizes[cursor.line].width + padding;\n          cursor.line++;\n          y = cursor.y = _alignStartEnd(align, _this29.top + titleHeight + padding, _this29.bottom - columnSizes[cursor.line].height);\n        }\n        var realX = rtlHelper.x(x);\n        drawLegendBox(realX, y, legendItem);\n        x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : _this29.right, opts.rtl);\n        fillText(rtlHelper.x(x), y, legendItem);\n        if (isHorizontal) {\n          cursor.x += width + padding;\n        } else if (typeof legendItem.text !== 'string') {\n          var fontLineHeight = labelFont.lineHeight;\n          cursor.y += calculateLegendItemHeight(legendItem, fontLineHeight);\n        } else {\n          cursor.y += lineHeight;\n        }\n      });\n      restoreTextDirection(this.ctx, opts.textDirection);\n    }\n  }, {\n    key: \"drawTitle\",\n    value: function drawTitle() {\n      var opts = this.options;\n      var titleOpts = opts.title;\n      var titleFont = toFont(titleOpts.font);\n      var titlePadding = toPadding(titleOpts.padding);\n      if (!titleOpts.display) {\n        return;\n      }\n      var rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n      var ctx = this.ctx;\n      var position = titleOpts.position;\n      var halfFontSize = titleFont.size / 2;\n      var topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n      var y;\n      var left = this.left;\n      var maxWidth = this.width;\n      if (this.isHorizontal()) {\n        maxWidth = Math.max.apply(Math, _toConsumableArray(this.lineWidths));\n        y = this.top + topPaddingPlusHalfFontSize;\n        left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n      } else {\n        var maxHeight = this.columnSizes.reduce(function (acc, size) {\n          return Math.max(acc, size.height);\n        }, 0);\n        y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n      }\n      var x = _alignStartEnd(position, left, left + maxWidth);\n      ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n      ctx.textBaseline = 'middle';\n      ctx.strokeStyle = titleOpts.color;\n      ctx.fillStyle = titleOpts.color;\n      ctx.font = titleFont.string;\n      renderText(ctx, titleOpts.text, x, y, titleFont);\n    }\n  }, {\n    key: \"_computeTitleHeight\",\n    value: function _computeTitleHeight() {\n      var titleOpts = this.options.title;\n      var titleFont = toFont(titleOpts.font);\n      var titlePadding = toPadding(titleOpts.padding);\n      return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n    }\n  }, {\n    key: \"_getLegendItemAt\",\n    value: function _getLegendItemAt(x, y) {\n      var i, hitBox, lh;\n      if (_isBetween(x, this.left, this.right) && _isBetween(y, this.top, this.bottom)) {\n        lh = this.legendHitBoxes;\n        for (i = 0; i < lh.length; ++i) {\n          hitBox = lh[i];\n          if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width) && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n            return this.legendItems[i];\n          }\n        }\n      }\n      return null;\n    }\n  }, {\n    key: \"handleEvent\",\n    value: function handleEvent(e) {\n      var opts = this.options;\n      if (!isListened(e.type, opts)) {\n        return;\n      }\n      var hoveredItem = this._getLegendItemAt(e.x, e.y);\n      if (e.type === 'mousemove' || e.type === 'mouseout') {\n        var previous = this._hoveredItem;\n        var sameItem = itemsEqual(previous, hoveredItem);\n        if (previous && !sameItem) {\n          callback(opts.onLeave, [e, previous, this], this);\n        }\n        this._hoveredItem = hoveredItem;\n        if (hoveredItem && !sameItem) {\n          callback(opts.onHover, [e, hoveredItem, this], this);\n        }\n      } else if (hoveredItem) {\n        callback(opts.onClick, [e, hoveredItem, this], this);\n      }\n    }\n  }]);\n  return Legend;\n}(Element);\nfunction calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight) {\n  var itemWidth = calculateItemWidth(legendItem, boxWidth, labelFont, ctx);\n  var itemHeight = calculateItemHeight(_itemHeight, legendItem, labelFont.lineHeight);\n  return {\n    itemWidth: itemWidth,\n    itemHeight: itemHeight\n  };\n}\nfunction calculateItemWidth(legendItem, boxWidth, labelFont, ctx) {\n  var legendItemText = legendItem.text;\n  if (legendItemText && typeof legendItemText !== 'string') {\n    legendItemText = legendItemText.reduce(function (a, b) {\n      return a.length > b.length ? a : b;\n    });\n  }\n  return boxWidth + labelFont.size / 2 + ctx.measureText(legendItemText).width;\n}\nfunction calculateItemHeight(_itemHeight, legendItem, fontLineHeight) {\n  var itemHeight = _itemHeight;\n  if (typeof legendItem.text !== 'string') {\n    itemHeight = calculateLegendItemHeight(legendItem, fontLineHeight);\n  }\n  return itemHeight;\n}\nfunction calculateLegendItemHeight(legendItem, fontLineHeight) {\n  var labelHeight = legendItem.text ? legendItem.text.length + 0.5 : 0;\n  return fontLineHeight * labelHeight;\n}\nfunction isListened(type, opts) {\n  if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n  return false;\n}\nvar plugin_legend = {\n  id: 'legend',\n  _element: Legend,\n  start: function start(chart, _args, options) {\n    var legend = chart.legend = new Legend({\n      ctx: chart.ctx,\n      options: options,\n      chart: chart\n    });\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n  stop: function stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n  beforeUpdate: function beforeUpdate(chart, _args, options) {\n    var legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n  afterUpdate: function afterUpdate(chart) {\n    var legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n  afterEvent: function afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n    onClick: function onClick(e, legendItem, legend) {\n      var index = legendItem.datasetIndex;\n      var ci = legend.chart;\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n    onHover: null,\n    onLeave: null,\n    labels: {\n      color: function color(ctx) {\n        return ctx.chart.options.color;\n      },\n      boxWidth: 40,\n      padding: 10,\n      generateLabels: function generateLabels(chart) {\n        var datasets = chart.data.datasets;\n        var _chart$legend$options = chart.legend.options.labels,\n          usePointStyle = _chart$legend$options.usePointStyle,\n          pointStyle = _chart$legend$options.pointStyle,\n          textAlign = _chart$legend$options.textAlign,\n          color = _chart$legend$options.color,\n          useBorderRadius = _chart$legend$options.useBorderRadius,\n          borderRadius = _chart$legend$options.borderRadius;\n        return chart._getSortedDatasetMetas().map(function (meta) {\n          var style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          var borderWidth = toPadding(style.borderWidth);\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n    title: {\n      color: function color(ctx) {\n        return ctx.chart.options.color;\n      },\n      display: false,\n      position: 'center',\n      text: ''\n    }\n  },\n  descriptors: {\n    _scriptable: function _scriptable(name) {\n      return !name.startsWith('on');\n    },\n    labels: {\n      _scriptable: function _scriptable(name) {\n        return !['generateLabels', 'filter', 'sort'].includes(name);\n      }\n    }\n  }\n};\nvar Title = /*#__PURE__*/function (_Element7) {\n  _inherits(Title, _Element7);\n  var _super17 = _createSuper(Title);\n  function Title(config) {\n    var _this30;\n    _classCallCheck(this, Title);\n    _this30 = _super17.call(this);\n    _this30.chart = config.chart;\n    _this30.options = config.options;\n    _this30.ctx = config.ctx;\n    _this30._padding = undefined;\n    _this30.top = undefined;\n    _this30.bottom = undefined;\n    _this30.left = undefined;\n    _this30.right = undefined;\n    _this30.width = undefined;\n    _this30.height = undefined;\n    _this30.position = undefined;\n    _this30.weight = undefined;\n    _this30.fullSize = undefined;\n    return _this30;\n  }\n  _createClass(Title, [{\n    key: \"update\",\n    value: function update(maxWidth, maxHeight) {\n      var opts = this.options;\n      this.left = 0;\n      this.top = 0;\n      if (!opts.display) {\n        this.width = this.height = this.right = this.bottom = 0;\n        return;\n      }\n      this.width = this.right = maxWidth;\n      this.height = this.bottom = maxHeight;\n      var lineCount = isArray(opts.text) ? opts.text.length : 1;\n      this._padding = toPadding(opts.padding);\n      var textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n      if (this.isHorizontal()) {\n        this.height = textSize;\n      } else {\n        this.width = textSize;\n      }\n    }\n  }, {\n    key: \"isHorizontal\",\n    value: function isHorizontal() {\n      var pos = this.options.position;\n      return pos === 'top' || pos === 'bottom';\n    }\n  }, {\n    key: \"_drawArgs\",\n    value: function _drawArgs(offset) {\n      var top = this.top,\n        left = this.left,\n        bottom = this.bottom,\n        right = this.right,\n        options = this.options;\n      var align = options.align;\n      var rotation = 0;\n      var maxWidth, titleX, titleY;\n      if (this.isHorizontal()) {\n        titleX = _alignStartEnd(align, left, right);\n        titleY = top + offset;\n        maxWidth = right - left;\n      } else {\n        if (options.position === 'left') {\n          titleX = left + offset;\n          titleY = _alignStartEnd(align, bottom, top);\n          rotation = PI * -0.5;\n        } else {\n          titleX = right - offset;\n          titleY = _alignStartEnd(align, top, bottom);\n          rotation = PI * 0.5;\n        }\n        maxWidth = bottom - top;\n      }\n      return {\n        titleX: titleX,\n        titleY: titleY,\n        maxWidth: maxWidth,\n        rotation: rotation\n      };\n    }\n  }, {\n    key: \"draw\",\n    value: function draw() {\n      var ctx = this.ctx;\n      var opts = this.options;\n      if (!opts.display) {\n        return;\n      }\n      var fontOpts = toFont(opts.font);\n      var lineHeight = fontOpts.lineHeight;\n      var offset = lineHeight / 2 + this._padding.top;\n      var _this$_drawArgs = this._drawArgs(offset),\n        titleX = _this$_drawArgs.titleX,\n        titleY = _this$_drawArgs.titleY,\n        maxWidth = _this$_drawArgs.maxWidth,\n        rotation = _this$_drawArgs.rotation;\n      renderText(ctx, opts.text, 0, 0, fontOpts, {\n        color: opts.color,\n        maxWidth: maxWidth,\n        rotation: rotation,\n        textAlign: _toLeftRightCenter(opts.align),\n        textBaseline: 'middle',\n        translation: [titleX, titleY]\n      });\n    }\n  }]);\n  return Title;\n}(Element);\nfunction createTitle(chart, titleOpts) {\n  var title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart: chart\n  });\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\nvar plugin_title = {\n  id: 'title',\n  _element: Title,\n  start: function start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n  stop: function stop(chart) {\n    var titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n  beforeUpdate: function beforeUpdate(chart, _args, options) {\n    var title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold'\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false\n  }\n};\nvar map = new WeakMap();\nvar plugin_subtitle = {\n  id: 'subtitle',\n  start: function start(chart, _args, options) {\n    var title = new Title({\n      ctx: chart.ctx,\n      options: options,\n      chart: chart\n    });\n    layouts.configure(chart, title, options);\n    layouts.addBox(chart, title);\n    map.set(chart, title);\n  },\n  stop: function stop(chart) {\n    layouts.removeBox(chart, map.get(chart));\n    map.delete(chart);\n  },\n  beforeUpdate: function beforeUpdate(chart, _args, options) {\n    var title = map.get(chart);\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'normal'\n    },\n    fullSize: true,\n    padding: 0,\n    position: 'top',\n    text: '',\n    weight: 1500\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false\n  }\n};\nvar positioners = {\n  average: function average(items) {\n    if (!items.length) {\n      return false;\n    }\n    var i, len;\n    var x = 0;\n    var y = 0;\n    var count = 0;\n    for (i = 0, len = items.length; i < len; ++i) {\n      var el = items[i].element;\n      if (el && el.hasValue()) {\n        var pos = el.tooltipPosition();\n        x += pos.x;\n        y += pos.y;\n        ++count;\n      }\n    }\n    return {\n      x: x / count,\n      y: y / count\n    };\n  },\n  nearest: function nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n    var x = eventPosition.x;\n    var y = eventPosition.y;\n    var minDistance = Number.POSITIVE_INFINITY;\n    var i, len, nearestElement;\n    for (i = 0, len = items.length; i < len; ++i) {\n      var el = items[i].element;\n      if (el && el.hasValue()) {\n        var center = el.getCenterPoint();\n        var d = distanceBetweenPoints(eventPosition, center);\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n    if (nearestElement) {\n      var tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n    return {\n      x: x,\n      y: y\n    };\n  }\n};\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n  return base;\n}\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\nfunction createTooltipItem(chart, item) {\n  var element = item.element,\n    datasetIndex = item.datasetIndex,\n    index = item.index;\n  var controller = chart.getDatasetMeta(datasetIndex).controller;\n  var _controller$getLabelA = controller.getLabelAndValue(index),\n    label = _controller$getLabelA.label,\n    value = _controller$getLabelA.value;\n  return {\n    chart: chart,\n    label: label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex: datasetIndex,\n    element: element\n  };\n}\nfunction getTooltipSize(tooltip, options) {\n  var ctx = tooltip.chart.ctx;\n  var body = tooltip.body,\n    footer = tooltip.footer,\n    title = tooltip.title;\n  var boxWidth = options.boxWidth,\n    boxHeight = options.boxHeight;\n  var bodyFont = toFont(options.bodyFont);\n  var titleFont = toFont(options.titleFont);\n  var footerFont = toFont(options.footerFont);\n  var titleLineCount = title.length;\n  var footerLineCount = footer.length;\n  var bodyLineItemCount = body.length;\n  var padding = toPadding(options.padding);\n  var height = padding.height;\n  var width = 0;\n  var combinedBodyLength = body.reduce(function (count, bodyItem) {\n    return count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length;\n  }, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight + (titleLineCount - 1) * options.titleSpacing + options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    var bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight + (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight + (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop + footerLineCount * footerFont.lineHeight + (footerLineCount - 1) * options.footerSpacing;\n  }\n  var widthPadding = 0;\n  var maxLineWidth = function maxLineWidth(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n  ctx.save();\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n  widthPadding = options.displayColors ? boxWidth + 2 + options.boxPadding : 0;\n  each(body, function (bodyItem) {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n  widthPadding = 0;\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n  ctx.restore();\n  width += padding.width;\n  return {\n    width: width,\n    height: height\n  };\n}\nfunction determineYAlign(chart, size) {\n  var y = size.y,\n    height = size.height;\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > chart.height - height / 2) {\n    return 'bottom';\n  }\n  return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  var x = size.x,\n    width = size.width;\n  var caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n  var x = size.x,\n    width = size.width;\n  var chartWidth = chart.width,\n    _chart$chartArea = chart.chartArea,\n    left = _chart$chartArea.left,\n    right = _chart$chartArea.right;\n  var xAlign = 'center';\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n  return xAlign;\n}\nfunction determineAlignment(chart, options, size) {\n  var yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n  return {\n    xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign: yAlign\n  };\n}\nfunction alignX(size, xAlign) {\n  var x = size.x,\n    width = size.width;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= width / 2;\n  }\n  return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n  var y = size.y,\n    height = size.height;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= height / 2;\n  }\n  return y;\n}\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  var caretSize = options.caretSize,\n    caretPadding = options.caretPadding,\n    cornerRadius = options.cornerRadius;\n  var xAlign = alignment.xAlign,\n    yAlign = alignment.yAlign;\n  var paddingAndSize = caretSize + caretPadding;\n  var _toTRBLCorners = toTRBLCorners(cornerRadius),\n    topLeft = _toTRBLCorners.topLeft,\n    topRight = _toTRBLCorners.topRight,\n    bottomLeft = _toTRBLCorners.bottomLeft,\n    bottomRight = _toTRBLCorners.bottomRight;\n  var x = alignX(size, xAlign);\n  var y = alignY(size, yAlign, paddingAndSize);\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= Math.max(topLeft, bottomLeft) + caretSize;\n  } else if (xAlign === 'right') {\n    x += Math.max(topRight, bottomRight) + caretSize;\n  }\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\nfunction getAlignedX(tooltip, align, options) {\n  var padding = toPadding(options.padding);\n  return align === 'center' ? tooltip.x + tooltip.width / 2 : align === 'right' ? tooltip.x + tooltip.width - padding.right : tooltip.x + padding.left;\n}\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return createContext(parent, {\n    tooltip: tooltip,\n    tooltipItems: tooltipItems,\n    type: 'tooltip'\n  });\n}\nfunction overrideCallbacks(callbacks, context) {\n  var override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\nvar defaultCallbacks = {\n  beforeTitle: noop,\n  title: function title(tooltipItems) {\n    if (tooltipItems.length > 0) {\n      var item = tooltipItems[0];\n      var labels = item.chart.data.labels;\n      var labelCount = labels ? labels.length : 0;\n      if (this && this.options && this.options.mode === 'dataset') {\n        return item.dataset.label || '';\n      } else if (item.label) {\n        return item.label;\n      } else if (labelCount > 0 && item.dataIndex < labelCount) {\n        return labels[item.dataIndex];\n      }\n    }\n    return '';\n  },\n  afterTitle: noop,\n  beforeBody: noop,\n  beforeLabel: noop,\n  label: function label(tooltipItem) {\n    if (this && this.options && this.options.mode === 'dataset') {\n      return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n    }\n    var label = tooltipItem.dataset.label || '';\n    if (label) {\n      label += ': ';\n    }\n    var value = tooltipItem.formattedValue;\n    if (!isNullOrUndef(value)) {\n      label += value;\n    }\n    return label;\n  },\n  labelColor: function labelColor(tooltipItem) {\n    var meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n    var options = meta.controller.getStyle(tooltipItem.dataIndex);\n    return {\n      borderColor: options.borderColor,\n      backgroundColor: options.backgroundColor,\n      borderWidth: options.borderWidth,\n      borderDash: options.borderDash,\n      borderDashOffset: options.borderDashOffset,\n      borderRadius: 0\n    };\n  },\n  labelTextColor: function labelTextColor() {\n    return this.options.bodyColor;\n  },\n  labelPointStyle: function labelPointStyle(tooltipItem) {\n    var meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n    var options = meta.controller.getStyle(tooltipItem.dataIndex);\n    return {\n      pointStyle: options.pointStyle,\n      rotation: options.rotation\n    };\n  },\n  afterLabel: noop,\n  afterBody: noop,\n  beforeFooter: noop,\n  footer: noop,\n  afterFooter: noop\n};\nfunction invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n  var result = callbacks[name].call(ctx, arg);\n  if (typeof result === 'undefined') {\n    return defaultCallbacks[name].call(ctx, arg);\n  }\n  return result;\n}\nvar Tooltip = /*#__PURE__*/function (_Element8) {\n  _inherits(Tooltip, _Element8);\n  var _super18 = _createSuper(Tooltip);\n  function Tooltip(config) {\n    var _this31;\n    _classCallCheck(this, Tooltip);\n    _this31 = _super18.call(this);\n    _this31.opacity = 0;\n    _this31._active = [];\n    _this31._eventPosition = undefined;\n    _this31._size = undefined;\n    _this31._cachedAnimations = undefined;\n    _this31._tooltipItems = [];\n    _this31.$animations = undefined;\n    _this31.$context = undefined;\n    _this31.chart = config.chart;\n    _this31.options = config.options;\n    _this31.dataPoints = undefined;\n    _this31.title = undefined;\n    _this31.beforeBody = undefined;\n    _this31.body = undefined;\n    _this31.afterBody = undefined;\n    _this31.footer = undefined;\n    _this31.xAlign = undefined;\n    _this31.yAlign = undefined;\n    _this31.x = undefined;\n    _this31.y = undefined;\n    _this31.height = undefined;\n    _this31.width = undefined;\n    _this31.caretX = undefined;\n    _this31.caretY = undefined;\n    _this31.labelColors = undefined;\n    _this31.labelPointStyles = undefined;\n    _this31.labelTextColors = undefined;\n    return _this31;\n  }\n  _createClass(Tooltip, [{\n    key: \"initialize\",\n    value: function initialize(options) {\n      this.options = options;\n      this._cachedAnimations = undefined;\n      this.$context = undefined;\n    }\n  }, {\n    key: \"_resolveAnimations\",\n    value: function _resolveAnimations() {\n      var cached = this._cachedAnimations;\n      if (cached) {\n        return cached;\n      }\n      var chart = this.chart;\n      var options = this.options.setContext(this.getContext());\n      var opts = options.enabled && chart.options.animation && options.animations;\n      var animations = new Animations(this.chart, opts);\n      if (opts._cacheable) {\n        this._cachedAnimations = Object.freeze(animations);\n      }\n      return animations;\n    }\n  }, {\n    key: \"getContext\",\n    value: function getContext() {\n      return this.$context || (this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n    }\n  }, {\n    key: \"getTitle\",\n    value: function getTitle(context, options) {\n      var callbacks = options.callbacks;\n      var beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\n      var title = invokeCallbackWithFallback(callbacks, 'title', this, context);\n      var afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\n      var lines = [];\n      lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n      lines = pushOrConcat(lines, splitNewlines(title));\n      lines = pushOrConcat(lines, splitNewlines(afterTitle));\n      return lines;\n    }\n  }, {\n    key: \"getBeforeBody\",\n    value: function getBeforeBody(tooltipItems, options) {\n      return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems));\n    }\n  }, {\n    key: \"getBody\",\n    value: function getBody(tooltipItems, options) {\n      var _this32 = this;\n      var callbacks = options.callbacks;\n      var bodyItems = [];\n      each(tooltipItems, function (context) {\n        var bodyItem = {\n          before: [],\n          lines: [],\n          after: []\n        };\n        var scoped = overrideCallbacks(callbacks, context);\n        pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', _this32, context)));\n        pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', _this32, context));\n        pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', _this32, context)));\n        bodyItems.push(bodyItem);\n      });\n      return bodyItems;\n    }\n  }, {\n    key: \"getAfterBody\",\n    value: function getAfterBody(tooltipItems, options) {\n      return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems));\n    }\n  }, {\n    key: \"getFooter\",\n    value: function getFooter(tooltipItems, options) {\n      var callbacks = options.callbacks;\n      var beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\n      var footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\n      var afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\n      var lines = [];\n      lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n      lines = pushOrConcat(lines, splitNewlines(footer));\n      lines = pushOrConcat(lines, splitNewlines(afterFooter));\n      return lines;\n    }\n  }, {\n    key: \"_createItems\",\n    value: function _createItems(options) {\n      var _this33 = this;\n      var active = this._active;\n      var data = this.chart.data;\n      var labelColors = [];\n      var labelPointStyles = [];\n      var labelTextColors = [];\n      var tooltipItems = [];\n      var i, len;\n      for (i = 0, len = active.length; i < len; ++i) {\n        tooltipItems.push(createTooltipItem(this.chart, active[i]));\n      }\n      if (options.filter) {\n        tooltipItems = tooltipItems.filter(function (element, index, array) {\n          return options.filter(element, index, array, data);\n        });\n      }\n      if (options.itemSort) {\n        tooltipItems = tooltipItems.sort(function (a, b) {\n          return options.itemSort(a, b, data);\n        });\n      }\n      each(tooltipItems, function (context) {\n        var scoped = overrideCallbacks(options.callbacks, context);\n        labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', _this33, context));\n        labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', _this33, context));\n        labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', _this33, context));\n      });\n      this.labelColors = labelColors;\n      this.labelPointStyles = labelPointStyles;\n      this.labelTextColors = labelTextColors;\n      this.dataPoints = tooltipItems;\n      return tooltipItems;\n    }\n  }, {\n    key: \"update\",\n    value: function update(changed, replay) {\n      var options = this.options.setContext(this.getContext());\n      var active = this._active;\n      var properties;\n      var tooltipItems = [];\n      if (!active.length) {\n        if (this.opacity !== 0) {\n          properties = {\n            opacity: 0\n          };\n        }\n      } else {\n        var position = positioners[options.position].call(this, active, this._eventPosition);\n        tooltipItems = this._createItems(options);\n        this.title = this.getTitle(tooltipItems, options);\n        this.beforeBody = this.getBeforeBody(tooltipItems, options);\n        this.body = this.getBody(tooltipItems, options);\n        this.afterBody = this.getAfterBody(tooltipItems, options);\n        this.footer = this.getFooter(tooltipItems, options);\n        var size = this._size = getTooltipSize(this, options);\n        var positionAndSize = Object.assign({}, position, size);\n        var alignment = determineAlignment(this.chart, options, positionAndSize);\n        var backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n        this.xAlign = alignment.xAlign;\n        this.yAlign = alignment.yAlign;\n        properties = {\n          opacity: 1,\n          x: backgroundPoint.x,\n          y: backgroundPoint.y,\n          width: size.width,\n          height: size.height,\n          caretX: position.x,\n          caretY: position.y\n        };\n      }\n      this._tooltipItems = tooltipItems;\n      this.$context = undefined;\n      if (properties) {\n        this._resolveAnimations().update(this, properties);\n      }\n      if (changed && options.external) {\n        options.external.call(this, {\n          chart: this.chart,\n          tooltip: this,\n          replay: replay\n        });\n      }\n    }\n  }, {\n    key: \"drawCaret\",\n    value: function drawCaret(tooltipPoint, ctx, size, options) {\n      var caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n      ctx.lineTo(caretPosition.x1, caretPosition.y1);\n      ctx.lineTo(caretPosition.x2, caretPosition.y2);\n      ctx.lineTo(caretPosition.x3, caretPosition.y3);\n    }\n  }, {\n    key: \"getCaretPosition\",\n    value: function getCaretPosition(tooltipPoint, size, options) {\n      var xAlign = this.xAlign,\n        yAlign = this.yAlign;\n      var caretSize = options.caretSize,\n        cornerRadius = options.cornerRadius;\n      var _toTRBLCorners2 = toTRBLCorners(cornerRadius),\n        topLeft = _toTRBLCorners2.topLeft,\n        topRight = _toTRBLCorners2.topRight,\n        bottomLeft = _toTRBLCorners2.bottomLeft,\n        bottomRight = _toTRBLCorners2.bottomRight;\n      var ptX = tooltipPoint.x,\n        ptY = tooltipPoint.y;\n      var width = size.width,\n        height = size.height;\n      var x1, x2, x3, y1, y2, y3;\n      if (yAlign === 'center') {\n        y2 = ptY + height / 2;\n        if (xAlign === 'left') {\n          x1 = ptX;\n          x2 = x1 - caretSize;\n          y1 = y2 + caretSize;\n          y3 = y2 - caretSize;\n        } else {\n          x1 = ptX + width;\n          x2 = x1 + caretSize;\n          y1 = y2 - caretSize;\n          y3 = y2 + caretSize;\n        }\n        x3 = x1;\n      } else {\n        if (xAlign === 'left') {\n          x2 = ptX + Math.max(topLeft, bottomLeft) + caretSize;\n        } else if (xAlign === 'right') {\n          x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n        } else {\n          x2 = this.caretX;\n        }\n        if (yAlign === 'top') {\n          y1 = ptY;\n          y2 = y1 - caretSize;\n          x1 = x2 - caretSize;\n          x3 = x2 + caretSize;\n        } else {\n          y1 = ptY + height;\n          y2 = y1 + caretSize;\n          x1 = x2 + caretSize;\n          x3 = x2 - caretSize;\n        }\n        y3 = y1;\n      }\n      return {\n        x1: x1,\n        x2: x2,\n        x3: x3,\n        y1: y1,\n        y2: y2,\n        y3: y3\n      };\n    }\n  }, {\n    key: \"drawTitle\",\n    value: function drawTitle(pt, ctx, options) {\n      var title = this.title;\n      var length = title.length;\n      var titleFont, titleSpacing, i;\n      if (length) {\n        var rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n        pt.x = getAlignedX(this, options.titleAlign, options);\n        ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n        ctx.textBaseline = 'middle';\n        titleFont = toFont(options.titleFont);\n        titleSpacing = options.titleSpacing;\n        ctx.fillStyle = options.titleColor;\n        ctx.font = titleFont.string;\n        for (i = 0; i < length; ++i) {\n          ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n          pt.y += titleFont.lineHeight + titleSpacing;\n          if (i + 1 === length) {\n            pt.y += options.titleMarginBottom - titleSpacing;\n          }\n        }\n      }\n    }\n  }, {\n    key: \"_drawColorBox\",\n    value: function _drawColorBox(ctx, pt, i, rtlHelper, options) {\n      var labelColors = this.labelColors[i];\n      var labelPointStyle = this.labelPointStyles[i];\n      var boxHeight = options.boxHeight,\n        boxWidth = options.boxWidth,\n        boxPadding = options.boxPadding;\n      var bodyFont = toFont(options.bodyFont);\n      var colorX = getAlignedX(this, 'left', options);\n      var rtlColorX = rtlHelper.x(colorX);\n      var yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n      var colorY = pt.y + yOffSet;\n      if (options.usePointStyle) {\n        var drawOptions = {\n          radius: Math.min(boxWidth, boxHeight) / 2,\n          pointStyle: labelPointStyle.pointStyle,\n          rotation: labelPointStyle.rotation,\n          borderWidth: 1\n        };\n        var centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n        var centerY = colorY + boxHeight / 2;\n        ctx.strokeStyle = options.multiKeyBackground;\n        ctx.fillStyle = options.multiKeyBackground;\n        drawPoint(ctx, drawOptions, centerX, centerY);\n        ctx.strokeStyle = labelColors.borderColor;\n        ctx.fillStyle = labelColors.backgroundColor;\n        drawPoint(ctx, drawOptions, centerX, centerY);\n      } else {\n        ctx.lineWidth = isObject(labelColors.borderWidth) ? Math.max.apply(Math, _toConsumableArray(Object.values(labelColors.borderWidth))) : labelColors.borderWidth || 1;\n        ctx.strokeStyle = labelColors.borderColor;\n        ctx.setLineDash(labelColors.borderDash || []);\n        ctx.lineDashOffset = labelColors.borderDashOffset || 0;\n        var outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth - boxPadding);\n        var innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - boxPadding - 2);\n        var borderRadius = toTRBLCorners(labelColors.borderRadius);\n        if (Object.values(borderRadius).some(function (v) {\n          return v !== 0;\n        })) {\n          ctx.beginPath();\n          ctx.fillStyle = options.multiKeyBackground;\n          addRoundedRectPath(ctx, {\n            x: outerX,\n            y: colorY,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius\n          });\n          ctx.fill();\n          ctx.stroke();\n          ctx.fillStyle = labelColors.backgroundColor;\n          ctx.beginPath();\n          addRoundedRectPath(ctx, {\n            x: innerX,\n            y: colorY + 1,\n            w: boxWidth - 2,\n            h: boxHeight - 2,\n            radius: borderRadius\n          });\n          ctx.fill();\n        } else {\n          ctx.fillStyle = options.multiKeyBackground;\n          ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n          ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n          ctx.fillStyle = labelColors.backgroundColor;\n          ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n        }\n      }\n      ctx.fillStyle = this.labelTextColors[i];\n    }\n  }, {\n    key: \"drawBody\",\n    value: function drawBody(pt, ctx, options) {\n      var body = this.body;\n      var bodySpacing = options.bodySpacing,\n        bodyAlign = options.bodyAlign,\n        displayColors = options.displayColors,\n        boxHeight = options.boxHeight,\n        boxWidth = options.boxWidth,\n        boxPadding = options.boxPadding;\n      var bodyFont = toFont(options.bodyFont);\n      var bodyLineHeight = bodyFont.lineHeight;\n      var xLinePadding = 0;\n      var rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n      var fillLineOfText = function fillLineOfText(line) {\n        ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n        pt.y += bodyLineHeight + bodySpacing;\n      };\n      var bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n      var bodyItem, textColor, lines, i, j, ilen, jlen;\n      ctx.textAlign = bodyAlign;\n      ctx.textBaseline = 'middle';\n      ctx.font = bodyFont.string;\n      pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n      ctx.fillStyle = options.bodyColor;\n      each(this.beforeBody, fillLineOfText);\n      xLinePadding = displayColors && bodyAlignForCalculation !== 'right' ? bodyAlign === 'center' ? boxWidth / 2 + boxPadding : boxWidth + 2 + boxPadding : 0;\n      for (i = 0, ilen = body.length; i < ilen; ++i) {\n        bodyItem = body[i];\n        textColor = this.labelTextColors[i];\n        ctx.fillStyle = textColor;\n        each(bodyItem.before, fillLineOfText);\n        lines = bodyItem.lines;\n        if (displayColors && lines.length) {\n          this._drawColorBox(ctx, pt, i, rtlHelper, options);\n          bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n        }\n        for (j = 0, jlen = lines.length; j < jlen; ++j) {\n          fillLineOfText(lines[j]);\n          bodyLineHeight = bodyFont.lineHeight;\n        }\n        each(bodyItem.after, fillLineOfText);\n      }\n      xLinePadding = 0;\n      bodyLineHeight = bodyFont.lineHeight;\n      each(this.afterBody, fillLineOfText);\n      pt.y -= bodySpacing;\n    }\n  }, {\n    key: \"drawFooter\",\n    value: function drawFooter(pt, ctx, options) {\n      var footer = this.footer;\n      var length = footer.length;\n      var footerFont, i;\n      if (length) {\n        var rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n        pt.x = getAlignedX(this, options.footerAlign, options);\n        pt.y += options.footerMarginTop;\n        ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n        ctx.textBaseline = 'middle';\n        footerFont = toFont(options.footerFont);\n        ctx.fillStyle = options.footerColor;\n        ctx.font = footerFont.string;\n        for (i = 0; i < length; ++i) {\n          ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n          pt.y += footerFont.lineHeight + options.footerSpacing;\n        }\n      }\n    }\n  }, {\n    key: \"drawBackground\",\n    value: function drawBackground(pt, ctx, tooltipSize, options) {\n      var xAlign = this.xAlign,\n        yAlign = this.yAlign;\n      var x = pt.x,\n        y = pt.y;\n      var width = tooltipSize.width,\n        height = tooltipSize.height;\n      var _toTRBLCorners3 = toTRBLCorners(options.cornerRadius),\n        topLeft = _toTRBLCorners3.topLeft,\n        topRight = _toTRBLCorners3.topRight,\n        bottomLeft = _toTRBLCorners3.bottomLeft,\n        bottomRight = _toTRBLCorners3.bottomRight;\n      ctx.fillStyle = options.backgroundColor;\n      ctx.strokeStyle = options.borderColor;\n      ctx.lineWidth = options.borderWidth;\n      ctx.beginPath();\n      ctx.moveTo(x + topLeft, y);\n      if (yAlign === 'top') {\n        this.drawCaret(pt, ctx, tooltipSize, options);\n      }\n      ctx.lineTo(x + width - topRight, y);\n      ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n      if (yAlign === 'center' && xAlign === 'right') {\n        this.drawCaret(pt, ctx, tooltipSize, options);\n      }\n      ctx.lineTo(x + width, y + height - bottomRight);\n      ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n      if (yAlign === 'bottom') {\n        this.drawCaret(pt, ctx, tooltipSize, options);\n      }\n      ctx.lineTo(x + bottomLeft, y + height);\n      ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n      if (yAlign === 'center' && xAlign === 'left') {\n        this.drawCaret(pt, ctx, tooltipSize, options);\n      }\n      ctx.lineTo(x, y + topLeft);\n      ctx.quadraticCurveTo(x, y, x + topLeft, y);\n      ctx.closePath();\n      ctx.fill();\n      if (options.borderWidth > 0) {\n        ctx.stroke();\n      }\n    }\n  }, {\n    key: \"_updateAnimationTarget\",\n    value: function _updateAnimationTarget(options) {\n      var chart = this.chart;\n      var anims = this.$animations;\n      var animX = anims && anims.x;\n      var animY = anims && anims.y;\n      if (animX || animY) {\n        var position = positioners[options.position].call(this, this._active, this._eventPosition);\n        if (!position) {\n          return;\n        }\n        var size = this._size = getTooltipSize(this, options);\n        var positionAndSize = Object.assign({}, position, this._size);\n        var alignment = determineAlignment(chart, options, positionAndSize);\n        var point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n        if (animX._to !== point.x || animY._to !== point.y) {\n          this.xAlign = alignment.xAlign;\n          this.yAlign = alignment.yAlign;\n          this.width = size.width;\n          this.height = size.height;\n          this.caretX = position.x;\n          this.caretY = position.y;\n          this._resolveAnimations().update(this, point);\n        }\n      }\n    }\n  }, {\n    key: \"_willRender\",\n    value: function _willRender() {\n      return !!this.opacity;\n    }\n  }, {\n    key: \"draw\",\n    value: function draw(ctx) {\n      var options = this.options.setContext(this.getContext());\n      var opacity = this.opacity;\n      if (!opacity) {\n        return;\n      }\n      this._updateAnimationTarget(options);\n      var tooltipSize = {\n        width: this.width,\n        height: this.height\n      };\n      var pt = {\n        x: this.x,\n        y: this.y\n      };\n      opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n      var padding = toPadding(options.padding);\n      var hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n      if (options.enabled && hasTooltipContent) {\n        ctx.save();\n        ctx.globalAlpha = opacity;\n        this.drawBackground(pt, ctx, tooltipSize, options);\n        overrideTextDirection(ctx, options.textDirection);\n        pt.y += padding.top;\n        this.drawTitle(pt, ctx, options);\n        this.drawBody(pt, ctx, options);\n        this.drawFooter(pt, ctx, options);\n        restoreTextDirection(ctx, options.textDirection);\n        ctx.restore();\n      }\n    }\n  }, {\n    key: \"getActiveElements\",\n    value: function getActiveElements() {\n      return this._active || [];\n    }\n  }, {\n    key: \"setActiveElements\",\n    value: function setActiveElements(activeElements, eventPosition) {\n      var _this34 = this;\n      var lastActive = this._active;\n      var active = activeElements.map(function (_ref11) {\n        var datasetIndex = _ref11.datasetIndex,\n          index = _ref11.index;\n        var meta = _this34.chart.getDatasetMeta(datasetIndex);\n        if (!meta) {\n          throw new Error('Cannot find a dataset at index ' + datasetIndex);\n        }\n        return {\n          datasetIndex: datasetIndex,\n          element: meta.data[index],\n          index: index\n        };\n      });\n      var changed = !_elementsEqual(lastActive, active);\n      var positionChanged = this._positionChanged(active, eventPosition);\n      if (changed || positionChanged) {\n        this._active = active;\n        this._eventPosition = eventPosition;\n        this._ignoreReplayEvents = true;\n        this.update(true);\n      }\n    }\n  }, {\n    key: \"handleEvent\",\n    value: function handleEvent(e, replay) {\n      var inChartArea = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n      if (replay && this._ignoreReplayEvents) {\n        return false;\n      }\n      this._ignoreReplayEvents = false;\n      var options = this.options;\n      var lastActive = this._active || [];\n      var active = this._getActiveElements(e, lastActive, replay, inChartArea);\n      var positionChanged = this._positionChanged(active, e);\n      var changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n      if (changed) {\n        this._active = active;\n        if (options.enabled || options.external) {\n          this._eventPosition = {\n            x: e.x,\n            y: e.y\n          };\n          this.update(true, replay);\n        }\n      }\n      return changed;\n    }\n  }, {\n    key: \"_getActiveElements\",\n    value: function _getActiveElements(e, lastActive, replay, inChartArea) {\n      var options = this.options;\n      if (e.type === 'mouseout') {\n        return [];\n      }\n      if (!inChartArea) {\n        return lastActive;\n      }\n      var active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n      if (options.reverse) {\n        active.reverse();\n      }\n      return active;\n    }\n  }, {\n    key: \"_positionChanged\",\n    value: function _positionChanged(active, e) {\n      var caretX = this.caretX,\n        caretY = this.caretY,\n        options = this.options;\n      var position = positioners[options.position].call(this, active, e);\n      return position !== false && (caretX !== position.x || caretY !== position.y);\n    }\n  }]);\n  return Tooltip;\n}(Element);\n_defineProperty(Tooltip, \"positioners\", positioners);\nvar plugin_tooltip = {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners: positioners,\n  afterInit: function afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({\n        chart: chart,\n        options: options\n      });\n    }\n  },\n  beforeUpdate: function beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  reset: function reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  afterDraw: function afterDraw(chart) {\n    var tooltip = chart.tooltip;\n    if (tooltip && tooltip._willRender()) {\n      var args = {\n        tooltip: tooltip\n      };\n      if (chart.notifyPlugins('beforeTooltipDraw', _objectSpread(_objectSpread({}, args), {}, {\n        cancelable: true\n      })) === false) {\n        return;\n      }\n      tooltip.draw(chart.ctx);\n      chart.notifyPlugins('afterTooltipDraw', args);\n    }\n  },\n  afterEvent: function afterEvent(chart, args) {\n    if (chart.tooltip) {\n      var useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n        args.changed = true;\n      }\n    }\n  },\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold'\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {},\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold'\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: function boxHeight(ctx, opts) {\n      return opts.bodyFont.size;\n    },\n    boxWidth: function boxWidth(ctx, opts) {\n      return opts.bodyFont.size;\n    },\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    boxPadding: 0,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart'\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY']\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: defaultCallbacks\n  },\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n  descriptors: {\n    _scriptable: function _scriptable(name) {\n      return name !== 'filter' && name !== 'itemSort' && name !== 'external';\n    },\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n  additionalOptionScopes: ['interaction']\n};\nvar plugins = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  Colors: plugin_colors,\n  Decimation: plugin_decimation,\n  Filler: index,\n  Legend: plugin_legend,\n  SubTitle: plugin_subtitle,\n  Title: plugin_title,\n  Tooltip: plugin_tooltip\n});\nvar addIfString = function addIfString(labels, raw, index, addedLabels) {\n  if (typeof raw === 'string') {\n    index = labels.push(raw) - 1;\n    addedLabels.unshift({\n      index: index,\n      label: raw\n    });\n  } else if (isNaN(raw)) {\n    index = null;\n  }\n  return index;\n};\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n  var first = labels.indexOf(raw);\n  if (first === -1) {\n    return addIfString(labels, raw, index, addedLabels);\n  }\n  var last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\nvar validIndex = function validIndex(index, max) {\n  return index === null ? null : _limitValue(Math.round(index), 0, max);\n};\nfunction _getLabelForValue(value) {\n  var labels = this.getLabels();\n  if (value >= 0 && value < labels.length) {\n    return labels[value];\n  }\n  return value;\n}\nvar CategoryScale = /*#__PURE__*/function (_Scale) {\n  _inherits(CategoryScale, _Scale);\n  var _super19 = _createSuper(CategoryScale);\n  function CategoryScale(cfg) {\n    var _this35;\n    _classCallCheck(this, CategoryScale);\n    _this35 = _super19.call(this, cfg);\n    _this35._startValue = undefined;\n    _this35._valueRange = 0;\n    _this35._addedLabels = [];\n    return _this35;\n  }\n  _createClass(CategoryScale, [{\n    key: \"init\",\n    value: function init(scaleOptions) {\n      var added = this._addedLabels;\n      if (added.length) {\n        var labels = this.getLabels();\n        var _iterator25 = _createForOfIteratorHelper(added),\n          _step25;\n        try {\n          for (_iterator25.s(); !(_step25 = _iterator25.n()).done;) {\n            var _step25$value = _step25.value,\n              _index3 = _step25$value.index,\n              label = _step25$value.label;\n            if (labels[_index3] === label) {\n              labels.splice(_index3, 1);\n            }\n          }\n        } catch (err) {\n          _iterator25.e(err);\n        } finally {\n          _iterator25.f();\n        }\n        this._addedLabels = [];\n      }\n      _get(_getPrototypeOf(CategoryScale.prototype), \"init\", this).call(this, scaleOptions);\n    }\n  }, {\n    key: \"parse\",\n    value: function parse(raw, index) {\n      if (isNullOrUndef(raw)) {\n        return null;\n      }\n      var labels = this.getLabels();\n      index = isFinite(index) && labels[index] === raw ? index : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n      return validIndex(index, labels.length - 1);\n    }\n  }, {\n    key: \"determineDataLimits\",\n    value: function determineDataLimits() {\n      var _this$getUserBounds2 = this.getUserBounds(),\n        minDefined = _this$getUserBounds2.minDefined,\n        maxDefined = _this$getUserBounds2.maxDefined;\n      var _this$getMinMax = this.getMinMax(true),\n        min = _this$getMinMax.min,\n        max = _this$getMinMax.max;\n      if (this.options.bounds === 'ticks') {\n        if (!minDefined) {\n          min = 0;\n        }\n        if (!maxDefined) {\n          max = this.getLabels().length - 1;\n        }\n      }\n      this.min = min;\n      this.max = max;\n    }\n  }, {\n    key: \"buildTicks\",\n    value: function buildTicks() {\n      var min = this.min;\n      var max = this.max;\n      var offset = this.options.offset;\n      var ticks = [];\n      var labels = this.getLabels();\n      labels = min === 0 && max === labels.length - 1 ? labels : labels.slice(min, max + 1);\n      this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n      this._startValue = this.min - (offset ? 0.5 : 0);\n      for (var value = min; value <= max; value++) {\n        ticks.push({\n          value: value\n        });\n      }\n      return ticks;\n    }\n  }, {\n    key: \"getLabelForValue\",\n    value: function getLabelForValue(value) {\n      return _getLabelForValue.call(this, value);\n    }\n  }, {\n    key: \"configure\",\n    value: function configure() {\n      _get(_getPrototypeOf(CategoryScale.prototype), \"configure\", this).call(this);\n      if (!this.isHorizontal()) {\n        this._reversePixels = !this._reversePixels;\n      }\n    }\n  }, {\n    key: \"getPixelForValue\",\n    value: function getPixelForValue(value) {\n      if (typeof value !== 'number') {\n        value = this.parse(value);\n      }\n      return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n  }, {\n    key: \"getPixelForTick\",\n    value: function getPixelForTick(index) {\n      var ticks = this.ticks;\n      if (index < 0 || index > ticks.length - 1) {\n        return null;\n      }\n      return this.getPixelForValue(ticks[index].value);\n    }\n  }, {\n    key: \"getValueForPixel\",\n    value: function getValueForPixel(pixel) {\n      return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n    }\n  }, {\n    key: \"getBasePixel\",\n    value: function getBasePixel() {\n      return this.bottom;\n    }\n  }]);\n  return CategoryScale;\n}(Scale);\n_defineProperty(CategoryScale, \"id\", 'category');\n_defineProperty(CategoryScale, \"defaults\", {\n  ticks: {\n    callback: _getLabelForValue\n  }\n});\nfunction generateTicks$1(generationOptions, dataRange) {\n  var ticks = [];\n  var MIN_SPACING = 1e-14;\n  var bounds = generationOptions.bounds,\n    step = generationOptions.step,\n    min = generationOptions.min,\n    max = generationOptions.max,\n    precision = generationOptions.precision,\n    count = generationOptions.count,\n    maxTicks = generationOptions.maxTicks,\n    maxDigits = generationOptions.maxDigits,\n    includeBounds = generationOptions.includeBounds;\n  var unit = step || 1;\n  var maxSpaces = maxTicks - 1;\n  var rmin = dataRange.min,\n    rmax = dataRange.max;\n  var minDefined = !isNullOrUndef(min);\n  var maxDefined = !isNullOrUndef(max);\n  var countDefined = !isNullOrUndef(count);\n  var minSpacing = (rmax - rmin) / (maxDigits + 1);\n  var spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  var factor, niceMin, niceMax, numSpaces;\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{\n      value: rmin\n    }, {\n      value: rmax\n    }];\n  }\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n  if (!isNullOrUndef(precision)) {\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    numSpaces = (niceMax - niceMin) / spacing;\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n  var decimalPlaces = Math.max(_decimalPlaces(spacing), _decimalPlaces(niceMin));\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n  var j = 0;\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({\n        value: min\n      });\n      if (niceMin < min) {\n        j++;\n      }\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n  for (; j < numSpaces; ++j) {\n    ticks.push({\n      value: Math.round((niceMin + j * spacing) * factor) / factor\n    });\n  }\n  if (maxDefined && includeBounds && niceMax !== max) {\n    if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({\n        value: max\n      });\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({\n      value: niceMax\n    });\n  }\n  return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, _ref12) {\n  var horizontal = _ref12.horizontal,\n    minRotation = _ref12.minRotation;\n  var rad = toRadians(minRotation);\n  var ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  var length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\nvar LinearScaleBase = /*#__PURE__*/function (_Scale2) {\n  _inherits(LinearScaleBase, _Scale2);\n  var _super20 = _createSuper(LinearScaleBase);\n  function LinearScaleBase(cfg) {\n    var _this36;\n    _classCallCheck(this, LinearScaleBase);\n    _this36 = _super20.call(this, cfg);\n    _this36.start = undefined;\n    _this36.end = undefined;\n    _this36._startValue = undefined;\n    _this36._endValue = undefined;\n    _this36._valueRange = 0;\n    return _this36;\n  }\n  _createClass(LinearScaleBase, [{\n    key: \"parse\",\n    value: function parse(raw, index) {\n      if (isNullOrUndef(raw)) {\n        return null;\n      }\n      if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n        return null;\n      }\n      return +raw;\n    }\n  }, {\n    key: \"handleTickRangeOptions\",\n    value: function handleTickRangeOptions() {\n      var beginAtZero = this.options.beginAtZero;\n      var _this$getUserBounds3 = this.getUserBounds(),\n        minDefined = _this$getUserBounds3.minDefined,\n        maxDefined = _this$getUserBounds3.maxDefined;\n      var min = this.min,\n        max = this.max;\n      var setMin = function setMin(v) {\n        return min = minDefined ? min : v;\n      };\n      var setMax = function setMax(v) {\n        return max = maxDefined ? max : v;\n      };\n      if (beginAtZero) {\n        var minSign = sign(min);\n        var maxSign = sign(max);\n        if (minSign < 0 && maxSign < 0) {\n          setMax(0);\n        } else if (minSign > 0 && maxSign > 0) {\n          setMin(0);\n        }\n      }\n      if (min === max) {\n        var offset = max === 0 ? 1 : Math.abs(max * 0.05);\n        setMax(max + offset);\n        if (!beginAtZero) {\n          setMin(min - offset);\n        }\n      }\n      this.min = min;\n      this.max = max;\n    }\n  }, {\n    key: \"getTickLimit\",\n    value: function getTickLimit() {\n      var tickOpts = this.options.ticks;\n      var maxTicksLimit = tickOpts.maxTicksLimit,\n        stepSize = tickOpts.stepSize;\n      var maxTicks;\n      if (stepSize) {\n        maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n        if (maxTicks > 1000) {\n          console.warn(\"scales.\".concat(this.id, \".ticks.stepSize: \").concat(stepSize, \" would result generating up to \").concat(maxTicks, \" ticks. Limiting to 1000.\"));\n          maxTicks = 1000;\n        }\n      } else {\n        maxTicks = this.computeTickLimit();\n        maxTicksLimit = maxTicksLimit || 11;\n      }\n      if (maxTicksLimit) {\n        maxTicks = Math.min(maxTicksLimit, maxTicks);\n      }\n      return maxTicks;\n    }\n  }, {\n    key: \"computeTickLimit\",\n    value: function computeTickLimit() {\n      return Number.POSITIVE_INFINITY;\n    }\n  }, {\n    key: \"buildTicks\",\n    value: function buildTicks() {\n      var opts = this.options;\n      var tickOpts = opts.ticks;\n      var maxTicks = this.getTickLimit();\n      maxTicks = Math.max(2, maxTicks);\n      var numericGeneratorOptions = {\n        maxTicks: maxTicks,\n        bounds: opts.bounds,\n        min: opts.min,\n        max: opts.max,\n        precision: tickOpts.precision,\n        step: tickOpts.stepSize,\n        count: tickOpts.count,\n        maxDigits: this._maxDigits(),\n        horizontal: this.isHorizontal(),\n        minRotation: tickOpts.minRotation || 0,\n        includeBounds: tickOpts.includeBounds !== false\n      };\n      var dataRange = this._range || this;\n      var ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n      if (opts.bounds === 'ticks') {\n        _setMinAndMaxByKey(ticks, this, 'value');\n      }\n      if (opts.reverse) {\n        ticks.reverse();\n        this.start = this.max;\n        this.end = this.min;\n      } else {\n        this.start = this.min;\n        this.end = this.max;\n      }\n      return ticks;\n    }\n  }, {\n    key: \"configure\",\n    value: function configure() {\n      var ticks = this.ticks;\n      var start = this.min;\n      var end = this.max;\n      _get(_getPrototypeOf(LinearScaleBase.prototype), \"configure\", this).call(this);\n      if (this.options.offset && ticks.length) {\n        var offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n        start -= offset;\n        end += offset;\n      }\n      this._startValue = start;\n      this._endValue = end;\n      this._valueRange = end - start;\n    }\n  }, {\n    key: \"getLabelForValue\",\n    value: function getLabelForValue(value) {\n      return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n  }]);\n  return LinearScaleBase;\n}(Scale);\nvar LinearScale = /*#__PURE__*/function (_LinearScaleBase) {\n  _inherits(LinearScale, _LinearScaleBase);\n  var _super21 = _createSuper(LinearScale);\n  function LinearScale() {\n    _classCallCheck(this, LinearScale);\n    return _super21.apply(this, arguments);\n  }\n  _createClass(LinearScale, [{\n    key: \"determineDataLimits\",\n    value: function determineDataLimits() {\n      var _this$getMinMax2 = this.getMinMax(true),\n        min = _this$getMinMax2.min,\n        max = _this$getMinMax2.max;\n      this.min = isNumberFinite(min) ? min : 0;\n      this.max = isNumberFinite(max) ? max : 1;\n      this.handleTickRangeOptions();\n    }\n  }, {\n    key: \"computeTickLimit\",\n    value: function computeTickLimit() {\n      var horizontal = this.isHorizontal();\n      var length = horizontal ? this.width : this.height;\n      var minRotation = toRadians(this.options.ticks.minRotation);\n      var ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n      var tickFont = this._resolveTickFontOptions(0);\n      return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n    }\n  }, {\n    key: \"getPixelForValue\",\n    value: function getPixelForValue(value) {\n      return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n  }, {\n    key: \"getValueForPixel\",\n    value: function getValueForPixel(pixel) {\n      return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n    }\n  }]);\n  return LinearScale;\n}(LinearScaleBase);\n_defineProperty(LinearScale, \"id\", 'linear');\n_defineProperty(LinearScale, \"defaults\", {\n  ticks: {\n    callback: Ticks.formatters.numeric\n  }\n});\nvar log10Floor = function log10Floor(v) {\n  return Math.floor(log10(v));\n};\nvar changeExponent = function changeExponent(v, m) {\n  return Math.pow(10, log10Floor(v) + m);\n};\nfunction isMajor(tickVal) {\n  var remain = tickVal / Math.pow(10, log10Floor(tickVal));\n  return remain === 1;\n}\nfunction steps(min, max, rangeExp) {\n  var rangeStep = Math.pow(10, rangeExp);\n  var start = Math.floor(min / rangeStep);\n  var end = Math.ceil(max / rangeStep);\n  return end - start;\n}\nfunction startExp(min, max) {\n  var range = max - min;\n  var rangeExp = log10Floor(range);\n  while (steps(min, max, rangeExp) > 10) {\n    rangeExp++;\n  }\n  while (steps(min, max, rangeExp) < 10) {\n    rangeExp--;\n  }\n  return Math.min(rangeExp, log10Floor(min));\n}\nfunction generateTicks(generationOptions, _ref13) {\n  var min = _ref13.min,\n    max = _ref13.max;\n  min = finiteOrDefault(generationOptions.min, min);\n  var ticks = [];\n  var minExp = log10Floor(min);\n  var exp = startExp(min, max);\n  var precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  var stepSize = Math.pow(10, exp);\n  var base = minExp > exp ? Math.pow(10, minExp) : 0;\n  var start = Math.round((min - base) * precision) / precision;\n  var offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n  var significand = Math.floor((start - offset) / Math.pow(10, exp));\n  var value = finiteOrDefault(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n  while (value < max) {\n    ticks.push({\n      value: value,\n      major: isMajor(value),\n      significand: significand\n    });\n    if (significand >= 10) {\n      significand = significand < 15 ? 15 : 20;\n    } else {\n      significand++;\n    }\n    if (significand >= 20) {\n      exp++;\n      significand = 2;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n  }\n  var lastTick = finiteOrDefault(generationOptions.max, value);\n  ticks.push({\n    value: lastTick,\n    major: isMajor(lastTick),\n    significand: significand\n  });\n  return ticks;\n}\nvar LogarithmicScale = /*#__PURE__*/function (_Scale3) {\n  _inherits(LogarithmicScale, _Scale3);\n  var _super22 = _createSuper(LogarithmicScale);\n  function LogarithmicScale(cfg) {\n    var _this37;\n    _classCallCheck(this, LogarithmicScale);\n    _this37 = _super22.call(this, cfg);\n    _this37.start = undefined;\n    _this37.end = undefined;\n    _this37._startValue = undefined;\n    _this37._valueRange = 0;\n    return _this37;\n  }\n  _createClass(LogarithmicScale, [{\n    key: \"parse\",\n    value: function parse(raw, index) {\n      var value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n      if (value === 0) {\n        this._zero = true;\n        return undefined;\n      }\n      return isNumberFinite(value) && value > 0 ? value : null;\n    }\n  }, {\n    key: \"determineDataLimits\",\n    value: function determineDataLimits() {\n      var _this$getMinMax3 = this.getMinMax(true),\n        min = _this$getMinMax3.min,\n        max = _this$getMinMax3.max;\n      this.min = isNumberFinite(min) ? Math.max(0, min) : null;\n      this.max = isNumberFinite(max) ? Math.max(0, max) : null;\n      if (this.options.beginAtZero) {\n        this._zero = true;\n      }\n      if (this._zero && this.min !== this._suggestedMin && !isNumberFinite(this._userMin)) {\n        this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\n      }\n      this.handleTickRangeOptions();\n    }\n  }, {\n    key: \"handleTickRangeOptions\",\n    value: function handleTickRangeOptions() {\n      var _this$getUserBounds4 = this.getUserBounds(),\n        minDefined = _this$getUserBounds4.minDefined,\n        maxDefined = _this$getUserBounds4.maxDefined;\n      var min = this.min;\n      var max = this.max;\n      var setMin = function setMin(v) {\n        return min = minDefined ? min : v;\n      };\n      var setMax = function setMax(v) {\n        return max = maxDefined ? max : v;\n      };\n      if (min === max) {\n        if (min <= 0) {\n          setMin(1);\n          setMax(10);\n        } else {\n          setMin(changeExponent(min, -1));\n          setMax(changeExponent(max, +1));\n        }\n      }\n      if (min <= 0) {\n        setMin(changeExponent(max, -1));\n      }\n      if (max <= 0) {\n        setMax(changeExponent(min, +1));\n      }\n      this.min = min;\n      this.max = max;\n    }\n  }, {\n    key: \"buildTicks\",\n    value: function buildTicks() {\n      var opts = this.options;\n      var generationOptions = {\n        min: this._userMin,\n        max: this._userMax\n      };\n      var ticks = generateTicks(generationOptions, this);\n      if (opts.bounds === 'ticks') {\n        _setMinAndMaxByKey(ticks, this, 'value');\n      }\n      if (opts.reverse) {\n        ticks.reverse();\n        this.start = this.max;\n        this.end = this.min;\n      } else {\n        this.start = this.min;\n        this.end = this.max;\n      }\n      return ticks;\n    }\n  }, {\n    key: \"getLabelForValue\",\n    value: function getLabelForValue(value) {\n      return value === undefined ? '0' : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n  }, {\n    key: \"configure\",\n    value: function configure() {\n      var start = this.min;\n      _get(_getPrototypeOf(LogarithmicScale.prototype), \"configure\", this).call(this);\n      this._startValue = log10(start);\n      this._valueRange = log10(this.max) - log10(start);\n    }\n  }, {\n    key: \"getPixelForValue\",\n    value: function getPixelForValue(value) {\n      if (value === undefined || value === 0) {\n        value = this.min;\n      }\n      if (value === null || isNaN(value)) {\n        return NaN;\n      }\n      return this.getPixelForDecimal(value === this.min ? 0 : (log10(value) - this._startValue) / this._valueRange);\n    }\n  }, {\n    key: \"getValueForPixel\",\n    value: function getValueForPixel(pixel) {\n      var decimal = this.getDecimalForPixel(pixel);\n      return Math.pow(10, this._startValue + decimal * this._valueRange);\n    }\n  }]);\n  return LogarithmicScale;\n}(Scale);\n_defineProperty(LogarithmicScale, \"id\", 'logarithmic');\n_defineProperty(LogarithmicScale, \"defaults\", {\n  ticks: {\n    callback: Ticks.formatters.logarithmic,\n    major: {\n      enabled: true\n    }\n  }\n});\nfunction getTickBackdropHeight(opts) {\n  var tickOpts = opts.ticks;\n  if (tickOpts.display && opts.display) {\n    var padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n  return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n  label = isArray(label) ? label : [label];\n  return {\n    w: _longestText(ctx, font.string, label),\n    h: label.length * font.lineHeight\n  };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - size / 2,\n      end: pos + size / 2\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\nfunction fitWithPointLabels(scale) {\n  var orig = {\n    l: scale.left + scale._padding.left,\n    r: scale.right - scale._padding.right,\n    t: scale.top + scale._padding.top,\n    b: scale.bottom - scale._padding.bottom\n  };\n  var limits = Object.assign({}, orig);\n  var labelSizes = [];\n  var padding = [];\n  var valueCount = scale._pointLabels.length;\n  var pointLabelOpts = scale.options.pointLabels;\n  var additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n  for (var i = 0; i < valueCount; i++) {\n    var opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n    padding[i] = opts.padding;\n    var pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n    var plFont = toFont(opts.font);\n    var textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n    var angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n    var angle = Math.round(toDegrees(angleRadians));\n    var hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    var vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n  }\n  scale.setCenterPoint(orig.l - limits.l, limits.r - orig.r, orig.t - limits.t, limits.b - orig.b);\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n  var sin = Math.abs(Math.sin(angle));\n  var cos = Math.abs(Math.cos(angle));\n  var x = 0;\n  var y = 0;\n  if (hLimits.start < orig.l) {\n    x = (orig.l - hLimits.start) / sin;\n    limits.l = Math.min(limits.l, orig.l - x);\n  } else if (hLimits.end > orig.r) {\n    x = (hLimits.end - orig.r) / sin;\n    limits.r = Math.max(limits.r, orig.r + x);\n  }\n  if (vLimits.start < orig.t) {\n    y = (orig.t - vLimits.start) / cos;\n    limits.t = Math.min(limits.t, orig.t - y);\n  } else if (vLimits.end > orig.b) {\n    y = (vLimits.end - orig.b) / cos;\n    limits.b = Math.max(limits.b, orig.b + y);\n  }\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n  var items = [];\n  var valueCount = scale._pointLabels.length;\n  var opts = scale.options;\n  var extra = getTickBackdropHeight(opts) / 2;\n  var outerDistance = scale.drawingArea;\n  var additionalAngle = opts.pointLabels.centerPointLabels ? PI / valueCount : 0;\n  for (var i = 0; i < valueCount; i++) {\n    var pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i], additionalAngle);\n    var angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n    var size = labelSizes[i];\n    var y = yForAngle(pointLabelPosition.y, size.h, angle);\n    var textAlign = getTextAlignForAngle(angle);\n    var left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n    items.push({\n      x: pointLabelPosition.x,\n      y: y,\n      textAlign: textAlign,\n      left: left,\n      top: y,\n      right: left + size.w,\n      bottom: y + size.h\n    });\n  }\n  return items;\n}\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n  return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n  if (align === 'right') {\n    x -= w;\n  } else if (align === 'center') {\n    x -= w / 2;\n  }\n  return x;\n}\nfunction yForAngle(y, h, angle) {\n  if (angle === 90 || angle === 270) {\n    y -= h / 2;\n  } else if (angle > 270 || angle < 90) {\n    y -= h;\n  }\n  return y;\n}\nfunction drawPointLabels(scale, labelCount) {\n  var ctx = scale.ctx,\n    pointLabels = scale.options.pointLabels;\n  for (var i = labelCount - 1; i >= 0; i--) {\n    var optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n    var plFont = toFont(optsAtIndex.font);\n    var _scale$_pointLabelIte = scale._pointLabelItems[i],\n      x = _scale$_pointLabelIte.x,\n      y = _scale$_pointLabelIte.y,\n      textAlign = _scale$_pointLabelIte.textAlign,\n      left = _scale$_pointLabelIte.left,\n      top = _scale$_pointLabelIte.top,\n      right = _scale$_pointLabelIte.right,\n      bottom = _scale$_pointLabelIte.bottom;\n    var _optsAtIndex = optsAtIndex,\n      backdropColor = _optsAtIndex.backdropColor;\n    if (!isNullOrUndef(backdropColor)) {\n      var borderRadius = toTRBLCorners(optsAtIndex.borderRadius);\n      var padding = toPadding(optsAtIndex.backdropPadding);\n      ctx.fillStyle = backdropColor;\n      var backdropLeft = left - padding.left;\n      var backdropTop = top - padding.top;\n      var backdropWidth = right - left + padding.width;\n      var backdropHeight = bottom - top + padding.height;\n      if (Object.values(borderRadius).some(function (v) {\n        return v !== 0;\n      })) {\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: backdropLeft,\n          y: backdropTop,\n          w: backdropWidth,\n          h: backdropHeight,\n          radius: borderRadius\n        });\n        ctx.fill();\n      } else {\n        ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n      }\n    }\n    renderText(ctx, scale._pointLabels[i], x, y + plFont.lineHeight / 2, plFont, {\n      color: optsAtIndex.color,\n      textAlign: textAlign,\n      textBaseline: 'middle'\n    });\n  }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  var ctx = scale.ctx;\n  if (circular) {\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    var pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n    for (var i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n  var ctx = scale.ctx;\n  var circular = gridLineOpts.circular;\n  var color = gridLineOpts.color,\n    lineWidth = gridLineOpts.lineWidth;\n  if (!circular && !labelCount || !color || !lineWidth || radius < 0) {\n    return;\n  }\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(borderOpts.dash);\n  ctx.lineDashOffset = borderOpts.dashOffset;\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\nfunction createPointLabelContext(parent, index, label) {\n  return createContext(parent, {\n    label: label,\n    index: index,\n    type: 'pointLabel'\n  });\n}\nvar RadialLinearScale = /*#__PURE__*/function (_LinearScaleBase2) {\n  _inherits(RadialLinearScale, _LinearScaleBase2);\n  var _super23 = _createSuper(RadialLinearScale);\n  function RadialLinearScale(cfg) {\n    var _this38;\n    _classCallCheck(this, RadialLinearScale);\n    _this38 = _super23.call(this, cfg);\n    _this38.xCenter = undefined;\n    _this38.yCenter = undefined;\n    _this38.drawingArea = undefined;\n    _this38._pointLabels = [];\n    _this38._pointLabelItems = [];\n    return _this38;\n  }\n  _createClass(RadialLinearScale, [{\n    key: \"setDimensions\",\n    value: function setDimensions() {\n      var padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n      var w = this.width = this.maxWidth - padding.width;\n      var h = this.height = this.maxHeight - padding.height;\n      this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n      this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n      this.drawingArea = Math.floor(Math.min(w, h) / 2);\n    }\n  }, {\n    key: \"determineDataLimits\",\n    value: function determineDataLimits() {\n      var _this$getMinMax4 = this.getMinMax(false),\n        min = _this$getMinMax4.min,\n        max = _this$getMinMax4.max;\n      this.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n      this.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n      this.handleTickRangeOptions();\n    }\n  }, {\n    key: \"computeTickLimit\",\n    value: function computeTickLimit() {\n      return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n    }\n  }, {\n    key: \"generateTickLabels\",\n    value: function generateTickLabels(ticks) {\n      var _this39 = this;\n      LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n      this._pointLabels = this.getLabels().map(function (value, index) {\n        var label = callback(_this39.options.pointLabels.callback, [value, index], _this39);\n        return label || label === 0 ? label : '';\n      }).filter(function (v, i) {\n        return _this39.chart.getDataVisibility(i);\n      });\n    }\n  }, {\n    key: \"fit\",\n    value: function fit() {\n      var opts = this.options;\n      if (opts.display && opts.pointLabels.display) {\n        fitWithPointLabels(this);\n      } else {\n        this.setCenterPoint(0, 0, 0, 0);\n      }\n    }\n  }, {\n    key: \"setCenterPoint\",\n    value: function setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n      this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n      this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n      this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n    }\n  }, {\n    key: \"getIndexAngle\",\n    value: function getIndexAngle(index) {\n      var angleMultiplier = TAU / (this._pointLabels.length || 1);\n      var startAngle = this.options.startAngle || 0;\n      return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n    }\n  }, {\n    key: \"getDistanceFromCenterForValue\",\n    value: function getDistanceFromCenterForValue(value) {\n      if (isNullOrUndef(value)) {\n        return NaN;\n      }\n      var scalingFactor = this.drawingArea / (this.max - this.min);\n      if (this.options.reverse) {\n        return (this.max - value) * scalingFactor;\n      }\n      return (value - this.min) * scalingFactor;\n    }\n  }, {\n    key: \"getValueForDistanceFromCenter\",\n    value: function getValueForDistanceFromCenter(distance) {\n      if (isNullOrUndef(distance)) {\n        return NaN;\n      }\n      var scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n      return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n    }\n  }, {\n    key: \"getPointLabelContext\",\n    value: function getPointLabelContext(index) {\n      var pointLabels = this._pointLabels || [];\n      if (index >= 0 && index < pointLabels.length) {\n        var pointLabel = pointLabels[index];\n        return createPointLabelContext(this.getContext(), index, pointLabel);\n      }\n    }\n  }, {\n    key: \"getPointPosition\",\n    value: function getPointPosition(index, distanceFromCenter) {\n      var additionalAngle = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n      var angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n      return {\n        x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n        y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n        angle: angle\n      };\n    }\n  }, {\n    key: \"getPointPositionForValue\",\n    value: function getPointPositionForValue(index, value) {\n      return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n    }\n  }, {\n    key: \"getBasePosition\",\n    value: function getBasePosition(index) {\n      return this.getPointPositionForValue(index || 0, this.getBaseValue());\n    }\n  }, {\n    key: \"getPointLabelPosition\",\n    value: function getPointLabelPosition(index) {\n      var _this$_pointLabelItem = this._pointLabelItems[index],\n        left = _this$_pointLabelItem.left,\n        top = _this$_pointLabelItem.top,\n        right = _this$_pointLabelItem.right,\n        bottom = _this$_pointLabelItem.bottom;\n      return {\n        left: left,\n        top: top,\n        right: right,\n        bottom: bottom\n      };\n    }\n  }, {\n    key: \"drawBackground\",\n    value: function drawBackground() {\n      var _this$options16 = this.options,\n        backgroundColor = _this$options16.backgroundColor,\n        circular = _this$options16.grid.circular;\n      if (backgroundColor) {\n        var ctx = this.ctx;\n        ctx.save();\n        ctx.beginPath();\n        pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n        ctx.closePath();\n        ctx.fillStyle = backgroundColor;\n        ctx.fill();\n        ctx.restore();\n      }\n    }\n  }, {\n    key: \"drawGrid\",\n    value: function drawGrid() {\n      var _this40 = this;\n      var ctx = this.ctx;\n      var opts = this.options;\n      var angleLines = opts.angleLines,\n        grid = opts.grid,\n        border = opts.border;\n      var labelCount = this._pointLabels.length;\n      var i, offset, position;\n      if (opts.pointLabels.display) {\n        drawPointLabels(this, labelCount);\n      }\n      if (grid.display) {\n        this.ticks.forEach(function (tick, index) {\n          if (index !== 0) {\n            offset = _this40.getDistanceFromCenterForValue(tick.value);\n            var context = _this40.getContext(index);\n            var optsAtIndex = grid.setContext(context);\n            var optsAtIndexBorder = border.setContext(context);\n            drawRadiusLine(_this40, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n          }\n        });\n      }\n      if (angleLines.display) {\n        ctx.save();\n        for (i = labelCount - 1; i >= 0; i--) {\n          var optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n          var color = optsAtIndex.color,\n            lineWidth = optsAtIndex.lineWidth;\n          if (!lineWidth || !color) {\n            continue;\n          }\n          ctx.lineWidth = lineWidth;\n          ctx.strokeStyle = color;\n          ctx.setLineDash(optsAtIndex.borderDash);\n          ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n          offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\n          position = this.getPointPosition(i, offset);\n          ctx.beginPath();\n          ctx.moveTo(this.xCenter, this.yCenter);\n          ctx.lineTo(position.x, position.y);\n          ctx.stroke();\n        }\n        ctx.restore();\n      }\n    }\n  }, {\n    key: \"drawBorder\",\n    value: function drawBorder() {}\n  }, {\n    key: \"drawLabels\",\n    value: function drawLabels() {\n      var _this41 = this;\n      var ctx = this.ctx;\n      var opts = this.options;\n      var tickOpts = opts.ticks;\n      if (!tickOpts.display) {\n        return;\n      }\n      var startAngle = this.getIndexAngle(0);\n      var offset, width;\n      ctx.save();\n      ctx.translate(this.xCenter, this.yCenter);\n      ctx.rotate(startAngle);\n      ctx.textAlign = 'center';\n      ctx.textBaseline = 'middle';\n      this.ticks.forEach(function (tick, index) {\n        if (index === 0 && !opts.reverse) {\n          return;\n        }\n        var optsAtIndex = tickOpts.setContext(_this41.getContext(index));\n        var tickFont = toFont(optsAtIndex.font);\n        offset = _this41.getDistanceFromCenterForValue(_this41.ticks[index].value);\n        if (optsAtIndex.showLabelBackdrop) {\n          ctx.font = tickFont.string;\n          width = ctx.measureText(tick.label).width;\n          ctx.fillStyle = optsAtIndex.backdropColor;\n          var padding = toPadding(optsAtIndex.backdropPadding);\n          ctx.fillRect(-width / 2 - padding.left, -offset - tickFont.size / 2 - padding.top, width + padding.width, tickFont.size + padding.height);\n        }\n        renderText(ctx, tick.label, 0, -offset, tickFont, {\n          color: optsAtIndex.color\n        });\n      });\n      ctx.restore();\n    }\n  }, {\n    key: \"drawTitle\",\n    value: function drawTitle() {}\n  }]);\n  return RadialLinearScale;\n}(LinearScaleBase);\n_defineProperty(RadialLinearScale, \"id\", 'radialLinear');\n_defineProperty(RadialLinearScale, \"defaults\", {\n  display: true,\n  animate: true,\n  position: 'chartArea',\n  angleLines: {\n    display: true,\n    lineWidth: 1,\n    borderDash: [],\n    borderDashOffset: 0.0\n  },\n  grid: {\n    circular: false\n  },\n  startAngle: 0,\n  ticks: {\n    showLabelBackdrop: true,\n    callback: Ticks.formatters.numeric\n  },\n  pointLabels: {\n    backdropColor: undefined,\n    backdropPadding: 2,\n    display: true,\n    font: {\n      size: 10\n    },\n    callback: function callback(label) {\n      return label;\n    },\n    padding: 5,\n    centerPointLabels: false\n  }\n});\n_defineProperty(RadialLinearScale, \"defaultRoutes\", {\n  'angleLines.color': 'borderColor',\n  'pointLabels.color': 'color',\n  'ticks.color': 'color'\n});\n_defineProperty(RadialLinearScale, \"descriptors\", {\n  angleLines: {\n    _fallback: 'grid'\n  }\n});\nvar INTERVALS = {\n  millisecond: {\n    common: true,\n    size: 1,\n    steps: 1000\n  },\n  second: {\n    common: true,\n    size: 1000,\n    steps: 60\n  },\n  minute: {\n    common: true,\n    size: 60000,\n    steps: 60\n  },\n  hour: {\n    common: true,\n    size: 3600000,\n    steps: 24\n  },\n  day: {\n    common: true,\n    size: 86400000,\n    steps: 30\n  },\n  week: {\n    common: false,\n    size: 604800000,\n    steps: 4\n  },\n  month: {\n    common: true,\n    size: 2.628e9,\n    steps: 12\n  },\n  quarter: {\n    common: false,\n    size: 7.884e9,\n    steps: 4\n  },\n  year: {\n    common: true,\n    size: 3.154e10\n  }\n};\nvar UNITS = /* #__PURE__ */Object.keys(INTERVALS);\nfunction sorter(a, b) {\n  return a - b;\n}\nfunction _parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n  var adapter = scale._adapter;\n  var _scale$_parseOpts = scale._parseOpts,\n    parser = _scale$_parseOpts.parser,\n    round = _scale$_parseOpts.round,\n    isoWeekday = _scale$_parseOpts.isoWeekday;\n  var value = input;\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n  if (!isNumberFinite(value)) {\n    value = typeof parser === 'string' ? adapter.parse(value, parser) : adapter.parse(value);\n  }\n  if (value === null) {\n    return null;\n  }\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true) ? adapter.startOf(value, 'isoWeek', isoWeekday) : adapter.startOf(value, round);\n  }\n  return +value;\n}\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  var ilen = UNITS.length;\n  for (var i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    var interval = INTERVALS[UNITS[i]];\n    var factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n  return UNITS[ilen - 1];\n}\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (var i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    var unit = UNITS[i];\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\nfunction determineMajorUnit(unit) {\n  for (var i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    var _lookup2 = _lookup(timestamps, time),\n      lo = _lookup2.lo,\n      hi = _lookup2.hi;\n    var timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  var adapter = scale._adapter;\n  var first = +adapter.startOf(ticks[0].value, majorUnit);\n  var last = ticks[ticks.length - 1].value;\n  var major, index;\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n  return ticks;\n}\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  var ticks = [];\n  var map = {};\n  var ilen = values.length;\n  var i, value;\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n    ticks.push({\n      value: value,\n      major: false\n    });\n  }\n  return ilen === 0 || !majorUnit ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nvar TimeScale = /*#__PURE__*/function (_Scale4) {\n  _inherits(TimeScale, _Scale4);\n  var _super24 = _createSuper(TimeScale);\n  function TimeScale(props) {\n    var _this42;\n    _classCallCheck(this, TimeScale);\n    _this42 = _super24.call(this, props);\n    _this42._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n    _this42._unit = 'day';\n    _this42._majorUnit = undefined;\n    _this42._offsets = {};\n    _this42._normalized = false;\n    _this42._parseOpts = undefined;\n    return _this42;\n  }\n  _createClass(TimeScale, [{\n    key: \"init\",\n    value: function init(scaleOpts) {\n      var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var time = scaleOpts.time || (scaleOpts.time = {});\n      var adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n      adapter.init(opts);\n      mergeIf(time.displayFormats, adapter.formats());\n      this._parseOpts = {\n        parser: time.parser,\n        round: time.round,\n        isoWeekday: time.isoWeekday\n      };\n      _get(_getPrototypeOf(TimeScale.prototype), \"init\", this).call(this, scaleOpts);\n      this._normalized = opts.normalized;\n    }\n  }, {\n    key: \"parse\",\n    value: function parse(raw, index) {\n      if (raw === undefined) {\n        return null;\n      }\n      return _parse(this, raw);\n    }\n  }, {\n    key: \"beforeLayout\",\n    value: function beforeLayout() {\n      _get(_getPrototypeOf(TimeScale.prototype), \"beforeLayout\", this).call(this);\n      this._cache = {\n        data: [],\n        labels: [],\n        all: []\n      };\n    }\n  }, {\n    key: \"determineDataLimits\",\n    value: function determineDataLimits() {\n      var options = this.options;\n      var adapter = this._adapter;\n      var unit = options.time.unit || 'day';\n      var _this$getUserBounds5 = this.getUserBounds(),\n        min = _this$getUserBounds5.min,\n        max = _this$getUserBounds5.max,\n        minDefined = _this$getUserBounds5.minDefined,\n        maxDefined = _this$getUserBounds5.maxDefined;\n      function _applyBounds(bounds) {\n        if (!minDefined && !isNaN(bounds.min)) {\n          min = Math.min(min, bounds.min);\n        }\n        if (!maxDefined && !isNaN(bounds.max)) {\n          max = Math.max(max, bounds.max);\n        }\n      }\n      if (!minDefined || !maxDefined) {\n        _applyBounds(this._getLabelBounds());\n        if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n          _applyBounds(this.getMinMax(false));\n        }\n      }\n      min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n      max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n      this.min = Math.min(min, max - 1);\n      this.max = Math.max(min + 1, max);\n    }\n  }, {\n    key: \"_getLabelBounds\",\n    value: function _getLabelBounds() {\n      var arr = this.getLabelTimestamps();\n      var min = Number.POSITIVE_INFINITY;\n      var max = Number.NEGATIVE_INFINITY;\n      if (arr.length) {\n        min = arr[0];\n        max = arr[arr.length - 1];\n      }\n      return {\n        min: min,\n        max: max\n      };\n    }\n  }, {\n    key: \"buildTicks\",\n    value: function buildTicks() {\n      var options = this.options;\n      var timeOpts = options.time;\n      var tickOpts = options.ticks;\n      var timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n      if (options.bounds === 'ticks' && timestamps.length) {\n        this.min = this._userMin || timestamps[0];\n        this.max = this._userMax || timestamps[timestamps.length - 1];\n      }\n      var min = this.min;\n      var max = this.max;\n      var ticks = _filterBetween(timestamps, min, max);\n      this._unit = timeOpts.unit || (tickOpts.autoSkip ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min)) : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n      this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined : determineMajorUnit(this._unit);\n      this.initOffsets(timestamps);\n      if (options.reverse) {\n        ticks.reverse();\n      }\n      return ticksFromTimestamps(this, ticks, this._majorUnit);\n    }\n  }, {\n    key: \"afterAutoSkip\",\n    value: function afterAutoSkip() {\n      if (this.options.offsetAfterAutoskip) {\n        this.initOffsets(this.ticks.map(function (tick) {\n          return +tick.value;\n        }));\n      }\n    }\n  }, {\n    key: \"initOffsets\",\n    value: function initOffsets() {\n      var timestamps = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n      var start = 0;\n      var end = 0;\n      var first, last;\n      if (this.options.offset && timestamps.length) {\n        first = this.getDecimalForValue(timestamps[0]);\n        if (timestamps.length === 1) {\n          start = 1 - first;\n        } else {\n          start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n        }\n        last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n        if (timestamps.length === 1) {\n          end = last;\n        } else {\n          end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n        }\n      }\n      var limit = timestamps.length < 3 ? 0.5 : 0.25;\n      start = _limitValue(start, 0, limit);\n      end = _limitValue(end, 0, limit);\n      this._offsets = {\n        start: start,\n        end: end,\n        factor: 1 / (start + 1 + end)\n      };\n    }\n  }, {\n    key: \"_generate\",\n    value: function _generate() {\n      var adapter = this._adapter;\n      var min = this.min;\n      var max = this.max;\n      var options = this.options;\n      var timeOpts = options.time;\n      var minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n      var stepSize = valueOrDefault(options.ticks.stepSize, 1);\n      var weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n      var hasWeekday = isNumber(weekday) || weekday === true;\n      var ticks = {};\n      var first = min;\n      var time, count;\n      if (hasWeekday) {\n        first = +adapter.startOf(first, 'isoWeek', weekday);\n      }\n      first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n      if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n        throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n      }\n      var timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n      for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n        addTick(ticks, time, timestamps);\n      }\n      if (time === max || options.bounds === 'ticks' || count === 1) {\n        addTick(ticks, time, timestamps);\n      }\n      return Object.keys(ticks).sort(function (a, b) {\n        return a - b;\n      }).map(function (x) {\n        return +x;\n      });\n    }\n  }, {\n    key: \"getLabelForValue\",\n    value: function getLabelForValue(value) {\n      var adapter = this._adapter;\n      var timeOpts = this.options.time;\n      if (timeOpts.tooltipFormat) {\n        return adapter.format(value, timeOpts.tooltipFormat);\n      }\n      return adapter.format(value, timeOpts.displayFormats.datetime);\n    }\n  }, {\n    key: \"_tickFormatFunction\",\n    value: function _tickFormatFunction(time, index, ticks, format) {\n      var options = this.options;\n      var formatter = options.ticks.callback;\n      if (formatter) {\n        return callback(formatter, [time, index, ticks], this);\n      }\n      var formats = options.time.displayFormats;\n      var unit = this._unit;\n      var majorUnit = this._majorUnit;\n      var minorFormat = unit && formats[unit];\n      var majorFormat = majorUnit && formats[majorUnit];\n      var tick = ticks[index];\n      var major = majorUnit && majorFormat && tick && tick.major;\n      return this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    }\n  }, {\n    key: \"generateTickLabels\",\n    value: function generateTickLabels(ticks) {\n      var i, ilen, tick;\n      for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n        tick = ticks[i];\n        tick.label = this._tickFormatFunction(tick.value, i, ticks);\n      }\n    }\n  }, {\n    key: \"getDecimalForValue\",\n    value: function getDecimalForValue(value) {\n      return value === null ? NaN : (value - this.min) / (this.max - this.min);\n    }\n  }, {\n    key: \"getPixelForValue\",\n    value: function getPixelForValue(value) {\n      var offsets = this._offsets;\n      var pos = this.getDecimalForValue(value);\n      return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n    }\n  }, {\n    key: \"getValueForPixel\",\n    value: function getValueForPixel(pixel) {\n      var offsets = this._offsets;\n      var pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n      return this.min + pos * (this.max - this.min);\n    }\n  }, {\n    key: \"_getLabelSize\",\n    value: function _getLabelSize(label) {\n      var ticksOpts = this.options.ticks;\n      var tickLabelWidth = this.ctx.measureText(label).width;\n      var angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n      var cosRotation = Math.cos(angle);\n      var sinRotation = Math.sin(angle);\n      var tickFontSize = this._resolveTickFontOptions(0).size;\n      return {\n        w: tickLabelWidth * cosRotation + tickFontSize * sinRotation,\n        h: tickLabelWidth * sinRotation + tickFontSize * cosRotation\n      };\n    }\n  }, {\n    key: \"_getLabelCapacity\",\n    value: function _getLabelCapacity(exampleTime) {\n      var timeOpts = this.options.time;\n      var displayFormats = timeOpts.displayFormats;\n      var format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n      var exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [exampleTime], this._majorUnit), format);\n      var size = this._getLabelSize(exampleLabel);\n      var capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n      return capacity > 0 ? capacity : 1;\n    }\n  }, {\n    key: \"getDataTimestamps\",\n    value: function getDataTimestamps() {\n      var timestamps = this._cache.data || [];\n      var i, ilen;\n      if (timestamps.length) {\n        return timestamps;\n      }\n      var metas = this.getMatchingVisibleMetas();\n      if (this._normalized && metas.length) {\n        return this._cache.data = metas[0].controller.getAllParsedValues(this);\n      }\n      for (i = 0, ilen = metas.length; i < ilen; ++i) {\n        timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n      }\n      return this._cache.data = this.normalize(timestamps);\n    }\n  }, {\n    key: \"getLabelTimestamps\",\n    value: function getLabelTimestamps() {\n      var timestamps = this._cache.labels || [];\n      var i, ilen;\n      if (timestamps.length) {\n        return timestamps;\n      }\n      var labels = this.getLabels();\n      for (i = 0, ilen = labels.length; i < ilen; ++i) {\n        timestamps.push(_parse(this, labels[i]));\n      }\n      return this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps);\n    }\n  }, {\n    key: \"normalize\",\n    value: function normalize(values) {\n      return _arrayUnique(values.sort(sorter));\n    }\n  }]);\n  return TimeScale;\n}(Scale);\n_defineProperty(TimeScale, \"id\", 'time');\n_defineProperty(TimeScale, \"defaults\", {\n  bounds: 'data',\n  adapters: {},\n  time: {\n    parser: false,\n    unit: false,\n    round: false,\n    isoWeekday: false,\n    minUnit: 'millisecond',\n    displayFormats: {}\n  },\n  ticks: {\n    source: 'auto',\n    callback: false,\n    major: {\n      enabled: false\n    }\n  }\n});\nfunction interpolate(table, val, reverse) {\n  var lo = 0;\n  var hi = table.length - 1;\n  var prevSource, nextSource, prevTarget, nextTarget;\n  if (reverse) {\n    if (val >= table[lo].pos && val <= table[hi].pos) {\n      var _lookupByKey2 = _lookupByKey(table, 'pos', val);\n      lo = _lookupByKey2.lo;\n      hi = _lookupByKey2.hi;\n    }\n    var _table$lo = table[lo];\n    prevSource = _table$lo.pos;\n    prevTarget = _table$lo.time;\n    var _table$hi = table[hi];\n    nextSource = _table$hi.pos;\n    nextTarget = _table$hi.time;\n  } else {\n    if (val >= table[lo].time && val <= table[hi].time) {\n      var _lookupByKey3 = _lookupByKey(table, 'time', val);\n      lo = _lookupByKey3.lo;\n      hi = _lookupByKey3.hi;\n    }\n    var _table$lo2 = table[lo];\n    prevSource = _table$lo2.time;\n    prevTarget = _table$lo2.pos;\n    var _table$hi2 = table[hi];\n    nextSource = _table$hi2.time;\n    nextTarget = _table$hi2.pos;\n  }\n  var span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nvar TimeSeriesScale = /*#__PURE__*/function (_TimeScale) {\n  _inherits(TimeSeriesScale, _TimeScale);\n  var _super25 = _createSuper(TimeSeriesScale);\n  function TimeSeriesScale(props) {\n    var _this43;\n    _classCallCheck(this, TimeSeriesScale);\n    _this43 = _super25.call(this, props);\n    _this43._table = [];\n    _this43._minPos = undefined;\n    _this43._tableRange = undefined;\n    return _this43;\n  }\n  _createClass(TimeSeriesScale, [{\n    key: \"initOffsets\",\n    value: function initOffsets() {\n      var timestamps = this._getTimestampsForTable();\n      var table = this._table = this.buildLookupTable(timestamps);\n      this._minPos = interpolate(table, this.min);\n      this._tableRange = interpolate(table, this.max) - this._minPos;\n      _get(_getPrototypeOf(TimeSeriesScale.prototype), \"initOffsets\", this).call(this, timestamps);\n    }\n  }, {\n    key: \"buildLookupTable\",\n    value: function buildLookupTable(timestamps) {\n      var min = this.min,\n        max = this.max;\n      var items = [];\n      var table = [];\n      var i, ilen, prev, curr, next;\n      for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n        curr = timestamps[i];\n        if (curr >= min && curr <= max) {\n          items.push(curr);\n        }\n      }\n      if (items.length < 2) {\n        return [{\n          time: min,\n          pos: 0\n        }, {\n          time: max,\n          pos: 1\n        }];\n      }\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        next = items[i + 1];\n        prev = items[i - 1];\n        curr = items[i];\n        if (Math.round((next + prev) / 2) !== curr) {\n          table.push({\n            time: curr,\n            pos: i / (ilen - 1)\n          });\n        }\n      }\n      return table;\n    }\n  }, {\n    key: \"_getTimestampsForTable\",\n    value: function _getTimestampsForTable() {\n      var timestamps = this._cache.all || [];\n      if (timestamps.length) {\n        return timestamps;\n      }\n      var data = this.getDataTimestamps();\n      var label = this.getLabelTimestamps();\n      if (data.length && label.length) {\n        timestamps = this.normalize(data.concat(label));\n      } else {\n        timestamps = data.length ? data : label;\n      }\n      timestamps = this._cache.all = timestamps;\n      return timestamps;\n    }\n  }, {\n    key: \"getDecimalForValue\",\n    value: function getDecimalForValue(value) {\n      return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n    }\n  }, {\n    key: \"getValueForPixel\",\n    value: function getValueForPixel(pixel) {\n      var offsets = this._offsets;\n      var decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n      return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n    }\n  }]);\n  return TimeSeriesScale;\n}(TimeScale);\n_defineProperty(TimeSeriesScale, \"id\", 'timeseries');\n_defineProperty(TimeSeriesScale, \"defaults\", TimeScale.defaults);\nvar TimeSeriesScale$1 = TimeSeriesScale;\nvar scales = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  CategoryScale: CategoryScale,\n  LinearScale: LinearScale,\n  LogarithmicScale: LogarithmicScale,\n  RadialLinearScale: RadialLinearScale,\n  TimeScale: TimeScale,\n  TimeSeriesScale: TimeSeriesScale$1\n});\nvar registerables = [controllers, elements, plugins, scales];\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart$1 as Chart, plugin_colors as Colors, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, index as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, TimeScale, TimeSeriesScale$1 as TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, _detectPlatform, animator, controllers, elements, layouts, plugins, registerables, registry, scales };","map":{"version":3,"mappings":"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","names":["Animator","constructor","_request","_charts","Map","_running","_lastDate","undefined","_notify","chart","anims","date","type","callbacks","listeners","numSteps","duration","forEach","fn","initial","currentStep","Math","min","start","_refresh","requestAnimFrame","call","window","_update","Date","now","remaining","running","items","length","i","draw","item","_active","_total","tick","pop","_getAnims","charts","get","complete","progress","set","listen","event","cb","push","add","has","reduce","acc","cur","max","_duration","stop","cancel","remove","delete","transparent","interpolators","boolean","from","to","factor","color","c0","helpersColor","c1","valid","mix","hexString","number","Animation","cfg","target","prop","currentValue","resolve","_fn","_easing","effects","easing","linear","_start","floor","delay","_loop","loop","_target","_prop","_from","_to","_promises","active","update","elapsed","remain","wait","promises","Promise","res","rej","resolved","method","Animations","config","_chart","_properties","configure","isObject","animationOptions","Object","keys","defaults","animation","animatedProps","getOwnPropertyNames","key","option","isArray","properties","_animateOptions","values","newOptions","options","resolveTargetOptions","animations","_createAnimations","$shared","awaitAll","$animations","then","props","charAt","value","size","assign","animator","anim","all","scaleClip","scale","allowedOverflow","opts","reverse","end","defaultClip","xScale","yScale","x","y","top","right","bottom","left","toClip","t","r","b","l","disabled","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","ilen","index","applyStack","stack","dsIndex","singleMode","mode","datasetIndex","otherValue","isFinite","sign","convertObjectDataToArray","data","adata","Array","isStacked","meta","stacked","getStackKey","indexScale","valueScale","id","getUserBounds","minDefined","maxDefined","Number","NEGATIVE_INFINITY","POSITIVE_INFINITY","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","getMatchingVisibleMetas","updateStacks","controller","parsed","_cachedMeta","_stacks","iScale","iAxis","axis","vAxis","itemStacks","_top","_bottom","getFirstScaleId","scales","filter","shift","createDatasetContext","parent","createContext","dataset","createDataContext","element","dataIndex","raw","clearStacks","_parsed","isDirectUpdateMode","cloneIfNotShared","cached","shared","createStack","canStack","hidden","_stacked","DatasetController","_ctx","ctx","_cachedDataOpts","getMeta","_type","_parsing","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","datasetElementType","dataElementType","initialize","linkScales","addElements","fill","isPluginEnabled","console","warn","updateIndex","getDataset","chooseId","xid","xAxisID","valueOrDefault","yid","yAxisID","rid","rAxisID","indexAxis","iid","iAxisID","vid","vAxisID","getScaleForId","rScale","datasets","getDatasetMeta","scaleID","_getOtherScale","reset","_destroy","unlistenArrayEvents","_dataCheck","isExtensible","listenArrayEvents","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","scopes","getOptionScopes","createResolver","getContext","parsing","parse","count","sorted","_sorted","prev","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","xAxisKey","yAxisKey","resolveObjectKey","getParsed","getDataElement","updateRangeFromParsed","range","parsedValue","NaN","getMinMax","otherScale","otherMin","otherMax","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","_clip","clip","elements","area","chartArea","drawActiveElementsOnTop","getStyle","resolveDatasetElementOptions","resolveDataElementOptions","context","_resolveElementOptions","elementType","cache","cacheKey","sharing","defined","datasetElementScopeKeys","prefixes","names","resolveNamedOptions","freeze","_resolveAnimations","transition","datasetAnimationScopeKeys","_cacheable","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","_getSharedOptions","firstOpts","previouslySharedOptions","updateSharedOptions","updateElement","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","arr","updateElements","removed","splice","_sync","args","_dataChanges","_onDataPush","arguments","_onDataPop","_onDataShift","_onDataSplice","newCount","_onDataUnshift","getAllScaleValues","_cache","$bar","visibleMetas","concat","_arrayUnique","sort","a","computeMinSampleSize","_length","curr","updateMinAndPrev","abs","getPixelForValue","ticks","getPixelForTick","computeFitCategoryTraits","ruler","stackCount","thickness","barThickness","ratio","isNullOrUndef","categoryPercentage","barPercentage","chunk","pixels","computeFlexCategoryTraits","next","percent","parseFloatBar","entry","startValue","endValue","barStart","barEnd","_custom","parseValue","parseArrayOrPrimitive","isFloatBar","custom","barSign","actualBase","isHorizontal","borderProps","horizontal","base","setBorderSkipped","edge","borderSkipped","enableBorderRadius","parseEdge","swap","startEnd","orig","v1","v2","v","setInflateAmount","inflateAmount","BarController","iAxisKey","vAxisKey","obj","bars","getBasePixel","_getRuler","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","center","height","width","_getStacks","last","grouped","skipNull","val","isNaN","indexOf","_getStackCount","_getStackIndex","name","_startPixel","_endPixel","baseValue","minBarLength","floating","getDataVisibility","startPixel","getPixelForDecimal","endPixel","halfGrid","getLineWidthForValue","maxBarThickness","Infinity","stackIndex","rects","numbers","_index_","offset","grid","_value_","beginAtZero","BubbleController","radius","points","point","iPixel","vPixel","skip","getRatioAndOffset","rotation","circumference","cutout","ratioX","ratioY","offsetX","offsetY","TAU","startAngle","endAngle","startX","cos","startY","sin","endX","endY","calcMax","angle","_angleBetween","calcMin","maxX","maxY","HALF_PI","minX","PI","minY","DoughnutController","innerRadius","outerRadius","getter","_getRotation","toRadians","_getCircumference","_getRotationExtents","isDatasetVisible","arcs","spacing","getMaxBorderWidth","getMaxOffset","maxSize","toPercentage","chartWeight","_getRingWeight","maxWidth","maxHeight","maxRadius","toDimension","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","_circumference","animateRotate","calculateCircumference","animationOpts","centerX","centerY","animateScale","arc","metaData","formatNumber","locale","borderAlign","borderWidth","hoverBorderWidth","hoverOffset","ringWeightOffset","weight","_scriptable","_indexable","aspectRatio","plugins","legend","generateLabels","pointStyle","map","style","text","fillStyle","backgroundColor","strokeStyle","borderColor","fontColor","lineWidth","onClick","e","legendItem","toggleDataVisibility","LineController","line","_dataset","animationsDisabled","_getStartAndCountOfVisiblePoints","_scaleRangesChanged","_datasetIndex","_decimated","showLine","segment","animated","spanGaps","maxGapLength","isNumber","directUpdate","pointsCount","prevParsed","nullData","border","firstPoint","lastPoint","updateControlPoints","PolarAreaController","_parseObjectDataRadialScale","bind","_updateRadius","minSize","cutoutPercentage","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","angleLines","display","circular","pointLabels","PieController","RadarController","_fullLoop","pointPosition","getPointPositionForValue","ScatterController","registry","getElement","interaction","abstract","Error","DateAdapterBase","init","formats","format","diff","startOf","endOf","members","prototype","_date","binarySearch","metaset","intersect","lookupMethod","_reversePixels","_rlookupByKey","_lookupByKey","el","getRange","lo","hi","evaluateInteractionItems","position","handler","getSortedVisibleDatasetMetas","j","getDistanceMetricForAxis","useX","useY","pt1","pt2","deltaX","deltaY","sqrt","pow","getIntersectItems","useFinalPosition","includeInvisible","isPointInArea","evaluationFunc","_isPointInArea","inRange","getNearestRadialItems","getProps","getAngleFromPoint","getNearestCartesianItems","distanceMetric","minDistance","getCenterPoint","pointInArea","distance","getNearestItems","getAxisItems","rangeMethod","intersectsItem","modes","getRelativePosition","nearest","STATIC_POSITIONS","filterByPosition","array","pos","filterDynamicPositionByAxis","box","sortByWeight","v0","wrapBoxes","boxes","layoutBoxes","stackWeight","buildStacks","layouts","wrap","includes","_stack","placed","setLayoutDims","params","vBoxMaxWidth","hBoxMaxHeight","layout","fullSize","availableWidth","availableHeight","buildLayoutBoxes","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","w","heightChanged","h","same","other","handleMaxPadding","updatePos","change","getMargins","marginForPositions","positions","margin","fitBoxes","refitBoxes","refit","changed","setBoxDims","placeBoxes","userPadding","padding","addBox","_layers","z","removeBox","layoutItem","minPadding","toPadding","verticalBoxes","horizontalBoxes","each","beforeLayout","visibleVerticalBoxCount","BasePlatform","acquireContext","canvas","releaseContext","addEventListener","listener","removeEventListener","getDevicePixelRatio","getMaximumSize","isAttached","updateConfig","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","initCanvas","renderHeight","getAttribute","renderWidth","boxSizing","displayWidth","readUsedSize","displayHeight","eventListenerOptions","supportsEventListenerOptions","passive","addListener","node","removeListener","fromNativeEvent","native","nodeListContains","nodeList","contains","createAttachObserver","observer","MutationObserver","entries","trigger","addedNodes","removedNodes","observe","document","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","devicePixelRatio","resize","currentDevicePixelRatio","listenDevicePixelRatioChanges","unlistenDevicePixelRatioChanges","createResizeObserver","container","_getParentNode","throttled","clientWidth","ResizeObserver","contentRect","releaseObserver","disconnect","createProxyAndListen","proxy","DomPlatform","removeAttribute","setAttribute","proxies","$proxies","handlers","attach","detach","isConnected","_detectPlatform","_isDomSupported","OffscreenCanvas","Element","tooltipPosition","hasValue","final","ret","autoSkip","tickOpts","determinedMaxTicks","determineMaxTicks","ticksLimit","maxTicksLimit","majorIndices","major","enabled","getMajorIndices","numMajorIndices","first","newTicks","skipMajors","calculateSpacing","avgMajorSpacing","round","tickLength","_tickSize","maxScale","maxChart","_maxLength","evenMajorSpacing","getEvenSpacing","factors","_factorize","result","ceil","majorStart","majorEnd","len","reverseAlign","align","offsetFromEdge","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","epsilon","lineValue","garbageCollect","caches","gc","gcLen","getTickMarkLength","drawTicks","getTitleHeight","fallback","font","toFont","lines","lineHeight","createScaleContext","createTickContext","titleAlign","_toLeftRightCenter","titleArgs","titleX","titleY","_alignStartEnd","positionAxisID","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","setContext","suggestedMin","suggestedMax","finiteOrDefault","metas","getTicks","xLabels","yLabels","beforeUpdate","margins","grace","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","_addGrace","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","source","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","reversePixels","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","callback","afterTickToLabelConversion","numTicks","minRotation","maxRotation","tickWidth","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","_limitValue","title","toDegrees","asin","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","mirror","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","_computeLabelSizes","widths","heights","widestLabelSize","highestLabelSize","jlen","tickFont","fontString","nestedLabel","_resolveTickFontOptions","string","_measureText","valueAt","idx","getValueForPixel","pixel","decimal","_int16Range","_alignPixel","getDecimalForPixel","getBaseValue","optionTicks","rot","autoSkipPadding","_computeGridLineItems","ticksLength","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","limit","step","optsAtIndex","optsAtIndexBorder","lineColor","borderDash","dash","borderDashOffset","dashOffset","tickColor","tickBorderDash","tickBorderDashOffset","_computeLabelItems","crossAlign","tickAndPadding","hTickAndPadding","textAlign","lineCount","textOffset","textBaseline","_getXAxisLabelAlignment","_getYAxisLabelAlignment","labelOffset","halfCount","strokeColor","textStrokeColor","strokeWidth","textStrokeWidth","tickTextAlign","showLabelBackdrop","backdrop","labelPadding","backdropPadding","backdropColor","translation","_computeLabelArea","drawBackground","save","fillRect","restore","findIndex","drawGrid","drawLine","p1","p2","setLineDash","lineDashOffset","beginPath","moveTo","lineTo","stroke","drawOnChartArea","drawBorder","lastLineWidth","drawLabels","clipArea","renderText","unclipArea","drawTitle","tz","gz","bz","axisID","_maxDigits","fontSize","TypedRegistry","scope","override","create","isForType","isPrototypeOf","register","proto","getPrototypeOf","parentScope","isIChartComponent","registerDefaults","overrides","unregister","itemDefaults","merge","defaultRoutes","routeDefaults","descriptors","describe","routes","property","propertyParts","split","sourceName","sourceScope","join","parts","targetName","targetScope","route","Registry","controllers","_typedRegistries","_each","addControllers","addPlugins","addScales","getController","_get","getPlugin","getScale","removeControllers","removeElements","removePlugins","removeScales","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","component","camelMethod","_capitalize","PluginService","_init","notify","hook","_createDescriptors","_descriptors","descriptor","plugin","callCallback","cancelable","invalidate","_oldCache","_notifyStateChanges","allPlugins","createDescriptors","previousDescriptors","some","localIds","local","getOpts","pluginOpts","pluginScopeKeys","scriptable","indexable","allKeys","getIndexAxis","datasetDefaults","datasetOptions","getAxisFromDefaultScaleID","getDefaultScaleIDFromAxis","axisFromPosition","determineAxis","scaleOptions","toLowerCase","mergeScaleConfig","chartDefaults","configScales","chartIndexAxis","scaleConf","error","_proxy","defaultId","defaultScaleOptions","mergeIf","defaultID","initOptions","initData","initConfig","keyCache","keysCached","Set","cachedKeys","generate","addIfFound","Config","_config","_scopeCache","_resolverCache","platform","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","getResolver","resolver","subPrefixes","needContext","isFunction","subResolver","_attachContext","descriptorDefaults","resolverCache","_createResolver","p","hasFunction","isScriptable","isIndexable","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","c","moveNumericKeys","intKey","determineLastEvent","lastEvent","inChartArea","isClick","getDatasetArea","Chart","userConfig","initialCanvas","existingChart","uid","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","debounce","resizeDelay","_initialize","maintainAspectRatio","responsive","retinaScale","bindEvents","clearCanvas","_resize","_resizeBeforeDraw","newSize","newRatio","onResize","render","ensureScalesHaveIDs","scalesOptions","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","scaleClass","hasUpdated","_updateMetasets","_destroyDatasetMeta","slice","_removeUnreferencedMetasets","buildOrUpdateControllers","newControllers","order","visible","ControllerClass","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","_minPadding","autoPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","existingEvents","newEvents","events","setsEqual","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","getElementsAtEventForMode","Interaction","setDatasetVisibility","_updateVisibility","hide","show","_stop","destroy","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","updateHoverStyle","prefix","getActiveElements","setActiveElements","activeElements","lastActive","_elementsEqual","pluginId","replay","hoverOptions","hover","deactivated","activated","eventFilter","_handleEvent","_getActiveElements","_isClickEvent","onHover","invalidatePlugins","version","clipArc","pixelMargin","angleMargin","closePath","toRadiusCorners","_readValueToProps","parseBorderRadius","angleDelta","o","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","innerR","spacingOffset","alpha","noSpacingInnerRadius","noSpacingOuterRadius","avNogSpacingRadius","adjustedAngle","beta","angleOffset","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","outerMidAdjustedAngle","pCenter","p4","innerMidAdjustedAngle","p8","outerStartX","outerStartY","outerEndX","outerEndY","drawArc","fullCircles","borderJoinStyle","inner","lineJoin","ArcElement","chartX","chartY","rAdjust","betweenAngles","withinRadius","_isBetween","halfAngle","halfRadius","translate","fix","radiusOffset","setStyle","lineCap","borderCapStyle","previous","getLineMethod","stepped","_steppedLineTo","tension","cubicInterpolationMode","_bezierCurveTo","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","fastPathSegment","avgX","countX","prevX","lastY","pointIndex","drawX","truncX","_getSegmentMethod","useFastPath","_getInterpolationMethod","_steppedInterpolation","_bezierInterpolation","_pointInLine","strokePathWithCache","path","_path","Path2D","strokePathDirect","segments","segmentMethod","usePath2D","LineElement","_points","_segments","_pointsUpdated","_updateBezierControlPoints","_computeSegments","interpolate","_boundSegments","_interpolate","interpolated","capBezierPoints","hitRadius","PointElement","mouseX","mouseY","inXRange","inYRange","hoverRadius","drawPoint","getBarBounds","bar","half","skipOrLimit","parseBorderWidth","maxW","maxH","toTRBL","toTRBLCorners","maxR","enableBorder","topLeft","topRight","bottomLeft","bottomRight","boundingRects","bounds","outer","skipX","skipY","skipBoth","hasRadius","addNormalRectPath","rect","inflateRect","amount","refRect","BarElement","addRectPath","addRoundedRectPath","BORDER_COLORS","BACKGROUND_COLORS","replace","getBorderColor","getBackgroundColor","createDefaultDatasetColorizer","createDoughnutDatasetColorizer","createPolarAreaDatasetColorizer","getColorizer","containsColorsDefinitions","k","_args","colorizer","lttbDecimation","samples","decimated","bucketWidth","sampledIndex","endIndex","maxAreaPoint","maxArea","nextA","avgY","avgRangeStart","avgRangeEnd","avgRangeLength","rangeOffs","rangeTo","pointAx","pointAy","minMaxDecimation","minIndex","maxIndex","startIndex","xMin","xMax","dx","lastIndex","intermediateIndex1","intermediateIndex2","cleanDecimatedDataset","defineProperty","cleanDecimatedData","getStartAndCountOfVisiblePointsSimplified","pointCount","algorithm","beforeElementsUpdate","xAxis","threshold","configurable","enumerable","d","tpoints","_findSegmentEnd","_getBounds","targetSegments","tgt","subBounds","fillSources","_boundSegment","fillSource","_getEdge","_normalizeAngle","_pointsFromSegments","boundary","linePoints","_createBoundaryLine","_shouldApplyFill","_resolveTarget","sources","propagate","visited","_decodeFill","parseFillOption","parseFloat","decodeTargetIndex","firstCh","_getTargetPixel","_getTargetValue","fillOption","_buildStackLine","sourcePoints","linesBelow","getLinesBelow","addPointsBelow","below","unshift","sourcePoint","postponed","findPoint","pointValue","firstValue","lastValue","simpleArc","_getTarget","getLineByIndex","computeBoundary","computeCircularBoundary","computeLinearBoundary","_drawfill","lineOpts","above","doFill","clipVertical","clipY","lineLoop","src","notShape","clipBounds","interpolatedLineTo","targetLoop","interpolatedPoint","afterDatasetsUpdate","$filler","beforeDraw","drawTime","beforeDatasetsDraw","beforeDatasetDraw","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","pointStyleWidth","itemHeight","itemsEqual","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","itemWidth","measureText","_itemHeight","heightLimit","totalWidth","currentColWidth","currentColHeight","col","calculateItemSize","adjustHitBoxes","rtl","rtlHelper","getRtlAdapter","hitbox","leftForLtr","_draw","defaultColor","halfFontSize","cursor","drawLegendBox","lineDash","drawOptions","SQRT2","xPlus","drawPointLegend","yBoxTop","xBoxLeft","fillText","strikethrough","overrideTextDirection","textDirection","textWidth","setWidth","realX","_textX","fontLineHeight","calculateLegendItemHeight","restoreTextDirection","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","isListened","hoveredItem","sameItem","onLeave","calculateItemWidth","calculateItemHeight","legendItemText","_element","afterEvent","ci","useBorderRadius","startsWith","Title","_padding","textSize","_drawArgs","fontOpts","createTitle","titleBlock","WeakMap","positioners","average","eventPosition","nearestElement","distanceBetweenPoints","tp","pushOrConcat","toPush","apply","splitNewlines","str","String","createTooltipItem","formattedValue","getTooltipSize","tooltip","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","bodyLineHeight","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineYAlign","doesNotFitWithAlign","xAlign","caret","caretSize","caretPadding","determineXAlign","yAlign","chartWidth","determineAlignment","alignX","alignY","paddingAndSize","getBackgroundPoint","alignment","cornerRadius","getAlignedX","getBeforeAfterBodyLines","createTooltipContext","tooltipItems","overrideCallbacks","defaultCallbacks","beforeTitle","noop","labelCount","afterTitle","beforeLabel","tooltipItem","labelColor","labelTextColor","bodyColor","labelPointStyle","afterLabel","beforeFooter","afterFooter","invokeCallbackWithFallback","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","getTitle","getBeforeBody","getBody","bodyItems","scoped","getAfterBody","getFooter","_createItems","itemSort","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","pt","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","_willRender","hasTooltipContent","globalAlpha","positionChanged","_positionChanged","_ignoreReplayEvents","afterInit","afterDraw","_fallback","addIfString","addedLabels","findOrAddLabel","lastIndexOf","_getLabelForValue","CategoryScale","_startValue","_valueRange","_addedLabels","added","generateTicks","generationOptions","dataRange","MIN_SPACING","precision","maxTicks","maxDigits","includeBounds","unit","maxSpaces","rmin","rmax","countDefined","minSpacing","niceNum","niceMin","niceMax","numSpaces","almostWhole","almostEquals","decimalPlaces","_decimalPlaces","relativeLabelSize","rad","LinearScaleBase","_endValue","handleTickRangeOptions","setMin","setMax","minSign","maxSign","getTickLimit","stepSize","computeTickLimit","numericGeneratorOptions","_setMinAndMaxByKey","LinearScale","Ticks","formatters","numeric","log10Floor","log10","changeExponent","m","isMajor","tickVal","steps","rangeExp","rangeStep","startExp","minExp","exp","significand","lastTick","LogarithmicScale","_zero","logarithmic","getTickBackdropHeight","measureLabelSize","_longestText","determineLimits","fitWithPointLabels","limits","valueCount","_pointLabels","pointLabelOpts","additionalAngle","centerPointLabels","getPointLabelContext","getPointPosition","drawingArea","plFont","hLimits","vLimits","updateLimits","setCenterPoint","_pointLabelItems","buildPointLabelItems","extra","outerDistance","pointLabelPosition","yForAngle","getTextAlignForAngle","leftForTextAlign","drawPointLabels","backdropLeft","backdropTop","backdropWidth","backdropHeight","pathRadiusLine","drawRadiusLine","gridLineOpts","createPointLabelContext","RadialLinearScale","leftMovement","rightMovement","topMovement","bottomMovement","angleMultiplier","scalingFactor","getValueForDistanceFromCenter","scaledDistance","pointLabel","distanceFromCenter","getBasePosition","getPointLabelPosition","rotate","animate","INTERVALS","millisecond","common","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","input","adapter","_adapter","_parseOpts","parser","isoWeekday","determineUnitForAutoTicks","minUnit","capacity","interval","MAX_SAFE_INTEGER","determineUnitForFormatting","determineMajorUnit","addTick","time","timestamps","_lookup","timestamp","setMajorTicks","majorUnit","ticksFromTimestamps","TimeScale","_unit","_majorUnit","_offsets","_normalized","adapters","displayFormats","normalized","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_filterBetween","_getLabelCapacity","initOffsets","offsetAfterAutoskip","getDecimalForValue","minor","weekday","hasWeekday","getDataTimestamps","tooltipFormat","datetime","_tickFormatFunction","formatter","minorFormat","majorFormat","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","normalize","table","prevSource","nextSource","prevTarget","nextTarget","span","TimeSeriesScale","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable","registerables"],"sources":["C:\\Users\\nagam\\Documents\\GitHub\\wms_client\\node_modules\\chart.js\\src\\core\\core.animator.js","C:\\Users\\nagam\\Documents\\GitHub\\wms_client\\node_modules\\chart.js\\src\\core\\core.animation.js","C:\\Users\\nagam\\Documents\\GitHub\\wms_client\\node_modules\\chart.js\\src\\core\\core.animations.js","C:\\Users\\nagam\\Documents\\GitHub\\wms_client\\node_modules\\chart.js\\src\\core\\core.datasetController.js","C:\\Users\\nagam\\Documents\\GitHub\\wms_client\\node_modules\\chart.js\\src\\controllers\\controller.bar.js","C:\\Users\\nagam\\Documents\\GitHub\\wms_client\\node_modules\\chart.js\\src\\controllers\\controller.bubble.js","C:\\Users\\nagam\\Documents\\GitHub\\wms_client\\node_modules\\chart.js\\src\\controllers\\controller.doughnut.js","C:\\Users\\nagam\\Documents\\GitHub\\wms_client\\node_modules\\chart.js\\src\\controllers\\controller.line.js","C:\\Users\\nagam\\Documents\\GitHub\\wms_client\\node_modules\\chart.js\\src\\controllers\\controller.polarArea.js","C:\\Users\\nagam\\Documents\\GitHub\\wms_client\\node_modules\\chart.js\\src\\controllers\\controller.pie.js","C:\\Users\\nagam\\Documents\\GitHub\\wms_client\\node_modules\\chart.js\\src\\controllers\\controller.radar.js","C:\\Users\\nagam\\Documents\\GitHub\\wms_client\\node_modules\\chart.js\\src\\controllers\\controller.scatter.js","C:\\Users\\nagam\\Documents\\GitHub\\wms_client\\node_modules\\chart.js\\src\\core\\core.adapters.ts","C:\\Users\\nagam\\Documents\\GitHub\\wms_client\\node_modules\\chart.js\\src\\core\\core.interaction.js","C:\\Users\\nagam\\Documents\\GitHub\\wms_client\\node_modules\\chart.js\\src\\core\\core.layouts.js","C:\\Users\\nagam\\Documents\\GitHub\\wms_client\\node_modules\\chart.js\\src\\platform\\platform.base.js","C:\\Users\\nagam\\Documents\\GitHub\\wms_client\\node_modules\\chart.js\\src\\platform\\platform.basic.js","C:\\Users\\nagam\\Documents\\GitHub\\wms_client\\node_modules\\chart.js\\src\\platform\\platform.dom.js","C:\\Users\\nagam\\Documents\\GitHub\\wms_client\\node_modules\\chart.js\\src\\platform\\index.js","C:\\Users\\nagam\\Documents\\GitHub\\wms_client\\node_modules\\chart.js\\src\\core\\core.element.ts","C:\\Users\\nagam\\Documents\\GitHub\\wms_client\\node_modules\\chart.js\\src\\core\\core.scale.autoskip.js","C:\\Users\\nagam\\Documents\\GitHub\\wms_client\\node_modules\\chart.js\\src\\core\\core.scale.js","C:\\Users\\nagam\\Documents\\GitHub\\wms_client\\node_modules\\chart.js\\src\\core\\core.typedRegistry.js","C:\\Users\\nagam\\Documents\\GitHub\\wms_client\\node_modules\\chart.js\\src\\core\\core.registry.js","C:\\Users\\nagam\\Documents\\GitHub\\wms_client\\node_modules\\chart.js\\src\\core\\core.plugins.js","C:\\Users\\nagam\\Documents\\GitHub\\wms_client\\node_modules\\chart.js\\src\\core\\core.config.js","C:\\Users\\nagam\\Documents\\GitHub\\wms_client\\node_modules\\chart.js\\src\\core\\core.controller.js","C:\\Users\\nagam\\Documents\\GitHub\\wms_client\\node_modules\\chart.js\\src\\elements\\element.arc.ts","C:\\Users\\nagam\\Documents\\GitHub\\wms_client\\node_modules\\chart.js\\src\\elements\\element.line.js","C:\\Users\\nagam\\Documents\\GitHub\\wms_client\\node_modules\\chart.js\\src\\elements\\element.point.ts","C:\\Users\\nagam\\Documents\\GitHub\\wms_client\\node_modules\\chart.js\\src\\elements\\element.bar.js","C:\\Users\\nagam\\Documents\\GitHub\\wms_client\\node_modules\\chart.js\\src\\plugins\\plugin.colors.ts","C:\\Users\\nagam\\Documents\\GitHub\\wms_client\\node_modules\\chart.js\\src\\plugins\\plugin.decimation.js","C:\\Users\\nagam\\Documents\\GitHub\\wms_client\\node_modules\\chart.js\\src\\plugins\\plugin.filler\\filler.segment.js","C:\\Users\\nagam\\Documents\\GitHub\\wms_client\\node_modules\\chart.js\\src\\plugins\\plugin.filler\\filler.helper.js","C:\\Users\\nagam\\Documents\\GitHub\\wms_client\\node_modules\\chart.js\\src\\plugins\\plugin.filler\\filler.options.js","C:\\Users\\nagam\\Documents\\GitHub\\wms_client\\node_modules\\chart.js\\src\\plugins\\plugin.filler\\filler.target.stack.js","C:\\Users\\nagam\\Documents\\GitHub\\wms_client\\node_modules\\chart.js\\src\\plugins\\plugin.filler\\simpleArc.js","C:\\Users\\nagam\\Documents\\GitHub\\wms_client\\node_modules\\chart.js\\src\\plugins\\plugin.filler\\filler.target.js","C:\\Users\\nagam\\Documents\\GitHub\\wms_client\\node_modules\\chart.js\\src\\plugins\\plugin.filler\\filler.drawing.js","C:\\Users\\nagam\\Documents\\GitHub\\wms_client\\node_modules\\chart.js\\src\\plugins\\plugin.filler\\index.js","C:\\Users\\nagam\\Documents\\GitHub\\wms_client\\node_modules\\chart.js\\src\\plugins\\plugin.legend.js","C:\\Users\\nagam\\Documents\\GitHub\\wms_client\\node_modules\\chart.js\\src\\plugins\\plugin.title.js","C:\\Users\\nagam\\Documents\\GitHub\\wms_client\\node_modules\\chart.js\\src\\plugins\\plugin.subtitle.js","C:\\Users\\nagam\\Documents\\GitHub\\wms_client\\node_modules\\chart.js\\src\\plugins\\plugin.tooltip.js","C:\\Users\\nagam\\Documents\\GitHub\\wms_client\\node_modules\\chart.js\\src\\scales\\scale.category.js","C:\\Users\\nagam\\Documents\\GitHub\\wms_client\\node_modules\\chart.js\\src\\scales\\scale.linearbase.js","C:\\Users\\nagam\\Documents\\GitHub\\wms_client\\node_modules\\chart.js\\src\\scales\\scale.linear.js","C:\\Users\\nagam\\Documents\\GitHub\\wms_client\\node_modules\\chart.js\\src\\scales\\scale.logarithmic.js","C:\\Users\\nagam\\Documents\\GitHub\\wms_client\\node_modules\\chart.js\\src\\scales\\scale.radialLinear.js","C:\\Users\\nagam\\Documents\\GitHub\\wms_client\\node_modules\\chart.js\\src\\scales\\scale.time.js","C:\\Users\\nagam\\Documents\\GitHub\\wms_client\\node_modules\\chart.js\\src\\scales\\scale.timeseries.js","C:\\Users\\nagam\\Documents\\GitHub\\wms_client\\node_modules\\chart.js\\src\\index.ts"],"sourcesContent":["import {requestAnimFrame} from '../helpers/helpers.extras';\n\n/**\n * @typedef { import(\"./core.animation\").default } Animation\n * @typedef { import(\"./core.controller\").default } Chart\n */\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is export for typedoc\n */\nexport class Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n\n  /**\n\t * @private\n\t */\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n\n    callbacks.forEach(fn => fn({\n      chart,\n      initial: anims.initial,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n\n  /**\n\t * @private\n\t */\n  _refresh() {\n    if (this._request) {\n      return;\n    }\n    this._running = true;\n\n    this._request = requestAnimFrame.call(window, () => {\n      this._update();\n      this._request = null;\n\n      if (this._running) {\n        this._refresh();\n      }\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _update(date = Date.now()) {\n    let remaining = 0;\n\n    this._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n\n      for (; i >= 0; --i) {\n        item = items[i];\n\n        if (item._active) {\n          if (item._total > anims.duration) {\n            // if the animation has been updated and its duration prolonged,\n            // update to total duration of current animations run (for progress event)\n            anims.duration = item._total;\n          }\n          item.tick(date);\n          draw = true;\n        } else {\n          // Remove the item by replacing it with last item and removing the last\n          // A lot faster than splice.\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n\n      if (draw) {\n        chart.draw();\n        this._notify(chart, anims, date, 'progress');\n      }\n\n      if (!items.length) {\n        anims.running = false;\n        this._notify(chart, anims, date, 'complete');\n        anims.initial = false;\n      }\n\n      remaining += items.length;\n    });\n\n    this._lastDate = date;\n\n    if (remaining === 0) {\n      this._running = false;\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n    if (!anims) {\n      anims = {\n        running: false,\n        initial: true,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n    return anims;\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @param {string} event - event name\n\t * @param {Function} cb - callback\n\t */\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n\n  /**\n\t * Add animations\n\t * @param {Chart} chart\n\t * @param {Animation[]} items - animations\n\t */\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n    this._getAnims(chart).items.push(...items);\n  }\n\n  /**\n\t * Counts number of active animations for the chart\n\t * @param {Chart} chart\n\t */\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n\n  /**\n\t * Start animating (all charts)\n\t * @param {Chart} chart\n\t */\n  start(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims) {\n      return;\n    }\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n    this._refresh();\n  }\n\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n    return true;\n  }\n\n  /**\n\t * Stop all animations for the chart\n\t * @param {Chart} chart\n\t */\n  stop(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.items.length) {\n      return;\n    }\n    const items = anims.items;\n    let i = items.length - 1;\n\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n    anims.items = [];\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n\n  /**\n\t * Remove chart from Animator\n\t * @param {Chart} chart\n\t */\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Animator();\n","import effects from '../helpers/helpers.easing';\nimport {resolve} from '../helpers/helpers.options';\nimport {color as helpersColor} from '../helpers/helpers.color';\n\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  /**\n   * @param {string} from\n   * @param {string} to\n   * @param {number} factor\n   */\n  color(from, to, factor) {\n    const c0 = helpersColor(from || transparent);\n    const c1 = c0.valid && helpersColor(to || transparent);\n    return c1 && c1.valid\n      ? c1.mix(c0, factor).hexString()\n      : to;\n  },\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\n\nexport default class Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    const from = resolve([cfg.from, currentValue, to]);\n\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n\n  active() {\n    return this._active;\n  }\n\n  update(cfg, to, date) {\n    if (this._active) {\n      this._notify(false);\n\n      const currentValue = this._target[this._prop];\n      const elapsed = date - this._start;\n      const remain = this._duration - elapsed;\n      this._start = date;\n      this._duration = Math.floor(Math.max(remain, cfg.duration));\n      this._total += elapsed;\n      this._loop = !!cfg.loop;\n      this._to = resolve([cfg.to, to, currentValue, cfg.from]);\n      this._from = resolve([cfg.from, currentValue, to]);\n    }\n  }\n\n  cancel() {\n    if (this._active) {\n      // update current evaluated value, for smoother animations\n      this.tick(Date.now());\n      this._active = false;\n      this._notify(false);\n    }\n  }\n\n  tick(date) {\n    const elapsed = date - this._start;\n    const duration = this._duration;\n    const prop = this._prop;\n    const from = this._from;\n    const loop = this._loop;\n    const to = this._to;\n    let factor;\n\n    this._active = from !== to && (loop || (elapsed < duration));\n\n    if (!this._active) {\n      this._target[prop] = to;\n      this._notify(true);\n      return;\n    }\n\n    if (elapsed < 0) {\n      this._target[prop] = from;\n      return;\n    }\n\n    factor = (elapsed / duration) % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = this._easing(Math.min(1, Math.max(0, factor)));\n\n    this._target[prop] = this._fn(from, to, factor);\n  }\n\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({res, rej});\n    });\n  }\n\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n}\n","import animator from './core.animator';\nimport Animation from './core.animation';\nimport defaults from './core.defaults';\nimport {isArray, isObject} from '../helpers/helpers.core';\n\nexport default class Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n\n  configure(config) {\n    if (!isObject(config)) {\n      return;\n    }\n\n    const animationOptions = Object.keys(defaults.animation);\n    const animatedProps = this._properties;\n\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n      if (!isObject(cfg)) {\n        return;\n      }\n      const resolved = {};\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach((prop) => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n\n  /**\n\t * Utility to handle animation of `options`.\n\t * @private\n\t */\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n    if (!options) {\n      return [];\n    }\n\n    const animations = this._createAnimations(options, newOptions);\n    if (newOptions.$shared) {\n      // Going to shared options:\n      // After all animations are done, assign the shared options object to the element\n      // So any new updates to the shared options are observed\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {\n        // rejected, noop\n      });\n    }\n\n    return animations;\n  }\n\n  /**\n\t * @private\n\t */\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n\n      if (animation) {\n        if (cfg && animation.active()) {\n          // There is an existing active animation, let's update that\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n      if (!cfg || !cfg.duration) {\n        // not animated, set directly to new value\n        target[prop] = value;\n        continue;\n      }\n\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n    return animations;\n  }\n\n\n  /**\n\t * Update `target` properties to new values, using configured animations\n\t * @param {object} target - object to update\n\t * @param {object} values - new target properties\n\t * @returns {boolean|undefined} - `true` if animations were started\n\t **/\n  update(target, values) {\n    if (this._properties.size === 0) {\n      // Nothing is animated, just apply the new values.\n      Object.assign(target, values);\n      return;\n    }\n\n    const animations = this._createAnimations(target, values);\n\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n}\n\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  // @ts-ignore\n  return Promise.all(running);\n}\n\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  let options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    // Going from shared options to distinct one:\n    // Create new options object containing the old shared values and start updating that.\n    target.options = options = Object.assign({}, options, {$shared: false, $animations: {}});\n  }\n  return options;\n}\n","import Animations from './core.animations';\nimport defaults from './core.defaults';\nimport {isArray, isFinite, isObject, valueOrDefault, resolveObjectKey, defined} from '../helpers/helpers.core';\nimport {listenArrayEvents, unlistenArrayEvents} from '../helpers/helpers.collection';\nimport {createContext, sign} from '../helpers';\n\n/**\n * @typedef { import(\"./core.controller\").default } Chart\n * @typedef { import(\"./core.scale\").default } Scale\n */\n\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\n\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\n\nfunction toClip(value) {\n  let t, r, b, l;\n\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l,\n    disabled: value === false\n  };\n}\n\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n  let i, ilen;\n\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\n\nfunction applyStack(stack, value, dsIndex, options = {}) {\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n\n  if (value === null) {\n    return;\n  }\n\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if (isFinite(otherValue) && (singleMode || (value === 0 || sign(value) === sign(otherValue)))) {\n      value += otherValue;\n    }\n  }\n  return value;\n}\n\nfunction convertObjectDataToArray(data) {\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      x: key,\n      y: data[key]\n    };\n  }\n  return adata;\n}\n\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || (stacked === undefined && meta.stack !== undefined);\n}\n\nfunction getStackKey(indexScale, valueScale, meta) {\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\n\nfunction getUserBounds(scale) {\n  const {min, max, minDefined, maxDefined} = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\n\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\n\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n  for (const meta of vScale.getMatchingVisibleMetas(type).reverse()) {\n    const value = stack[meta.index];\n    if ((positive && value > 0) || (!positive && value < 0)) {\n      return meta.index;\n    }\n  }\n\n  return null;\n}\n\nfunction updateStacks(controller, parsed) {\n  const {chart, _cachedMeta: meta} = controller;\n  const stacks = chart._stacks || (chart._stacks = {}); // map structure is {stackKey: {datasetIndex: value}}\n  const {iScale, vScale, index: datasetIndex} = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {[iAxis]: index, [vAxis]: value} = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n\n    stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n    stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n  }\n}\n\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\n\nfunction createDatasetContext(parent, index) {\n  return createContext(parent,\n    {\n      active: false,\n      dataset: undefined,\n      datasetIndex: index,\n      index,\n      mode: 'default',\n      type: 'dataset'\n    }\n  );\n}\n\nfunction createDataContext(parent, index, element) {\n  return createContext(parent, {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\n\nfunction clearStacks(meta, items) {\n  // Not using meta.index here, because it might be already updated if the dataset changed location\n  const datasetIndex = meta.controller.index;\n  const axis = meta.vScale && meta.vScale.axis;\n  if (!axis) {\n    return;\n  }\n\n  items = items || meta._parsed;\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n    if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n      return;\n    }\n    delete stacks[axis][datasetIndex];\n  }\n}\n\nconst isDirectUpdateMode = (mode) => mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart) => canStack && !meta.hidden && meta._stacked\n  && {keys: getSortedDatasetIndices(chart, true), values: null};\n\nexport default class DatasetController {\n\n  /**\n   * @type {any}\n   */\n  static defaults = {};\n\n  /**\n   * Element type used to generate a meta dataset (e.g. Chart.element.LineElement).\n   */\n  static datasetElementType = null;\n\n  /**\n   * Element type used to generate a meta data (e.g. Chart.element.PointElement).\n   */\n  static dataElementType = null;\n\n  /**\n\t * @param {Chart} chart\n\t * @param {number} datasetIndex\n\t */\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    /** @type {boolean | object} */\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.supportsDecimation = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.datasetElementType = new.target.datasetElementType;\n    this.dataElementType = new.target.dataElementType;\n\n    this.initialize();\n  }\n\n  initialize() {\n    const meta = this._cachedMeta;\n    this.configure();\n    this.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    this.addElements();\n\n    if (this.options.fill && !this.chart.isPluginEnabled('filler')) {\n      console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\n    }\n  }\n\n  updateIndex(datasetIndex) {\n    if (this.index !== datasetIndex) {\n      clearStacks(this._cachedMeta);\n    }\n    this.index = datasetIndex;\n  }\n\n  linkScales() {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = this.getScaleForId(xid);\n    meta.yScale = this.getScaleForId(yid);\n    meta.rScale = this.getScaleForId(rid);\n    meta.iScale = this.getScaleForId(iid);\n    meta.vScale = this.getScaleForId(vid);\n  }\n\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n\n  /**\n\t * @param {string} scaleID\n\t * @return {Scale}\n\t */\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n\n  /**\n\t * @private\n\t */\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale\n      ? meta.vScale\n      : meta.iScale;\n  }\n\n  reset() {\n    this._update('reset');\n  }\n\n  /**\n\t * @private\n\t */\n  _destroy() {\n    const meta = this._cachedMeta;\n    if (this._data) {\n      unlistenArrayEvents(this._data, this);\n    }\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _dataCheck() {\n    const dataset = this.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    const _data = this._data;\n\n    // In order to correctly handle data addition/deletion animation (an thus simulate\n    // real-time charts), we need to monitor these data modifications and synchronize\n    // the internal meta data accordingly.\n\n    if (isObject(data)) {\n      this._data = convertObjectDataToArray(data);\n    } else if (_data !== data) {\n      if (_data) {\n        // This case happens when the user replaced the data array instance.\n        unlistenArrayEvents(_data, this);\n        // Discard old parsed data and stacks\n        const meta = this._cachedMeta;\n        clearStacks(meta);\n        meta._parsed = [];\n      }\n      if (data && Object.isExtensible(data)) {\n        listenArrayEvents(data, this);\n      }\n      this._syncList = [];\n      this._data = data;\n    }\n  }\n\n  addElements() {\n    const meta = this._cachedMeta;\n\n    this._dataCheck();\n\n    if (this.datasetElementType) {\n      meta.dataset = new this.datasetElementType();\n    }\n  }\n\n  buildOrUpdateElements(resetNewElements) {\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    let stackChanged = false;\n\n    this._dataCheck();\n\n    // make sure cached _stacked status is current\n    const oldStacked = meta._stacked;\n    meta._stacked = isStacked(meta.vScale, meta);\n\n    // detect change in stack option\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      // remove values from old stack\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n\n    // Re-sync meta data in case the user replaced the data array or if we missed\n    // any updates and so make sure that we handle number of datapoints changing.\n    this._resyncElements(resetNewElements);\n\n    // if stack changed, update stack values for the whole dataset\n    if (stackChanged || oldStacked !== meta._stacked) {\n      updateStacks(this, meta._parsed);\n    }\n  }\n\n  /**\n\t * Merges user-supplied and default dataset-level options\n\t * @private\n\t */\n  configure() {\n    const config = this.chart.config;\n    const scopeKeys = config.datasetScopeKeys(this._type);\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n    this.options = config.createResolver(scopes, this.getContext());\n    this._parsing = this.options.parsing;\n    this._cachedDataOpts = {};\n  }\n\n  /**\n\t * @param {number} start\n\t * @param {number} count\n\t */\n  parse(start, count) {\n    const {_cachedMeta: meta, _data: data} = this;\n    const {iScale, _stacked} = meta;\n    const iAxis = iScale.axis;\n\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n\n    if (this._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n      parsed = data;\n    } else {\n      if (isArray(data[start])) {\n        parsed = this.parseArrayData(meta, data, start, count);\n      } else if (isObject(data[start])) {\n        parsed = this.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = this.parsePrimitiveData(meta, data, start, count);\n      }\n\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || (prev && cur[iAxis] < prev[iAxis]);\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n          prev = cur;\n        }\n      }\n      meta._sorted = sorted;\n    }\n\n    if (_stacked) {\n      updateStacks(this, parsed);\n    }\n  }\n\n  /**\n\t * Parse array of primitive values\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [1,3,4]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id.\n\t * Example: {xScale0: 0, yScale0: 1}\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of arrays\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [[1,2],[3,4]]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id.\n\t * Example: {x: 0, y: 1}\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of objects\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [{x:1, y:5}, {x:2, y:10}]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id. _custom is optional\n\t * Example: {xScale0: 0, yScale0: 1, _custom: {r: 10, foo: 'bar'}}\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n\n  /**\n\t * @protected\n\t */\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n\n  /**\n\t * @protected\n\t */\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]\n    };\n    return applyStack(stack, value, meta.index, {mode});\n  }\n\n  /**\n\t * @protected\n\t */\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n    if (stack && values) {\n      stack.values = values;\n      value = applyStack(stack, parsedValue, this._cachedMeta.index);\n    }\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n\n  /**\n\t * @protected\n\t */\n  getMinMax(scale, canStack) {\n    const meta = this._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n    const otherScale = this._getOtherScale(scale);\n    const stack = createStack(canStack, meta, this.chart);\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    const {min: otherMin, max: otherMax} = getUserBounds(otherScale);\n    let i, parsed;\n\n    function _skip() {\n      parsed = _parsed[i];\n      const otherValue = parsed[otherScale.axis];\n      return !isFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n    }\n\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n      this.updateRangeFromParsed(range, scale, parsed, stack);\n      if (sorted) {\n        // if the data is sorted, we don't need to check further from this end of array\n        break;\n      }\n    }\n    if (sorted) {\n      // in the sorted case, find first non-skipped value from other end of array\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n        this.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n    return range;\n  }\n\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n      if (isFinite(value)) {\n        values.push(value);\n      }\n    }\n    return values;\n  }\n\n  /**\n\t * @return {number|boolean}\n\t * @protected\n\t */\n  getMaxOverflow() {\n    return false;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n\n  /**\n\t * @private\n\t */\n  _update(mode) {\n    const meta = this._cachedMeta;\n    this.update(mode || 'default');\n    meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n  }\n\n  /**\n\t * @param {string} mode\n\t */\n  update(mode) {} // eslint-disable-line no-unused-vars\n\n  draw() {\n    const ctx = this._ctx;\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = this._drawStart || 0;\n    const count = this._drawCount || (elements.length - start);\n    const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n    let i;\n\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n      if (element.hidden) {\n        continue;\n      }\n      if (element.active && drawActiveElementsOnTop) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n\n  /**\n\t * Returns a set of predefined style properties that should be used to represent the dataset\n\t * or the data if the index is specified\n\t * @param {number} index - data index\n\t * @param {boolean} [active] - true if hover\n\t * @return {object} style object\n\t */\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset\n      ? this.resolveDatasetElementOptions(mode)\n      : this.resolveDataElementOptions(index || 0, mode);\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext(index, active, mode) {\n    const dataset = this.getDataset();\n    let context;\n    if (index >= 0 && index < this._cachedMeta.data.length) {\n      const element = this._cachedMeta.data[index];\n      context = element.$context ||\n        (element.$context = createDataContext(this.getContext(), index, element));\n      context.parsed = this.getParsed(index);\n      context.raw = dataset.data[index];\n      context.index = context.dataIndex = index;\n    } else {\n      context = this.$context ||\n        (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n      context.dataset = dataset;\n      context.index = context.datasetIndex = this.index;\n    }\n\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n\n  /**\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n\n  /**\n\t * @param {number} index\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n\n  /**\n\t * @private\n\t */\n  _resolveElementOptions(elementType, mode = 'default', index) {\n    const active = mode === 'active';\n    const cache = this._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = this.enableOptionSharing && defined(index);\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n    const config = this.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n    const names = Object.keys(defaults.elements[elementType]);\n    // context is provided as a function, and is called only if needed,\n    // so we don't create a context for each element if not needed.\n    const context = () => this.getContext(index, active);\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n\n    if (values.$shared) {\n      // `$shared` indicates this set of options can be shared between multiple elements.\n      // Sharing is used to reduce number of properties to change during animation.\n      values.$shared = sharing;\n\n      // We cache options by `mode`, which can be 'active' for example. This enables us\n      // to have the 'active' element options and 'default' options to switch between\n      // when interacting.\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n\n    return values;\n  }\n\n\n  /**\n\t * @private\n\t */\n  _resolveAnimations(index, transition, active) {\n    const chart = this.chart;\n    const cache = this._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n    if (cached) {\n      return cached;\n    }\n    let options;\n    if (chart.options.animation !== false) {\n      const config = this.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n      const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, this.getContext(index, active, transition));\n    }\n    const animations = new Animations(chart, options && options.animations);\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n    return animations;\n  }\n\n  /**\n\t * Utility for getting the options object shared between elements\n\t * @protected\n\t */\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n\n  /**\n\t * Utility for determining if `options` should be included in the updated properties\n\t * @protected\n\t */\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n\n  /**\n   * @todo v4, rename to getSharedOptions and remove excess functions\n   */\n  _getSharedOptions(start, mode) {\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const previouslySharedOptions = this._sharedOptions;\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions) || (sharedOptions !== previouslySharedOptions);\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    return {sharedOptions, includeOptions};\n  }\n\n  /**\n\t * Utility for updating an element with new properties, using animations when appropriate.\n\t * @protected\n\t */\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n\n  /**\n\t * Utility to animate the shared options, that are potentially affecting multiple elements.\n\t * @protected\n\t */\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n    this._resolveAnimations(index, mode, active).update(element, {\n      // When going from active to inactive, we need to update to the shared options.\n      // This way the once hovered element will end up with the same original shared options instance, after animation.\n      options: (!active && this.getSharedOptions(options)) || options\n    });\n  }\n\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n\n  /**\n\t * @private\n\t */\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _resyncElements(resetNewElements) {\n    const data = this._data;\n    const elements = this._cachedMeta.data;\n\n    // Apply changes detected through array listeners\n    for (const [method, arg1, arg2] of this._syncList) {\n      this[method](arg1, arg2);\n    }\n    this._syncList = [];\n\n    const numMeta = elements.length;\n    const numData = data.length;\n    const count = Math.min(numData, numMeta);\n\n    if (count) {\n      // TODO: It is not optimal to always parse the old data\n      // This is done because we are not detecting direct assignments:\n      // chart.data.datasets[0].data[5] = 10;\n      // chart.data.datasets[0].data[5].y = 10;\n      this.parse(0, count);\n    }\n\n    if (numData > numMeta) {\n      this._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      this._removeElements(numData, numMeta - numData);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _insertElements(start, count, resetNewElements = true) {\n    const meta = this._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n\n    const move = (arr) => {\n      arr.length += count;\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n    move(data);\n\n    for (i = start; i < end; ++i) {\n      data[i] = new this.dataElementType();\n    }\n\n    if (this._parsing) {\n      move(meta._parsed);\n    }\n    this.parse(start, count);\n\n    if (resetNewElements) {\n      this.updateElements(data, start, count, 'reset');\n    }\n  }\n\n  updateElements(element, start, count, mode) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * @private\n\t */\n  _removeElements(start, count) {\n    const meta = this._cachedMeta;\n    if (this._parsing) {\n      const removed = meta._parsed.splice(start, count);\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n    meta.data.splice(start, count);\n  }\n\n  /**\n\t * @private\n   */\n  _sync(args) {\n    if (this._parsing) {\n      this._syncList.push(args);\n    } else {\n      const [method, arg1, arg2] = args;\n      this[method](arg1, arg2);\n    }\n    this.chart._dataChanges.push([this.index, ...args]);\n  }\n\n  _onDataPush() {\n    const count = arguments.length;\n    this._sync(['_insertElements', this.getDataset().data.length - count, count]);\n  }\n\n  _onDataPop() {\n    this._sync(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n  }\n\n  _onDataShift() {\n    this._sync(['_removeElements', 0, 1]);\n  }\n\n  _onDataSplice(start, count) {\n    if (count) {\n      this._sync(['_removeElements', start, count]);\n    }\n    const newCount = arguments.length - 2;\n    if (newCount) {\n      this._sync(['_insertElements', start, newCount]);\n    }\n  }\n\n  _onDataUnshift() {\n    this._sync(['_insertElements', 0, arguments.length]);\n  }\n}\n","import DatasetController from '../core/core.datasetController';\nimport {\n  _arrayUnique, isArray, isNullOrUndef,\n  valueOrDefault, resolveObjectKey, sign, defined\n} from '../helpers';\n\nfunction getAllScaleValues(scale, type) {\n  if (!scale._cache.$bar) {\n    const visibleMetas = scale.getMatchingVisibleMetas(type);\n    let values = [];\n\n    for (let i = 0, ilen = visibleMetas.length; i < ilen; i++) {\n      values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n    }\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\n  }\n  return scale._cache.$bar;\n}\n\n/**\n * Computes the \"optimal\" sample size to maintain bars equally sized while preventing overlap.\n * @private\n */\nfunction computeMinSampleSize(meta) {\n  const scale = meta.iScale;\n  const values = getAllScaleValues(scale, meta.type);\n  let min = scale._length;\n  let i, ilen, curr, prev;\n  const updateMinAndPrev = () => {\n    if (curr === 32767 || curr === -32768) {\n      // Ignore truncated pixels\n      return;\n    }\n    if (defined(prev)) {\n      // curr - prev === 0 is ignored\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n    prev = curr;\n  };\n\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n\n  prev = undefined;\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n\n  return min;\n}\n\n/**\n * Computes an \"ideal\" category based on the absolute bar thickness or, if undefined or null,\n * uses the smallest interval (see computeMinSampleSize) that prevents bar overlapping. This\n * mode currently always generates bars equally sized (until we introduce scriptable options?).\n * @private\n */\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  const thickness = options.barThickness;\n  let size, ratio;\n\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    // When bar thickness is enforced, category and bar percentages are ignored.\n    // Note(SB): we could add support for relative bar thickness (e.g. barThickness: '50%')\n    // and deprecate barPercentage since this value is ignored when thickness is absolute.\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n\n  return {\n    chunk: size / stackCount,\n    ratio,\n    start: ruler.pixels[index] - (size / 2)\n  };\n}\n\n/**\n * Computes an \"optimal\" category that globally arranges bars side by side (no gap when\n * percentage options are 1), based on the previous and following categories. This mode\n * generates bars with different widths when data are not evenly spaced.\n * @private\n */\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  const pixels = ruler.pixels;\n  const curr = pixels[index];\n  let prev = index > 0 ? pixels[index - 1] : null;\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  const percent = options.categoryPercentage;\n\n  if (prev === null) {\n    // first data: its size is double based on the next point or,\n    // if it's also the last data, we use the scale size.\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n\n  if (next === null) {\n    // last data: its size is also double based on the previous point.\n    next = curr + curr - prev;\n  }\n\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  const size = Math.abs(next - prev) / 2 * percent;\n\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start\n  };\n}\n\nfunction parseFloatBar(entry, item, vScale, i) {\n  const startValue = vScale.parse(entry[0], i);\n  const endValue = vScale.parse(entry[1], i);\n  const min = Math.min(startValue, endValue);\n  const max = Math.max(startValue, endValue);\n  let barStart = min;\n  let barEnd = max;\n\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n\n  // Store `barEnd` (furthest away from origin) as parsed value,\n  // to make stacking straight forward\n  item[vScale.axis] = barEnd;\n\n  item._custom = {\n    barStart,\n    barEnd,\n    start: startValue,\n    end: endValue,\n    min,\n    max\n  };\n}\n\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n  return item;\n}\n\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  const iScale = meta.iScale;\n  const vScale = meta.vScale;\n  const labels = iScale.getLabels();\n  const singleScale = iScale === vScale;\n  const parsed = [];\n  let i, ilen, item, entry;\n\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n  return parsed;\n}\n\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\n\nfunction barSign(size, vScale, actualBase) {\n  if (size !== 0) {\n    return sign(size);\n  }\n  return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\n\nfunction borderProps(properties) {\n  let reverse, start, end, top, bottom;\n  if (properties.horizontal) {\n    reverse = properties.base > properties.x;\n    start = 'left';\n    end = 'right';\n  } else {\n    reverse = properties.base < properties.y;\n    start = 'bottom';\n    end = 'top';\n  }\n  if (reverse) {\n    top = 'end';\n    bottom = 'start';\n  } else {\n    top = 'start';\n    bottom = 'end';\n  }\n  return {start, end, reverse, top, bottom};\n}\n\nfunction setBorderSkipped(properties, options, stack, index) {\n  let edge = options.borderSkipped;\n  const res = {};\n\n  if (!edge) {\n    properties.borderSkipped = res;\n    return;\n  }\n\n  if (edge === true) {\n    properties.borderSkipped = {top: true, right: true, bottom: true, left: true};\n    return;\n  }\n\n  const {start, end, reverse, top, bottom} = borderProps(properties);\n\n  if (edge === 'middle' && stack) {\n    properties.enableBorderRadius = true;\n    if ((stack._top || 0) === index) {\n      edge = top;\n    } else if ((stack._bottom || 0) === index) {\n      edge = bottom;\n    } else {\n      res[parseEdge(bottom, start, end, reverse)] = true;\n      edge = top;\n    }\n  }\n\n  res[parseEdge(edge, start, end, reverse)] = true;\n  properties.borderSkipped = res;\n}\n\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n  return edge;\n}\n\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\n\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\n\nfunction setInflateAmount(properties, {inflateAmount}, ratio) {\n  properties.inflateAmount = inflateAmount === 'auto'\n    ? ratio === 1 ? 0.33 : 0\n    : inflateAmount;\n}\n\nexport default class BarController extends DatasetController {\n\n  static id = 'bar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'bar',\n\n    categoryPercentage: 0.8,\n    barPercentage: 0.9,\n    grouped: true,\n\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'base', 'width', 'height']\n      }\n    }\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      _index_: {\n        type: 'category',\n        offset: true,\n        grid: {\n          offset: true\n        }\n      },\n      _value_: {\n        type: 'linear',\n        beginAtZero: true,\n      }\n    }\n  };\n\n\n  /**\n\t * Overriding primitive data parsing since we support mixed primitive/array\n\t * data for float bars\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n\n  /**\n\t * Overriding array data parsing since we support mixed primitive/array\n\t * data for float bars\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n\n  /**\n\t * Overriding object data parsing since we support mixed primitive/array\n\t * value-scale data for float bars\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const parsed = [];\n    let i, ilen, item, obj;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      obj = data[i];\n      item = {};\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    super.updateRangeFromParsed(range, scale, parsed, stack);\n    const custom = parsed._custom;\n    if (custom && scale === this._cachedMeta.vScale) {\n      // float bar: only one end of the bar is considered by `super`\n      range.min = Math.min(range.min, custom.min);\n      range.max = Math.max(range.max, custom.max);\n    }\n  }\n\n  /**\n\t * @return {number|boolean}\n\t * @protected\n\t */\n  getMaxOverflow() {\n    return 0;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {iScale, vScale} = meta;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const value = isFloatBar(custom)\n      ? '[' + custom.start + ', ' + custom.end + ']'\n      : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n\n    return {\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n      value\n    };\n  }\n\n  initialize() {\n    this.enableOptionSharing = true;\n\n    super.initialize();\n\n    const meta = this._cachedMeta;\n    meta.stack = this.getDataset().stack;\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    this.updateElements(meta.data, 0, meta.data.length, mode);\n  }\n\n  updateElements(bars, start, count, mode) {\n    const reset = mode === 'reset';\n    const {index, _cachedMeta: {vScale}} = this;\n    const base = vScale.getBasePixel();\n    const horizontal = vScale.isHorizontal();\n    const ruler = this._getRuler();\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n\n    for (let i = start; i < start + count; i++) {\n      const parsed = this.getParsed(i);\n      const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {base, head: base} : this._calculateBarValuePixels(i);\n      const ipixels = this._calculateBarIndexPixels(i, ruler);\n      const stack = (parsed._stacks || {})[vScale.axis];\n\n      const properties = {\n        horizontal,\n        base: vpixels.base,\n        enableBorderRadius: !stack || isFloatBar(parsed._custom) || (index === stack._top || index === stack._bottom),\n        x: horizontal ? vpixels.head : ipixels.center,\n        y: horizontal ? ipixels.center : vpixels.head,\n        height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n        width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n      };\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n      }\n      const options = properties.options || bars[i].options;\n      setBorderSkipped(properties, options, stack, index);\n      setInflateAmount(properties, options, ruler.ratio);\n      this.updateElement(bars[i], i, properties, mode);\n    }\n  }\n\n  /**\n\t * Returns the stacks based on groups and bar visibility.\n\t * @param {number} [last] - The dataset index\n\t * @param {number} [dataIndex] - The data index of the ruler\n\t * @returns {string[]} The list of stack IDs\n\t * @private\n\t */\n  _getStacks(last, dataIndex) {\n    const {iScale} = this._cachedMeta;\n    const metasets = iScale.getMatchingVisibleMetas(this._type)\n      .filter(meta => meta.controller.options.grouped);\n    const stacked = iScale.options.stacked;\n    const stacks = [];\n\n    const skipNull = (meta) => {\n      const parsed = meta.controller.getParsed(dataIndex);\n      const val = parsed && parsed[meta.vScale.axis];\n\n      if (isNullOrUndef(val) || isNaN(val)) {\n        return true;\n      }\n    };\n\n    for (const meta of metasets) {\n      if (dataIndex !== undefined && skipNull(meta)) {\n        continue;\n      }\n\n      // stacked   | meta.stack\n      //           | found | not found | undefined\n      // false     |   x   |     x     |     x\n      // true      |       |     x     |\n      // undefined |       |     x     |     x\n      if (stacked === false || stacks.indexOf(meta.stack) === -1 ||\n\t\t\t\t(stacked === undefined && meta.stack === undefined)) {\n        stacks.push(meta.stack);\n      }\n      if (meta.index === last) {\n        break;\n      }\n    }\n\n    // No stacks? that means there is no visible data. Let's still initialize an `undefined`\n    // stack where possible invisible bars will be located.\n    // https://github.com/chartjs/Chart.js/issues/6368\n    if (!stacks.length) {\n      stacks.push(undefined);\n    }\n\n    return stacks;\n  }\n\n  /**\n\t * Returns the effective number of stacks based on groups and bar visibility.\n\t * @private\n\t */\n  _getStackCount(index) {\n    return this._getStacks(undefined, index).length;\n  }\n\n  /**\n\t * Returns the stack index for the given dataset based on groups and bar visibility.\n\t * @param {number} [datasetIndex] - The dataset index\n\t * @param {string} [name] - The stack name to find\n   * @param {number} [dataIndex]\n\t * @returns {number} The stack index\n\t * @private\n\t */\n  _getStackIndex(datasetIndex, name, dataIndex) {\n    const stacks = this._getStacks(datasetIndex, dataIndex);\n    const index = (name !== undefined)\n      ? stacks.indexOf(name)\n      : -1; // indexOf returns -1 if element is not present\n\n    return (index === -1)\n      ? stacks.length - 1\n      : index;\n  }\n\n  /**\n\t * @private\n\t */\n  _getRuler() {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const pixels = [];\n    let i, ilen;\n\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n      pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n    }\n\n    const barThickness = opts.barThickness;\n    const min = barThickness || computeMinSampleSize(meta);\n\n    return {\n      min,\n      pixels,\n      start: iScale._startPixel,\n      end: iScale._endPixel,\n      stackCount: this._getStackCount(),\n      scale: iScale,\n      grouped: opts.grouped,\n      // bar thickness ratio used for non-grouped bars\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n    };\n  }\n\n  /**\n\t * Note: pixel values are not clamped to the scale area.\n\t * @private\n\t */\n  _calculateBarValuePixels(index) {\n    const {_cachedMeta: {vScale, _stacked}, options: {base: baseValue, minBarLength}} = this;\n    const actualBase = baseValue || 0;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const floating = isFloatBar(custom);\n    let value = parsed[vScale.axis];\n    let start = 0;\n    let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n    let head, size;\n\n    if (length !== value) {\n      start = length - value;\n      length = value;\n    }\n\n    if (floating) {\n      value = custom.barStart;\n      length = custom.barEnd - custom.barStart;\n      // bars crossing origin are not stacked\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n        start = 0;\n      }\n      start += value;\n    }\n\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n    let base = vScale.getPixelForValue(startValue);\n\n    if (this.chart.getDataVisibility(index)) {\n      head = vScale.getPixelForValue(start + length);\n    } else {\n      // When not visible, no height\n      head = base;\n    }\n\n    size = head - base;\n\n    if (Math.abs(size) < minBarLength) {\n      size = barSign(size, vScale, actualBase) * minBarLength;\n      if (value === actualBase) {\n        base -= size / 2;\n      }\n      const startPixel = vScale.getPixelForDecimal(0);\n      const endPixel = vScale.getPixelForDecimal(1);\n      const min = Math.min(startPixel, endPixel);\n      const max = Math.max(startPixel, endPixel);\n      base = Math.max(Math.min(base, max), min);\n      head = base + size;\n    }\n\n    if (base === vScale.getPixelForValue(actualBase)) {\n      const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n      base += halfGrid;\n      size -= halfGrid;\n    }\n\n    return {\n      size,\n      base,\n      head,\n      center: head + size / 2\n    };\n  }\n\n  /**\n\t * @private\n\t */\n  _calculateBarIndexPixels(index, ruler) {\n    const scale = ruler.scale;\n    const options = this.options;\n    const skipNull = options.skipNull;\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n    let center, size;\n    if (ruler.grouped) {\n      const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n      const range = options.barThickness === 'flex'\n        ? computeFlexCategoryTraits(index, ruler, options, stackCount)\n        : computeFitCategoryTraits(index, ruler, options, stackCount);\n\n      const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n      center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\n    } else {\n      // For non-grouped bar charts, exact pixel values are used\n      center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n    }\n\n    return {\n      base: center - size / 2,\n      head: center + size / 2,\n      center,\n      size\n    };\n  }\n\n  draw() {\n    const meta = this._cachedMeta;\n    const vScale = meta.vScale;\n    const rects = meta.data;\n    const ilen = rects.length;\n    let i = 0;\n\n    for (; i < ilen; ++i) {\n      if (this.getParsed(i)[vScale.axis] !== null) {\n        rects[i].draw(this._ctx);\n      }\n    }\n  }\n\n}\n","import DatasetController from '../core/core.datasetController';\nimport {valueOrDefault} from '../helpers/helpers.core';\n\nexport default class BubbleController extends DatasetController {\n\n  static id = 'bubble';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'point',\n\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'borderWidth', 'radius']\n      }\n    }\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      x: {\n        type: 'linear'\n      },\n      y: {\n        type: 'linear'\n      }\n    }\n  };\n\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n\n  /**\n\t * Parse array of primitive values\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    const parsed = super.parsePrimitiveData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of arrays\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    const parsed = super.parseArrayData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of objects\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const parsed = super.parseObjectData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const data = this._cachedMeta.data;\n\n    let max = 0;\n    for (let i = data.length - 1; i >= 0; --i) {\n      max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n    }\n    return max > 0 && max;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const labels = this.chart.data.labels || [];\n    const {xScale, yScale} = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n    const r = parsed._custom;\n\n    return {\n      label: labels[index] || '',\n      value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n    };\n  }\n\n  update(mode) {\n    const points = this._cachedMeta.data;\n\n    // Update Points\n    this.updateElements(points, 0, points.length, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale} = this._cachedMeta;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const parsed = !reset && this.getParsed(i);\n      const properties = {};\n      const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n      const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel);\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n\n        if (reset) {\n          properties.options.radius = 0;\n        }\n      }\n\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n\n  /**\n\t * @param {number} index\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDataElementOptions(index, mode) {\n    const parsed = this.getParsed(index);\n    let values = super.resolveDataElementOptions(index, mode);\n\n    // In case values were cached (and thus frozen), we need to clone the values\n    if (values.$shared) {\n      values = Object.assign({}, values, {$shared: false});\n    }\n\n    // Custom radius resolution\n    const radius = values.radius;\n    if (mode !== 'active') {\n      values.radius = 0;\n    }\n    values.radius += valueOrDefault(parsed && parsed._custom, radius);\n\n    return values;\n  }\n}\n","import DatasetController from '../core/core.datasetController';\nimport {isObject, resolveObjectKey, toPercentage, toDimension, valueOrDefault} from '../helpers/helpers.core';\nimport {formatNumber} from '../helpers/helpers.intl';\nimport {toRadians, PI, TAU, HALF_PI, _angleBetween} from '../helpers/helpers.math';\n\n/**\n * @typedef { import(\"../core/core.controller\").default } Chart\n */\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n  // If the chart's circumference isn't a full circle, calculate size as a ratio of the width/height of the arc\n  if (circumference < TAU) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(HALF_PI, startY, endY);\n    const minX = calcMin(PI, startX, endX);\n    const minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n  return {ratioX, ratioY, offsetX, offsetY};\n}\n\nexport default class DoughnutController extends DatasetController {\n\n  static id = 'doughnut';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'arc',\n    animation: {\n      // Boolean - Whether we animate the rotation of the Doughnut\n      animateRotate: true,\n      // Boolean - Whether we animate scaling the Doughnut from the centre\n      animateScale: false\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\n      },\n    },\n    // The percentage of the chart that we cut out of the middle.\n    cutout: '50%',\n\n    // The rotation of the chart, where the first data arc begins.\n    rotation: 0,\n\n    // The total circumference of the chart.\n    circumference: 360,\n\n    // The outr radius of the chart\n    radius: '100%',\n\n    // Spacing between arcs\n    spacing: 0,\n\n    indexAxis: 'r',\n  };\n\n  static descriptors = {\n    _scriptable: (name) => name !== 'spacing',\n    _indexable: (name) => name !== 'spacing',\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    // Need to override these to give a nice default\n    plugins: {\n      legend: {\n        labels: {\n          generateLabels(chart) {\n            const data = chart.data;\n            if (data.labels.length && data.datasets.length) {\n              const {labels: {pointStyle, color}} = chart.legend.options;\n\n              return data.labels.map((label, i) => {\n                const meta = chart.getDatasetMeta(0);\n                const style = meta.controller.getStyle(i);\n\n                return {\n                  text: label,\n                  fillStyle: style.backgroundColor,\n                  strokeStyle: style.borderColor,\n                  fontColor: color,\n                  lineWidth: style.borderWidth,\n                  pointStyle: pointStyle,\n                  hidden: !chart.getDataVisibility(i),\n\n                  // Extra data used for toggling the correct item\n                  index: i\n                };\n              });\n            }\n            return [];\n          }\n        },\n\n        onClick(e, legendItem, legend) {\n          legend.chart.toggleDataVisibility(legendItem.index);\n          legend.chart.update();\n        }\n      }\n    }\n  };\n\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n\n  linkScales() {}\n\n  /**\n\t * Override data parsing, since we are not using scales\n\t */\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n\n    if (this._parsing === false) {\n      meta._parsed = data;\n    } else {\n      let getter = (i) => +data[i];\n\n      if (isObject(data[start])) {\n        const {key = 'value'} = this._parsing;\n        getter = (i) => +resolveObjectKey(data[i], key);\n      }\n\n      let i, ilen;\n      for (i = start, ilen = start + count; i < ilen; ++i) {\n        meta._parsed[i] = getter(i);\n      }\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _getRotation() {\n    return toRadians(this.options.rotation - 90);\n  }\n\n  /**\n\t * @private\n\t */\n  _getCircumference() {\n    return toRadians(this.options.circumference);\n  }\n\n  /**\n\t * Get the maximal rotation & circumference extents\n\t * across all visible datasets.\n\t */\n  _getRotationExtents() {\n    let min = TAU;\n    let max = -TAU;\n\n    for (let i = 0; i < this.chart.data.datasets.length; ++i) {\n      if (this.chart.isDatasetVisible(i) && this.chart.getDatasetMeta(i).type === this._type) {\n        const controller = this.chart.getDatasetMeta(i).controller;\n        const rotation = controller._getRotation();\n        const circumference = controller._getCircumference();\n\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n\n    return {\n      rotation: min,\n      circumference: max - min,\n    };\n  }\n\n  /**\n\t * @param {string} mode\n\t */\n  update(mode) {\n    const chart = this.chart;\n    const {chartArea} = chart;\n    const meta = this._cachedMeta;\n    const arcs = meta.data;\n    const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n    const chartWeight = this._getRingWeight(this.index);\n\n    // Compute the maximal rotation & circumference limits.\n    // If we only consider our dataset, this can cause problems when two datasets\n    // are both less than a circle with different rotations (starting angles)\n    const {circumference, rotation} = this._getRotationExtents();\n    const {ratioX, ratioY, offsetX, offsetY} = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = toDimension(this.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n    const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n    this.offsetX = offsetX * outerRadius;\n    this.offsetY = offsetY * outerRadius;\n\n    meta.total = this.calculateTotal();\n\n    this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n    this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n\n  /**\n   * @private\n   */\n  _circumference(i, reset) {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const circumference = this._getCircumference();\n    if ((reset && opts.animation.animateRotate) || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n      return 0;\n    }\n    return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n  }\n\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : this.innerRadius;\n    const outerRadius = animateScale ? 0 : this.outerRadius;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    let startAngle = this._getRotation();\n    let i;\n\n    for (i = 0; i < start; ++i) {\n      startAngle += this._circumference(i, reset);\n    }\n\n    for (i = start; i < start + count; ++i) {\n      const circumference = this._circumference(i, reset);\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + this.offsetX,\n        y: centerY + this.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n      }\n      startAngle += circumference;\n\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n        total += Math.abs(value);\n      }\n    }\n\n    return total;\n  }\n\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n    if (total > 0 && !isNaN(value)) {\n      return TAU * (Math.abs(value) / total);\n    }\n    return 0;\n  }\n\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\n\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n\n  getMaxBorderWidth(arcs) {\n    let max = 0;\n    const chart = this.chart;\n    let i, ilen, meta, controller, options;\n\n    if (!arcs) {\n      // Find the outmost visible dataset\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n          break;\n        }\n      }\n    }\n\n    if (!arcs) {\n      return 0;\n    }\n\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n    return max;\n  }\n\n  getMaxOffset(arcs) {\n    let max = 0;\n\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n    return max;\n  }\n\n  /**\n\t * Get radius length offset of the dataset in relation to the visible datasets weights. This allows determining the inner and outer radius correctly\n\t * @private\n\t */\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n\n    return ringWeightOffset;\n  }\n\n  /**\n\t * @private\n\t */\n  _getRingWeight(datasetIndex) {\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n\n  /**\n\t * Returns the sum of all visible data set weights.\n\t * @private\n\t */\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n}\n","import DatasetController from '../core/core.datasetController';\nimport {isNullOrUndef} from '../helpers';\nimport {isNumber} from '../helpers/helpers.math';\nimport {_getStartAndCountOfVisiblePoints, _scaleRangesChanged} from '../helpers/helpers.extras';\n\nexport default class LineController extends DatasetController {\n\n  static id = 'line';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: 'line',\n    dataElementType: 'point',\n\n    showLine: true,\n    spanGaps: false,\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      _index_: {\n        type: 'category',\n      },\n      _value_: {\n        type: 'linear',\n      },\n    }\n  };\n\n  initialize() {\n    this.enableOptionSharing = true;\n    this.supportsDecimation = true;\n    super.initialize();\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {dataset: line, data: points = [], _dataset} = meta;\n    // @ts-ignore\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n\n    this._drawStart = start;\n    this._drawCount = count;\n\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n\n    // Update Line\n    line._chart = this.chart;\n    line._datasetIndex = this.index;\n    line._decimated = !!_dataset._decimated;\n    line.points = points;\n\n    const options = this.resolveDatasetElementOptions(mode);\n    if (!this.options.showLine) {\n      options.borderWidth = 0;\n    }\n    options.segment = this.options.segment;\n    this.updateElement(line, undefined, {\n      animated: !animationsDisabled,\n      options\n    }, mode);\n\n    // Update Points\n    this.updateElements(points, start, count, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    const end = start + count;\n    const pointsCount = points.length;\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n\n    for (let i = 0; i < pointsCount; ++i) {\n      const point = points[i];\n      const properties = directUpdate ? point : {};\n\n      if (i < start || i >= end) {\n        properties.skip = true;\n        continue;\n      }\n\n      const parsed = this.getParsed(i);\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n\n      prevParsed = parsed;\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    const data = meta.data || [];\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n\n  draw() {\n    const meta = this._cachedMeta;\n    meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n    super.draw();\n  }\n}\n","import DatasetController from '../core/core.datasetController';\nimport {toRadians, PI, formatNumber, _parseObjectDataRadialScale} from '../helpers/index';\n\nexport default class PolarAreaController extends DatasetController {\n\n  static id = 'polarArea';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    dataElementType: 'arc',\n    animation: {\n      animateRotate: true,\n      animateScale: true\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n      },\n    },\n    indexAxis: 'r',\n    startAngle: 0,\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    plugins: {\n      legend: {\n        labels: {\n          generateLabels(chart) {\n            const data = chart.data;\n            if (data.labels.length && data.datasets.length) {\n              const {labels: {pointStyle, color}} = chart.legend.options;\n\n              return data.labels.map((label, i) => {\n                const meta = chart.getDatasetMeta(0);\n                const style = meta.controller.getStyle(i);\n\n                return {\n                  text: label,\n                  fillStyle: style.backgroundColor,\n                  strokeStyle: style.borderColor,\n                  fontColor: color,\n                  lineWidth: style.borderWidth,\n                  pointStyle: pointStyle,\n                  hidden: !chart.getDataVisibility(i),\n\n                  // Extra data used for toggling the correct item\n                  index: i\n                };\n              });\n            }\n            return [];\n          }\n        },\n\n        onClick(e, legendItem, legend) {\n          legend.chart.toggleDataVisibility(legendItem.index);\n          legend.chart.update();\n        }\n      }\n    },\n\n    scales: {\n      r: {\n        type: 'radialLinear',\n        angleLines: {\n          display: false\n        },\n        beginAtZero: true,\n        grid: {\n          circular: true\n        },\n        pointLabels: {\n          display: false\n        },\n        startAngle: 0\n      }\n    }\n  };\n\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n  }\n\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n\n  update(mode) {\n    const arcs = this._cachedMeta.data;\n\n    this._updateRadius();\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n\n  /**\n   * @protected\n   */\n  getMinMax() {\n    const meta = this._cachedMeta;\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n\n    meta.data.forEach((element, index) => {\n      const parsed = this.getParsed(index).r;\n\n      if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n        if (parsed < range.min) {\n          range.min = parsed;\n        }\n\n        if (parsed > range.max) {\n          range.max = parsed;\n        }\n      }\n    });\n\n    return range;\n  }\n\n  /**\n\t * @private\n\t */\n  _updateRadius() {\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n\n    const outerRadius = Math.max(minSize / 2, 0);\n    const innerRadius = Math.max(opts.cutoutPercentage ? (outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n    const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n\n    this.outerRadius = outerRadius - (radiusLength * this.index);\n    this.innerRadius = this.outerRadius - radiusLength;\n  }\n\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const scale = this._cachedMeta.rScale;\n    const centerX = scale.xCenter;\n    const centerY = scale.yCenter;\n    const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n    let angle = datasetStartAngle;\n    let i;\n\n    const defaultAngle = 360 / this.countVisibleElements();\n\n    for (i = 0; i < start; ++i) {\n      angle += this._computeAngle(i, mode, defaultAngle);\n    }\n    for (i = start; i < start + count; i++) {\n      const arc = arcs[i];\n      let startAngle = angle;\n      let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n      let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n      angle = endAngle;\n\n      if (reset) {\n        if (animationOpts.animateScale) {\n          outerRadius = 0;\n        }\n        if (animationOpts.animateRotate) {\n          startAngle = endAngle = datasetStartAngle;\n        }\n      }\n\n      const properties = {\n        x: centerX,\n        y: centerY,\n        innerRadius: 0,\n        outerRadius,\n        startAngle,\n        endAngle,\n        options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n      };\n\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n\n  countVisibleElements() {\n    const meta = this._cachedMeta;\n    let count = 0;\n\n    meta.data.forEach((element, index) => {\n      if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n        count++;\n      }\n    });\n\n    return count;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeAngle(index, mode, defaultAngle) {\n    return this.chart.getDataVisibility(index)\n      ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle)\n      : 0;\n  }\n}\n","import DoughnutController from './controller.doughnut';\n\n// Pie charts are Doughnut chart with different defaults\nexport default class PieController extends DoughnutController {\n\n  static id = 'pie';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    // The percentage of the chart that we cut out of the middle.\n    cutout: 0,\n\n    // The rotation of the chart, where the first data arc begins.\n    rotation: 0,\n\n    // The total circumference of the chart.\n    circumference: 360,\n\n    // The outr radius of the chart\n    radius: '100%'\n  };\n}\n","import DatasetController from '../core/core.datasetController';\nimport {_parseObjectDataRadialScale} from '../helpers/index';\n\nexport default class RadarController extends DatasetController {\n\n  static id = 'radar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: 'line',\n    dataElementType: 'point',\n    indexAxis: 'r',\n    showLine: true,\n    elements: {\n      line: {\n        fill: 'start'\n      }\n    },\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    scales: {\n      r: {\n        type: 'radialLinear',\n      }\n    }\n  };\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const vScale = this._cachedMeta.vScale;\n    const parsed = this.getParsed(index);\n\n    return {\n      label: vScale.getLabels()[index],\n      value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n    };\n  }\n\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const line = meta.dataset;\n    const points = meta.data || [];\n    const labels = meta.iScale.getLabels();\n\n    // Update Line\n    line.points = points;\n    // In resize mode only point locations change, so no need to set the points or options.\n    if (mode !== 'resize') {\n      const options = this.resolveDatasetElementOptions(mode);\n      if (!this.options.showLine) {\n        options.borderWidth = 0;\n      }\n\n      const properties = {\n        _loop: true,\n        _fullLoop: labels.length === points.length,\n        options\n      };\n\n      this.updateElement(line, undefined, properties, mode);\n    }\n\n    // Update Points\n    this.updateElements(points, 0, points.length, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const scale = this._cachedMeta.rScale;\n    const reset = mode === 'reset';\n\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n\n      const x = reset ? scale.xCenter : pointPosition.x;\n      const y = reset ? scale.yCenter : pointPosition.y;\n\n      const properties = {\n        x,\n        y,\n        angle: pointPosition.angle,\n        skip: isNaN(x) || isNaN(y),\n        options\n      };\n\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n}\n","import DatasetController from '../core/core.datasetController';\nimport {isNullOrUndef} from '../helpers';\nimport {isNumber} from '../helpers/helpers.math';\nimport {_getStartAndCountOfVisiblePoints, _scaleRangesChanged} from '../helpers/helpers.extras';\n\nexport default class ScatterController extends DatasetController {\n\n  static id = 'scatter';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'point',\n    showLine: false,\n    fill: false\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n\n    interaction: {\n      mode: 'point'\n    },\n\n    scales: {\n      x: {\n        type: 'linear'\n      },\n      y: {\n        type: 'linear'\n      }\n    }\n  };\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const labels = this.chart.data.labels || [];\n    const {xScale, yScale} = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n\n    return {\n      label: labels[index] || '',\n      value: '(' + x + ', ' + y + ')'\n    };\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {data: points = []} = meta;\n    // @ts-ignore\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n\n    this._drawStart = start;\n    this._drawCount = count;\n\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n\n    if (this.options.showLine) {\n\n      const {dataset: line, _dataset} = meta;\n\n      // Update Line\n      line._chart = this.chart;\n      line._datasetIndex = this.index;\n      line._decimated = !!_dataset._decimated;\n      line.points = points;\n\n      const options = this.resolveDatasetElementOptions(mode);\n      options.segment = this.options.segment;\n      this.updateElement(line, undefined, {\n        animated: !animationsDisabled,\n        options\n      }, mode);\n    }\n\n    // Update Points\n    this.updateElements(points, start, count, mode);\n  }\n\n  addElements() {\n    const {showLine} = this.options;\n\n    if (!this.datasetElementType && showLine) {\n      this.datasetElementType = this.chart.registry.getElement('line');\n    }\n\n    super.addElements();\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = this.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n\n      prevParsed = parsed;\n    }\n\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const data = meta.data || [];\n\n    if (!this.options.showLine) {\n      let max = 0;\n      for (let i = data.length - 1; i >= 0; --i) {\n        max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n      }\n      return max > 0 && max;\n    }\n\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n\n    if (!data.length) {\n      return border;\n    }\n\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n}\n","/**\n * @namespace Chart._adapters\n * @since 2.8.0\n * @private\n */\n\nimport type {AnyObject} from '../../types/basic';\nimport type {ChartOptions} from '../../types';\n\nexport type TimeUnit = 'millisecond' | 'second' | 'minute' | 'hour' | 'day' | 'week' | 'month' | 'quarter' | 'year';\n\nexport interface DateAdapter<T extends AnyObject = AnyObject> {\n  readonly options: T;\n  /**\n   * Will called with chart options after adapter creation.\n   */\n  init(this: DateAdapter<T>, chartOptions: ChartOptions): void;\n  /**\n   * Returns a map of time formats for the supported formatting units defined\n   * in Unit as well as 'datetime' representing a detailed date/time string.\n   */\n  formats(this: DateAdapter<T>): Record<string, string>;\n  /**\n   * Parses the given `value` and return the associated timestamp.\n   * @param value - the value to parse (usually comes from the data)\n   * @param [format] - the expected data format\n   */\n  parse(this: DateAdapter<T>, value: unknown, format?: TimeUnit): number | null;\n  /**\n   * Returns the formatted date in the specified `format` for a given `timestamp`.\n   * @param timestamp - the timestamp to format\n   * @param format - the date/time token\n   */\n  format(this: DateAdapter<T>, timestamp: number, format: TimeUnit): string;\n  /**\n   * Adds the specified `amount` of `unit` to the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param amount - the amount to add\n   * @param unit - the unit as string\n   */\n  add(this: DateAdapter<T>, timestamp: number, amount: number, unit: TimeUnit): number;\n  /**\n   * Returns the number of `unit` between the given timestamps.\n   * @param a - the input timestamp (reference)\n   * @param b - the timestamp to subtract\n   * @param unit - the unit as string\n   */\n  diff(this: DateAdapter<T>, a: number, b: number, unit: TimeUnit): number;\n  /**\n   * Returns start of `unit` for the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param unit - the unit as string\n   * @param [weekday] - the ISO day of the week with 1 being Monday\n   * and 7 being Sunday (only needed if param *unit* is `isoWeek`).\n   */\n  startOf(this: DateAdapter<T>, timestamp: number, unit: TimeUnit | 'isoWeek', weekday?: number): number;\n  /**\n   * Returns end of `unit` for the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param unit - the unit as string\n   */\n  endOf(this: DateAdapter<T>, timestamp: number, unit: TimeUnit | 'isoWeek'): number;\n}\n\nfunction abstract<T = void>(): T {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */\nclass DateAdapterBase implements DateAdapter {\n\n  /**\n   * Override default date adapter methods.\n   * Accepts type parameter to define options type.\n   * @example\n   * Chart._adapters._date.override<{myAdapterOption: string}>({\n   *   init() {\n   *     console.log(this.options.myAdapterOption);\n   *   }\n   * })\n   */\n  static override<T extends AnyObject = AnyObject>(\n    members: Partial<Omit<DateAdapter<T>, 'options'>>\n  ) {\n    Object.assign(DateAdapterBase.prototype, members);\n  }\n\n  readonly options: AnyObject;\n\n  constructor(options: AnyObject) {\n    this.options = options || {};\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  init() {}\n\n  formats(): Record<string, string> {\n    return abstract();\n  }\n\n  parse(): number | null {\n    return abstract();\n  }\n\n  format(): string {\n    return abstract();\n  }\n\n  add(): number {\n    return abstract();\n  }\n\n  diff(): number {\n    return abstract();\n  }\n\n  startOf(): number {\n    return abstract();\n  }\n\n  endOf(): number {\n    return abstract();\n  }\n}\n\nexport default {\n  _date: DateAdapterBase\n};\n","import {_lookupByKey, _rlookupByKey} from '../helpers/helpers.collection';\nimport {getRelativePosition} from '../helpers/helpers.dom';\nimport {_angleBetween, getAngleFromPoint} from '../helpers/helpers.math';\nimport {_isPointInArea} from '../helpers';\n\n/**\n * @typedef { import(\"./core.controller\").default } Chart\n * @typedef { import(\"../../types\").ChartEvent } ChartEvent\n * @typedef {{axis?: string, intersect?: boolean, includeInvisible?: boolean}} InteractionOptions\n * @typedef {{datasetIndex: number, index: number, element: import(\"./core.element\").default}} InteractionItem\n * @typedef { import(\"../../types\").Point } Point\n */\n\n/**\n * Helper function to do binary search when possible\n * @param {object} metaset - the dataset meta\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {number} value - the value to find\n * @param {boolean} [intersect] - should the element intersect\n * @returns {{lo:number, hi:number}} indices to search data array between\n */\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {controller, data, _sorted} = metaset;\n  const iScale = controller._cachedMeta.iScale;\n  if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      // _sharedOptions indicates that each element has equal options -> equal proportions\n      // So we can do a ranged binary search based on the range of first element and\n      // be confident to get the full range of indices that can intersect with the value.\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {lo: start.lo, hi: end.hi};\n      }\n    }\n  }\n  // Default to all elements, when binary search can not be used.\n  return {lo: 0, hi: data.length - 1};\n}\n\n/**\n * Helper function to select candidate elements for interaction\n * @param {Chart} chart - the chart\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {function} handler - the callback to execute for each visible item\n * @param {boolean} [intersect] - consider intersecting items\n */\nfunction evaluateInteractionItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {index, data} = metasets[i];\n    const {lo, hi} = binarySearch(metasets[i], axis, value, intersect);\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\n\n/**\n * Get a distance metric function for two points based on the\n * axis mode setting\n * @param {string} axis - the axis mode. x|y|xy|r\n */\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n\n  return function(pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\n\n/**\n * Helper function to get the items that intersect the event position\n * @param {Chart} chart - the chart\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n  const items = [];\n\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return items;\n  }\n\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n      return;\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position for a radial chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestRadialItems(chart, position, axis, useFinalPosition) {\n  let items = [];\n\n  function evaluationFunc(element, datasetIndex, index) {\n    const {startAngle, endAngle} = element.getProps(['startAngle', 'endAngle'], useFinalPosition);\n    const {angle} = getAngleFromPoint(element, {x: position.x, y: position.y});\n\n    if (_angleBetween(angle, startAngle, endAngle)) {\n      items.push({element, datasetIndex, index});\n    }\n  }\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position for a cartesian chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  let items = [];\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n\n  function evaluationFunc(element, datasetIndex, index) {\n    const inRange = element.inRange(position.x, position.y, useFinalPosition);\n    if (intersect && !inRange) {\n      return;\n    }\n\n    const center = element.getCenterPoint(useFinalPosition);\n    const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n    if (!pointInArea && !inRange) {\n      return;\n    }\n\n    const distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{element, datasetIndex, index}];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      // Can have multiple items at the same distance in which case we sort by size\n      items.push({element, datasetIndex, index});\n    }\n  }\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position considering all visible items in the chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return [];\n  }\n\n  return axis === 'r' && !intersect\n    ? getNearestRadialItems(chart, position, axis, useFinalPosition)\n    : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\n\n/**\n * Helper function to get the items matching along the given X or Y axis\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axis to match\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @return {InteractionItem[]} the nearest items\n */\nfunction getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n  const items = [];\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n\n  evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index) => {\n    if (element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n      intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n    }\n  });\n\n  // If we want to trigger on an intersect and we don't have any items\n  // that intersect the position, return nothing\n  if (intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\n\n/**\n * Contains interaction related functions\n * @namespace Chart.Interaction\n */\nexport default {\n  // Part of the public API to facilitate developers creating their own modes\n  evaluateInteractionItems,\n\n  // Helper function for different modes\n  modes: {\n    /**\n\t\t * Returns items at the same index. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect mode is false, we find the nearest item and return the items at the same index as that item\n\t\t * @function Chart.Interaction.modes.index\n\t\t * @since v2.4.0\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      // Default axis for index mode is 'x' to match old behaviour\n      const axis = options.axis || 'x';\n      const includeInvisible = options.includeInvisible || false;\n      const items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible)\n        : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n      const elements = [];\n\n      if (!items.length) {\n        return [];\n      }\n\n      chart.getSortedVisibleDatasetMetas().forEach((meta) => {\n        const index = items[0].index;\n        const element = meta.data[index];\n\n        // don't count items that are skipped (null data)\n        if (element && !element.skip) {\n          elements.push({element, datasetIndex: meta.index, index});\n        }\n      });\n\n      return elements;\n    },\n\n    /**\n\t\t * Returns items in the same dataset. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect is false, we find the nearest item and return the items in that dataset\n\t\t * @function Chart.Interaction.modes.dataset\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      let items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) :\n        getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (let i = 0; i < data.length; ++i) {\n          items.push({element: data[i], datasetIndex, index: i});\n        }\n      }\n\n      return items;\n    },\n\n    /**\n\t\t * Point mode returns all elements that hit test based on the event position\n\t\t * of the event\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n    },\n\n    /**\n\t\t * nearest mode returns the element closest to the point\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n    },\n\n    /**\n\t\t * x mode returns the elements that hit-test at the current x coordinate\n\t\t * @function Chart.Interaction.modes.x\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    x(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n    },\n\n    /**\n\t\t * y mode returns the elements that hit-test at the current y coordinate\n\t\t * @function Chart.Interaction.modes.y\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    y(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n    }\n  }\n};\n","import {defined, each, isObject} from '../helpers/helpers.core';\nimport {toPadding} from '../helpers/helpers.options';\n\n/**\n * @typedef { import(\"./core.controller\").default } Chart\n */\n\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\n\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\n\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\n\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ?\n      v0.index - v1.index :\n      v0.weight - v1.weight;\n  });\n}\n\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box, pos, stack, stackWeight;\n\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    ({position: pos, options: {stack, stackWeight = 1}} = box);\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos,\n      horizontal: box.isHorizontal(),\n      weight: box.weight,\n      stack: stack && (pos + stack),\n      stackWeight\n    });\n  }\n  return layoutBoxes;\n}\n\nfunction buildStacks(layouts) {\n  const stacks = {};\n  for (const wrap of layouts) {\n    const {stack, pos, stackWeight} = wrap;\n    if (!stack || !STATIC_POSITIONS.includes(pos)) {\n      continue;\n    }\n    const _stack = stacks[stack] || (stacks[stack] = {count: 0, placed: 0, weight: 0, size: 0});\n    _stack.count++;\n    _stack.weight += stackWeight;\n  }\n  return stacks;\n}\n\n/**\n * store dimensions used instead of available chartArea in fitBoxes\n **/\nfunction setLayoutDims(layouts, params) {\n  const stacks = buildStacks(layouts);\n  const {vBoxMaxWidth, hBoxMaxHeight} = params;\n  let i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    const {fullSize} = layout.box;\n    const stack = stacks[layout.stack];\n    const factor = stack && layout.stackWeight / stack.weight;\n    if (layout.horizontal) {\n      layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n      layout.height = hBoxMaxHeight;\n    } else {\n      layout.width = vBoxMaxWidth;\n      layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n    }\n  }\n  return stacks;\n}\n\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\n\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\n\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\n\nfunction updateDims(chartArea, params, layout, stacks) {\n  const {pos, box} = layout;\n  const maxPadding = chartArea.maxPadding;\n\n  // dynamically placed boxes size is not considered\n  if (!isObject(pos)) {\n    if (layout.size) {\n      // this layout was already counted for, lets first reduce old size\n      chartArea[pos] -= layout.size;\n    }\n    const stack = stacks[layout.stack] || {size: 0, count: 1};\n    stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n    layout.size = stack.size / stack.count;\n    chartArea[pos] += layout.size;\n  }\n\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n\n  // return booleans on the changes per direction\n  return layout.horizontal\n    ? {same: widthChanged, other: heightChanged}\n    : {same: heightChanged, other: widthChanged};\n}\n\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\n\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n\n  function marginForPositions(positions) {\n    const margin = {left: 0, top: 0, right: 0, bottom: 0};\n    positions.forEach((pos) => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n\n  return horizontal\n    ? marginForPositions(['left', 'right'])\n    : marginForPositions(['top', 'bottom']);\n}\n\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n\n    box.update(\n      layout.width || chartArea.w,\n      layout.height || chartArea.h,\n      getMargins(layout.horizontal, chartArea)\n    );\n    const {same, other} = updateDims(chartArea, params, layout, stacks);\n\n    // Dimensions changed and there were non full width boxes before this\n    // -> we have to refit those\n    refit |= same && refitBoxes.length;\n\n    // Chart area changed in the opposite direction\n    changed = changed || other;\n\n    if (!box.fullSize) { // fullSize boxes don't need to be re-fitted in any case\n      refitBoxes.push(layout);\n    }\n  }\n\n  return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\n\nfunction setBoxDims(box, left, top, width, height) {\n  box.top = top;\n  box.left = left;\n  box.right = left + width;\n  box.bottom = top + height;\n  box.width = width;\n  box.height = height;\n}\n\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n  const userPadding = params.padding;\n  let {x, y} = chartArea;\n\n  for (const layout of boxes) {\n    const box = layout.box;\n    const stack = stacks[layout.stack] || {count: 1, placed: 0, weight: 1};\n    const weight = (layout.stackWeight / stack.weight) || 1;\n    if (layout.horizontal) {\n      const width = chartArea.w * weight;\n      const height = stack.size || box.height;\n      if (defined(stack.start)) {\n        y = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n      } else {\n        setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n      }\n      stack.start = y;\n      stack.placed += width;\n      y = box.bottom;\n    } else {\n      const height = chartArea.h * weight;\n      const width = stack.size || box.width;\n      if (defined(stack.start)) {\n        x = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n      } else {\n        setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n      }\n      stack.start = x;\n      stack.placed += height;\n      x = box.right;\n    }\n  }\n\n  chartArea.x = x;\n  chartArea.y = y;\n}\n\n/**\n * @interface LayoutItem\n * @typedef {object} LayoutItem\n * @prop {string} position - The position of the item in the chart layout. Possible values are\n * 'left', 'top', 'right', 'bottom', and 'chartArea'\n * @prop {number} weight - The weight used to sort the item. Higher weights are further away from the chart area\n * @prop {boolean} fullSize - if true, and the item is horizontal, then push vertical boxes down\n * @prop {function} isHorizontal - returns true if the layout item is horizontal (ie. top or bottom)\n * @prop {function} update - Takes two parameters: width and height. Returns size of item\n * @prop {function} draw - Draws the element\n * @prop {function} [getPadding] -  Returns an object with padding on the edges\n * @prop {number} width - Width of item. Must be valid after update()\n * @prop {number} height - Height of item. Must be valid after update()\n * @prop {number} left - Left edge of the item. Set by layout system and cannot be used in update\n * @prop {number} top - Top edge of the item. Set by layout system and cannot be used in update\n * @prop {number} right - Right edge of the item. Set by layout system and cannot be used in update\n * @prop {number} bottom - Bottom edge of the item. Set by layout system and cannot be used in update\n */\n\n// The layout service is very self explanatory.  It's responsible for the layout within a chart.\n// Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need\n// It is this service's responsibility of carrying out that layout.\nexport default {\n\n  /**\n\t * Register a box to a chart.\n\t * A box is simply a reference to an object that requires layout. eg. Scales, Legend, Title.\n\t * @param {Chart} chart - the chart to use\n\t * @param {LayoutItem} item - the item to add to be laid out\n\t */\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n\n    // initialize item with default values\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    // @ts-ignore\n    item._layers = item._layers || function() {\n      return [{\n        z: 0,\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n\n    chart.boxes.push(item);\n  },\n\n  /**\n\t * Remove a layoutItem from a chart\n\t * @param {Chart} chart - the chart to remove the box from\n\t * @param {LayoutItem} layoutItem - the item to remove from the layout\n\t */\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n\n  /**\n\t * Sets (or updates) options on the given `item`.\n\t * @param {Chart} chart - the chart in which the item lives (or will be added to)\n\t * @param {LayoutItem} item - the item to configure with the given options\n\t * @param {object} options - the new item options.\n\t */\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n\n  /**\n\t * Fits boxes of the given chart into the given size by having each box measure itself\n\t * then running a fitting algorithm\n\t * @param {Chart} chart - the chart\n\t * @param {number} width - the width to fit into\n\t * @param {number} height - the height to fit into\n   * @param {number} minPadding - minimum padding required for each side of chart area\n\t */\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n\n    const padding = toPadding(chart.options.layout.padding);\n    const availableWidth = Math.max(width - padding.width, 0);\n    const availableHeight = Math.max(height - padding.height, 0);\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n\n    // Before any changes are made, notify boxes that an update is about to being\n    // This is used to clear any cached data (e.g. scale limits)\n    each(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n\n    // Essentially we now have any number of boxes on each of the 4 sides.\n    // Our canvas looks like the following.\n    // The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and\n    // B1 is the bottom axis\n    // There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays\n    // These locations are single-box locations only, when trying to register a chartArea location that is already taken,\n    // an error will be thrown.\n    //\n    // |----------------------------------------------------|\n    // |                  T1 (Full Width)                   |\n    // |----------------------------------------------------|\n    // |    |    |                 T2                  |    |\n    // |    |----|-------------------------------------|----|\n    // |    |    | C1 |                           | C2 |    |\n    // |    |    |----|                           |----|    |\n    // |    |    |                                     |    |\n    // | L1 | L2 |           ChartArea (C0)            | R1 |\n    // |    |    |                                     |    |\n    // |    |    |----|                           |----|    |\n    // |    |    | C3 |                           | C4 |    |\n    // |    |----|-------------------------------------|----|\n    // |    |    |                 B1                  |    |\n    // |----------------------------------------------------|\n    // |                  B2 (Full Width)                   |\n    // |----------------------------------------------------|\n    //\n\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) =>\n      wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n\n    const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n\n    // First fit the fullSize boxes, to reduce probability of re-fitting.\n    fitBoxes(boxes.fullSize, chartArea, params, stacks);\n\n    // Then fit vertical boxes\n    fitBoxes(verticalBoxes, chartArea, params, stacks);\n\n    // Then fit horizontal boxes\n    if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n      // if the area changed, re-fit vertical boxes\n      fitBoxes(verticalBoxes, chartArea, params, stacks);\n    }\n\n    handleMaxPadding(chartArea);\n\n    // Finally place the boxes to correct coordinates\n    placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n\n    // Move to opposite side of chart\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n\n    placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w,\n    };\n\n    // Finally update boxes in chartArea (radial scale for example)\n    each(boxes.chartArea, (layout) => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h, {left: 0, top: 0, right: 0, bottom: 0});\n    });\n  }\n};\n","\n/**\n * @typedef { import(\"../core/core.controller\").default } Chart\n */\n\n/**\n * Abstract class that allows abstracting platform dependencies away from the chart.\n */\nexport default class BasePlatform {\n  /**\n\t * Called at chart construction time, returns a context2d instance implementing\n\t * the [W3C Canvas 2D Context API standard]{@link https://www.w3.org/TR/2dcontext/}.\n\t * @param {HTMLCanvasElement} canvas - The canvas from which to acquire context (platform specific)\n\t * @param {number} [aspectRatio] - The chart options\n\t */\n  acquireContext(canvas, aspectRatio) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Called at chart destruction time, releases any resources associated to the context\n\t * previously returned by the acquireContext() method.\n\t * @param {CanvasRenderingContext2D} context - The context2d instance\n\t * @returns {boolean} true if the method succeeded, else false\n\t */\n  releaseContext(context) { // eslint-disable-line no-unused-vars\n    return false;\n  }\n\n  /**\n\t * Registers the specified listener on the given chart.\n\t * @param {Chart} chart - Chart from which to listen for event\n\t * @param {string} type - The ({@link ChartEvent}) type to listen for\n\t * @param {function} listener - Receives a notification (an object that implements\n\t * the {@link ChartEvent} interface) when an event of the specified type occurs.\n\t */\n  addEventListener(chart, type, listener) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Removes the specified listener previously registered with addEventListener.\n\t * @param {Chart} chart - Chart from which to remove the listener\n\t * @param {string} type - The ({@link ChartEvent}) type to remove\n\t * @param {function} listener - The listener function to remove from the event target.\n\t */\n  removeEventListener(chart, type, listener) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * @returns {number} the current devicePixelRatio of the device this platform is connected to.\n\t */\n  getDevicePixelRatio() {\n    return 1;\n  }\n\n  /**\n\t * Returns the maximum size in pixels of given canvas element.\n\t * @param {HTMLCanvasElement} element\n\t * @param {number} [width] - content width of parent element\n\t * @param {number} [height] - content height of parent element\n\t * @param {number} [aspectRatio] - aspect ratio to maintain\n\t */\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @returns {boolean} true if the canvas is attached to the platform, false if not.\n\t */\n  isAttached(canvas) { // eslint-disable-line no-unused-vars\n    return true;\n  }\n\n  /**\n   * Updates config with platform specific requirements\n   * @param {import(\"../core/core.config\").default} config\n   */\n  updateConfig(config) { // eslint-disable-line no-unused-vars\n    // no-op\n  }\n}\n","/**\n * Platform fallback implementation (minimal).\n * @see https://github.com/chartjs/Chart.js/pull/4591#issuecomment-319575939\n */\n\nimport BasePlatform from './platform.base';\n\n/**\n * Platform class for charts without access to the DOM or to many element properties\n * This platform is used by default for any chart passed an OffscreenCanvas.\n * @extends BasePlatform\n */\nexport default class BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    // To prevent canvas fingerprinting, some add-ons undefine the getContext\n    // method, for example: https://github.com/kkapsner/CanvasBlocker\n    // https://github.com/chartjs/Chart.js/issues/2807\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n  updateConfig(config) {\n    config.options.animation = false;\n  }\n}\n","/**\n * Chart.Platform implementation for targeting a web browser\n */\n\nimport BasePlatform from './platform.base';\nimport {_getParentNode, getRelativePosition, supportsEventListenerOptions, readUsedSize, getMaximumSize} from '../helpers/helpers.dom';\nimport {throttled} from '../helpers/helpers.extras';\nimport {isNullOrUndef} from '../helpers/helpers.core';\n\n/**\n * @typedef { import(\"../core/core.controller\").default } Chart\n */\n\nconst EXPANDO_KEY = '$chartjs';\n\n/**\n * DOM event types -> Chart.js event types.\n * Note: only events with different types are mapped.\n * @see https://developer.mozilla.org/en-US/docs/Web/Events\n */\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\n\nconst isNullOrEmpty = value => value === null || value === '';\n/**\n * Initializes the canvas style and render size without modifying the canvas display size,\n * since responsiveness is handled by the controller.resize() method. The config is used\n * to determine the aspect ratio to apply in case no explicit height has been specified.\n * @param {HTMLCanvasElement} canvas\n * @param {number} [aspectRatio]\n */\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n\n  // NOTE(SB) canvas.getAttribute('width') !== canvas.width: in the first case it\n  // returns null or '' if no explicit value has been set to the canvas attribute.\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n\n  // Chart.js modifies some canvas values that we want to restore on destroy\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n\n  // Force canvas to display as block to avoid extra space caused by inline\n  // elements, which would interfere with the responsive resize process.\n  // https://github.com/chartjs/Chart.js/issues/2538\n  style.display = style.display || 'block';\n  // Include possible borders in the size\n  style.boxSizing = style.boxSizing || 'border-box';\n\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = readUsedSize(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      // If no explicit render height and style height, let's apply the aspect ratio,\n      // which one can be specified by the user but also by charts as default option\n      // (i.e. options.aspectRatio). If not specified, use canvas aspect ratio of 2.\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = readUsedSize(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n\n  return canvas;\n}\n\n// Default passive to true as expected by Chrome for 'touchstart' and 'touchend' events.\n// https://github.com/chartjs/Chart.js/issues/4287\nconst eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\n\nfunction addListener(node, type, listener) {\n  node.addEventListener(type, listener, eventListenerOptions);\n}\n\nfunction removeListener(chart, type, listener) {\n  chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\n\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {x, y} = getRelativePosition(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null,\n  };\n}\n\nfunction nodeListContains(nodeList, canvas) {\n  for (const node of nodeList) {\n    if (node === canvas || node.contains(canvas)) {\n      return true;\n    }\n  }\n}\n\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\n\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\n\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\n\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\n\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\n\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\n\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const resize = throttled((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      // If the container size shrank during chart resize, let's assume\n      // scrollbar appeared. So we resize again with the scrollbar visible -\n      // effectively making chart smaller and the scrollbar hidden again.\n      // Because we are inside `throttled`, and currently `ticking`, scroll\n      // events are ignored during this whole 2 resize process.\n      // If we assumed wrong and something else happened, we are resizing\n      // twice in a frame (potential performance issue)\n      listener();\n    }\n  }, window);\n\n  // @ts-ignore until https://github.com/microsoft/TypeScript/issues/37861 implemented\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n    // When its container's display is set to 'none' the callback will be called with a\n    // size of (0, 0), which will cause the chart to lose its original height, so skip\n    // resizing in such case.\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n\n  return observer;\n}\n\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\n\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = throttled((event) => {\n    // This case can occur if the chart is destroyed while waiting\n    // for the throttled function to occur. We prevent crashes by checking\n    // for a destroyed chart\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart);\n\n  addListener(canvas, type, proxy);\n\n  return proxy;\n}\n\n/**\n * Platform class for charts that can access the DOM and global window/document properties\n * @extends BasePlatform\n */\nexport default class DomPlatform extends BasePlatform {\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @param {number} [aspectRatio]\n\t * @return {CanvasRenderingContext2D|null}\n\t */\n  acquireContext(canvas, aspectRatio) {\n    // To prevent canvas fingerprinting, some add-ons undefine the getContext\n    // method, for example: https://github.com/kkapsner/CanvasBlocker\n    // https://github.com/chartjs/Chart.js/issues/2807\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n\n    // `instanceof HTMLCanvasElement/CanvasRenderingContext2D` fails when the canvas is\n    // inside an iframe or when running in a protected environment. We could guess the\n    // types from their toString() value but let's keep things flexible and assume it's\n    // a sufficient condition if the canvas has a context2D which has canvas as `canvas`.\n    // https://github.com/chartjs/Chart.js/issues/3887\n    // https://github.com/chartjs/Chart.js/issues/4102\n    // https://github.com/chartjs/Chart.js/issues/4152\n    if (context && context.canvas === canvas) {\n      // Load platform resources on first chart creation, to make it possible to\n      // import the library before setting platform options.\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n\n    return null;\n  }\n\n  /**\n\t * @param {CanvasRenderingContext2D} context\n\t */\n  releaseContext(context) {\n    const canvas = context.canvas;\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach((prop) => {\n      const value = initial[prop];\n      if (isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n\n    const style = initial.style || {};\n    Object.keys(style).forEach((key) => {\n      canvas.style[key] = style[key];\n    });\n\n    // The canvas render size might have been changed (and thus the state stack discarded),\n    // we can't use save() and restore() to restore the initial state. So make sure that at\n    // least the canvas context is reset to the default state by setting the canvas width.\n    // https://www.w3.org/TR/2011/WD-html5-20110525/the-canvas-element.html\n    // eslint-disable-next-line no-self-assign\n    canvas.width = canvas.width;\n\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n\n  /**\n\t *\n\t * @param {Chart} chart\n\t * @param {string} type\n\t * @param {function} listener\n\t */\n  addEventListener(chart, type, listener) {\n    // Can have only one listener per type, so make sure previous is removed\n    this.removeEventListener(chart, type);\n\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n\n\n  /**\n\t * @param {Chart} chart\n\t * @param {string} type\n\t */\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n\n    if (!proxy) {\n      return;\n    }\n\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @param {number} [width] - content width of parent element\n\t * @param {number} [height] - content height of parent element\n\t * @param {number} [aspectRatio] - aspect ratio to maintain\n\t */\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return getMaximumSize(canvas, width, height, aspectRatio);\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t */\n  isAttached(canvas) {\n    const container = _getParentNode(canvas);\n    return !!(container && container.isConnected);\n  }\n}\n","import {_isDomSupported} from '../helpers';\nimport BasePlatform from './platform.base';\nimport BasicPlatform from './platform.basic';\nimport DomPlatform from './platform.dom';\n\nexport function _detectPlatform(canvas) {\n  if (!_isDomSupported() || (typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas)) {\n    return BasicPlatform;\n  }\n  return DomPlatform;\n}\n\nexport {BasePlatform, BasicPlatform, DomPlatform};\n","import type {AnyObject} from '../../types/basic';\nimport type {Point} from '../../types/geometric';\nimport type {Animation} from '../../types/animation';\nimport {isNumber} from '../helpers/helpers.math';\n\nexport default class Element<T = AnyObject, O = AnyObject> {\n\n  static defaults = {};\n  static defaultRoutes = undefined;\n\n  x: number;\n  y: number;\n  active = false;\n  options: O;\n  $animations: Record<keyof T, Animation>;\n\n  tooltipPosition(useFinalPosition: boolean): Point {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y} as Point;\n  }\n\n  hasValue() {\n    return isNumber(this.x) && isNumber(this.y);\n  }\n\n  /**\n   * Gets the current or final value of each prop. Can return extra properties (whole object).\n   * @param props - properties to get\n   * @param [final] - get the final value (animation target)\n   */\n  getProps<P extends (keyof T)[]>(props: P, final?: boolean): Pick<T, P[number]>;\n  getProps<P extends string>(props: P[], final?: boolean): Partial<Record<P, unknown>>;\n  getProps(props: string[], final?: boolean): Partial<Record<string, unknown>> {\n    const anims = this.$animations;\n    if (!final || !anims) {\n      // let's not create an object, if not needed\n      return this as Record<string, unknown>;\n    }\n    const ret: Record<string, unknown> = {};\n    props.forEach((prop) => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop as string];\n    });\n    return ret;\n  }\n}\n","import {isNullOrUndef, valueOrDefault} from '../helpers/helpers.core';\nimport {_factorize} from '../helpers/helpers.math';\n\n\n/**\n * @typedef { import(\"./core.controller\").default } Chart\n * @typedef {{value:number | string, label?:string, major?:boolean, $context?:any}} Tick\n */\n\n/**\n * Returns a subset of ticks to be plotted to avoid overlapping labels.\n * @param {import('./core.scale').default} scale\n * @param {Tick[]} ticks\n * @return {Tick[]}\n * @private\n */\nexport function autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const determinedMaxTicks = determineMaxTicks(scale);\n  const ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n\n  // If there are too many major ticks to display them all\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\n\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n  const tickLength = scale._tickSize();\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\n\n/**\n * @param {number[]} majorIndices\n * @param {Tick[]} ticks\n * @param {number} ticksLimit\n */\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n\n  // If the major ticks are evenly spaced apart, place the minor ticks\n  // so that they divide the major ticks into even chunks\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n\n  const factors = _factorize(evenMajorSpacing);\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\n\n/**\n * @param {Tick[]} ticks\n */\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\n\n/**\n * @param {Tick[]} ticks\n * @param {Tick[]} newTicks\n * @param {number[]} majorIndices\n * @param {number} spacing\n */\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\n\n/**\n * @param {Tick[]} ticks\n * @param {Tick[]} newTicks\n * @param {number} spacing\n * @param {number} [majorStart]\n * @param {number} [majorEnd]\n */\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = valueOrDefault(majorStart, 0);\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n\n  next = start;\n\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\n\n\n/**\n * @param {number[]} arr\n */\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n\n  if (len < 2) {\n    return false;\n  }\n\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\n","import Element from './core.element';\nimport {_alignPixel, _measureText, renderText, clipArea, unclipArea} from '../helpers/helpers.canvas';\nimport {callback as call, each, finiteOrDefault, isArray, isFinite, isNullOrUndef, isObject, valueOrDefault} from '../helpers/helpers.core';\nimport {toDegrees, toRadians, _int16Range, _limitValue, HALF_PI} from '../helpers/helpers.math';\nimport {_alignStartEnd, _toLeftRightCenter} from '../helpers/helpers.extras';\nimport {createContext, toFont, toPadding, _addGrace} from '../helpers/helpers.options';\nimport {autoSkip} from './core.scale.autoskip';\n\nconst reverseAlign = (align) => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\n\n/**\n * @typedef { import(\"./core.controller\").default } Chart\n * @typedef {{value:number | string, label?:string, major?:boolean, $context?:any}} Tick\n */\n\n/**\n * Returns a new array containing numItems from arr\n * @param {any[]} arr\n * @param {number} numItems\n */\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\n\n/**\n * @param {Scale} scale\n * @param {number} index\n * @param {boolean} offsetGridLines\n */\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6; // 1e-6 is margin in pixels for accumulated error.\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n\n    // Return undefined if the pixel is out of the range\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\n\n/**\n * @param {object} caches\n * @param {number} length\n */\nfunction garbageCollect(caches, length) {\n  each(caches, (cache) => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\n\n/**\n * @param {object} options\n */\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\n\n/**\n * @param {object} options\n */\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n\n  const font = toFont(options.font, fallback);\n  const padding = toPadding(options.padding);\n  const lines = isArray(options.text) ? options.text.length : 1;\n\n  return (lines * font.lineHeight) + padding.height;\n}\n\nfunction createScaleContext(parent, scale) {\n  return createContext(parent, {\n    scale,\n    type: 'scale'\n  });\n}\n\nfunction createTickContext(parent, index, tick) {\n  return createContext(parent, {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\n\nfunction titleAlign(align, position, reverse) {\n  let ret = _toLeftRightCenter(align);\n  if ((reverse && position !== 'right') || (!reverse && position === 'right')) {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\n\nfunction titleArgs(scale, offset, position, align) {\n  const {top, left, bottom, right, chart} = scale;\n  const {chartArea, scales} = chart;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n  const height = bottom - top;\n  const width = right - left;\n\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n    } else if (position === 'center') {\n      titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n    } else {\n      titleY = offsetFromEdge(scale, position, offset);\n    }\n    maxWidth = right - left;\n  } else {\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n    } else if (position === 'center') {\n      titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n    } else {\n      titleX = offsetFromEdge(scale, position, offset);\n    }\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n  return {titleX, titleY, maxWidth, rotation};\n}\n\nexport default class Scale extends Element {\n\n  // eslint-disable-next-line max-statements\n  constructor(cfg) {\n    super();\n\n    /** @type {string} */\n    this.id = cfg.id;\n    /** @type {string} */\n    this.type = cfg.type;\n    /** @type {any} */\n    this.options = undefined;\n    /** @type {CanvasRenderingContext2D} */\n    this.ctx = cfg.ctx;\n    /** @type {Chart} */\n    this.chart = cfg.chart;\n\n    // implements box\n    /** @type {number} */\n    this.top = undefined;\n    /** @type {number} */\n    this.bottom = undefined;\n    /** @type {number} */\n    this.left = undefined;\n    /** @type {number} */\n    this.right = undefined;\n    /** @type {number} */\n    this.width = undefined;\n    /** @type {number} */\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    /** @type {number} */\n    this.maxWidth = undefined;\n    /** @type {number} */\n    this.maxHeight = undefined;\n    /** @type {number} */\n    this.paddingTop = undefined;\n    /** @type {number} */\n    this.paddingBottom = undefined;\n    /** @type {number} */\n    this.paddingLeft = undefined;\n    /** @type {number} */\n    this.paddingRight = undefined;\n\n    // scale-specific properties\n    /** @type {string=} */\n    this.axis = undefined;\n    /** @type {number=} */\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this._range = undefined;\n    /** @type {Tick[]} */\n    this.ticks = [];\n    /** @type {object[]|null} */\n    this._gridLineItems = null;\n    /** @type {object[]|null} */\n    this._labelItems = null;\n    /** @type {object|null} */\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    /** @type {number} */\n    this._startPixel = undefined;\n    /** @type {number} */\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n\n  /**\n\t * @param {any} options\n\t * @since 3.0\n\t */\n  init(options) {\n    this.options = options.setContext(this.getContext());\n\n    this.axis = options.axis;\n\n    // parse min/max value, so we can properly determine min/max for other scales\n    this._userMin = this.parse(options.min);\n    this._userMax = this.parse(options.max);\n    this._suggestedMin = this.parse(options.suggestedMin);\n    this._suggestedMax = this.parse(options.suggestedMax);\n  }\n\n  /**\n\t * Parse a supported input value to internal representation.\n\t * @param {*} raw\n\t * @param {number} [index]\n\t * @since 3.0\n\t */\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    return raw;\n  }\n\n  /**\n\t * @return {{min: number, max: number, minDefined: boolean, maxDefined: boolean}}\n\t * @protected\n\t * @since 3.0\n\t */\n  getUserBounds() {\n    let {_userMin, _userMax, _suggestedMin, _suggestedMax} = this;\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: finiteOrDefault(_userMin, _suggestedMin),\n      max: finiteOrDefault(_userMax, _suggestedMax),\n      minDefined: isFinite(_userMin),\n      maxDefined: isFinite(_userMax)\n    };\n  }\n\n  /**\n\t * @param {boolean} canStack\n\t * @return {{min: number, max: number}}\n\t * @protected\n\t * @since 3.0\n\t */\n  getMinMax(canStack) {\n    // eslint-disable-next-line prefer-const\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n    let range;\n\n    if (minDefined && maxDefined) {\n      return {min, max};\n    }\n\n    const metas = this.getMatchingVisibleMetas();\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(this, canStack);\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n\n    // Make sure min <= max when only min or max is defined by user and the data is outside that range\n    min = maxDefined && min > max ? max : min;\n    max = minDefined && min > max ? min : max;\n\n    return {\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\n    };\n  }\n\n  /**\n\t * Get the padding needed for the scale\n\t * @return {{top: number, left: number, bottom: number, right: number}} the necessary padding\n\t * @private\n\t */\n  getPadding() {\n    return {\n      left: this.paddingLeft || 0,\n      top: this.paddingTop || 0,\n      right: this.paddingRight || 0,\n      bottom: this.paddingBottom || 0\n    };\n  }\n\n  /**\n\t * Returns the scale tick objects\n\t * @return {Tick[]}\n\t * @since 2.7\n\t */\n  getTicks() {\n    return this.ticks;\n  }\n\n  /**\n\t * @return {string[]}\n\t */\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n\n  // When a new layout is created, reset the data limits cache\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n\n  // These methods are ordered by lifecycle. Utilities then follow.\n  // Any function defined here is inherited by all scale types.\n  // Any function can be extended by the scale type\n\n  beforeUpdate() {\n    call(this.options.beforeUpdate, [this]);\n  }\n\n  /**\n\t * @param {number} maxWidth - the max width in pixels\n\t * @param {number} maxHeight - the max height in pixels\n\t * @param {{top: number, left: number, bottom: number, right: number}} margins - the space between the edge of the other scales and edge of the chart\n\t *   This space comes from two sources:\n\t *     - padding - space that's required to show the labels at the edges of the scale\n\t *     - thickness of scales or legends in another orientation\n\t */\n  update(maxWidth, maxHeight, margins) {\n    const {beginAtZero, grace, ticks: tickOpts} = this.options;\n    const sampleSize = tickOpts.sampleSize;\n\n    // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n    this.beforeUpdate();\n\n    // Absorb the master measurements\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n\n    this.ticks = null;\n    this._labelSizes = null;\n    this._gridLineItems = null;\n    this._labelItems = null;\n\n    // Dimensions\n    this.beforeSetDimensions();\n    this.setDimensions();\n    this.afterSetDimensions();\n\n    this._maxLength = this.isHorizontal()\n      ? this.width + margins.left + margins.right\n      : this.height + margins.top + margins.bottom;\n\n    // Data min/max\n    if (!this._dataLimitsCached) {\n      this.beforeDataLimits();\n      this.determineDataLimits();\n      this.afterDataLimits();\n      this._range = _addGrace(this, grace, beginAtZero);\n      this._dataLimitsCached = true;\n    }\n\n    this.beforeBuildTicks();\n\n    this.ticks = this.buildTicks() || [];\n\n    // Allow modification of ticks in callback.\n    this.afterBuildTicks();\n\n    // Compute tick rotation and fit using a sampled subset of labels\n    // We generally don't need to compute the size of every single label for determining scale size\n    const samplingEnabled = sampleSize < this.ticks.length;\n    this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n\n    // configure is called twice, once here, once from core.controller.updateLayout.\n    // Here we haven't been positioned yet, but dimensions are correct.\n    // Variables set in configure are needed for calculateLabelRotation, and\n    // it's ok that coordinates are not correct there, only dimensions matter.\n    this.configure();\n\n    // Tick Rotation\n    this.beforeCalculateLabelRotation();\n    this.calculateLabelRotation(); // Preconditions: number of ticks and sizes of largest labels must be calculated beforehand\n    this.afterCalculateLabelRotation();\n\n    // Auto-skip\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      this.ticks = autoSkip(this, this.ticks);\n      this._labelSizes = null;\n      this.afterAutoSkip();\n    }\n\n    if (samplingEnabled) {\n      // Generate labels using all non-skipped ticks\n      this._convertTicksToLabels(this.ticks);\n    }\n\n    this.beforeFit();\n    this.fit(); // Preconditions: label rotation and label sizes must be calculated beforehand\n    this.afterFit();\n\n    // IMPORTANT: after this point, we consider that `this.ticks` will NEVER change!\n\n    this.afterUpdate();\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    let reversePixels = this.options.reverse;\n    let startPixel, endPixel;\n\n    if (this.isHorizontal()) {\n      startPixel = this.left;\n      endPixel = this.right;\n    } else {\n      startPixel = this.top;\n      endPixel = this.bottom;\n      // by default vertical scales are from bottom to top, so pixels are reversed\n      reversePixels = !reversePixels;\n    }\n    this._startPixel = startPixel;\n    this._endPixel = endPixel;\n    this._reversePixels = reversePixels;\n    this._length = endPixel - startPixel;\n    this._alignToPixels = this.options.alignToPixels;\n  }\n\n  afterUpdate() {\n    call(this.options.afterUpdate, [this]);\n  }\n\n  //\n\n  beforeSetDimensions() {\n    call(this.options.beforeSetDimensions, [this]);\n  }\n  setDimensions() {\n    // Set the unconstrained dimension before label rotation\n    if (this.isHorizontal()) {\n      // Reset position before calculating rotation\n      this.width = this.maxWidth;\n      this.left = 0;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n\n      // Reset position before calculating rotation\n      this.top = 0;\n      this.bottom = this.height;\n    }\n\n    // Reset padding\n    this.paddingLeft = 0;\n    this.paddingTop = 0;\n    this.paddingRight = 0;\n    this.paddingBottom = 0;\n  }\n  afterSetDimensions() {\n    call(this.options.afterSetDimensions, [this]);\n  }\n\n  _callHooks(name) {\n    this.chart.notifyPlugins(name, this.getContext());\n    call(this.options[name], [this]);\n  }\n\n  // Data limits\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n  determineDataLimits() {}\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n\n  //\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n  /**\n\t * @return {object[]} the ticks\n\t */\n  buildTicks() {\n    return [];\n  }\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n\n  beforeTickToLabelConversion() {\n    call(this.options.beforeTickToLabelConversion, [this]);\n  }\n  /**\n\t * Convert ticks to label strings\n\t * @param {Tick[]} ticks\n\t */\n  generateTickLabels(ticks) {\n    const tickOpts = this.options.ticks;\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = call(tickOpts.callback, [tick.value, i, ticks], this);\n    }\n  }\n  afterTickToLabelConversion() {\n    call(this.options.afterTickToLabelConversion, [this]);\n  }\n\n  //\n\n  beforeCalculateLabelRotation() {\n    call(this.options.beforeCalculateLabelRotation, [this]);\n  }\n  calculateLabelRotation() {\n    const options = this.options;\n    const tickOpts = options.ticks;\n    const numTicks = this.ticks.length;\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n\n    if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n      this.labelRotation = minRotation;\n      return;\n    }\n\n    const labelSizes = this._getLabelSizes();\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n\n    // Estimate the width of each grid based on the canvas width, the maximum\n    // label width and the number of tick intervals\n    const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n    tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n\n    // Allow 3 pixels x2 padding either side for label readability\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = this.maxHeight - getTickMarkLength(options.grid)\n\t\t\t\t- tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = toDegrees(Math.min(\n        Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)),\n        Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))\n      ));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n\n    this.labelRotation = labelRotation;\n  }\n  afterCalculateLabelRotation() {\n    call(this.options.afterCalculateLabelRotation, [this]);\n  }\n  afterAutoSkip() {}\n\n  //\n\n  beforeFit() {\n    call(this.options.beforeFit, [this]);\n  }\n  fit() {\n    // Reset\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n\n    const {chart, options: {ticks: tickOpts, title: titleOpts, grid: gridOpts}} = this;\n    const display = this._isVisible();\n    const isHorizontal = this.isHorizontal();\n\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n      if (isHorizontal) {\n        minSize.width = this.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = this.maxHeight; // fill all the height\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n\n      // Don't bother fitting the ticks if we are not showing the labels\n      if (tickOpts.display && this.ticks.length) {\n        const {first, last, widest, highest} = this._getLabelSizes();\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = toRadians(this.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n\n        if (isHorizontal) {\n        // A horizontal axis is more constrained by the height.\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n        // A vertical axis is more constrained by the width. Labels are the\n        // dominant factor here, so get that length first and account for padding\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n\n          minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n        this._calculatePadding(first, last, sin, cos);\n      }\n    }\n\n    this._handleMargins();\n\n    if (isHorizontal) {\n      this.width = this._length = chart.width - this._margins.left - this._margins.right;\n      this.height = minSize.height;\n    } else {\n      this.width = minSize.width;\n      this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n    }\n  }\n\n  _calculatePadding(first, last, sin, cos) {\n    const {ticks: {align, padding}, position} = this.options;\n    const isRotated = this.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n\n    if (this.isHorizontal()) {\n      const offsetLeft = this.getPixelForTick(0) - this.left;\n      const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n\n      // Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned\n      // which means that the right padding is dominated by the font height\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else if (align !== 'inner') {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n\n      // Adjust padding taking into account changes in offsets\n      this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n      this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n\n      this.paddingTop = paddingTop + padding;\n      this.paddingBottom = paddingBottom + padding;\n    }\n  }\n\n  /**\n\t * Handle margins and padding interactions\n\t * @private\n\t */\n  _handleMargins() {\n    if (this._margins) {\n      this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n      this._margins.top = Math.max(this.paddingTop, this._margins.top);\n      this._margins.right = Math.max(this.paddingRight, this._margins.right);\n      this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n    }\n  }\n\n  afterFit() {\n    call(this.options.afterFit, [this]);\n  }\n\n  // Shared Methods\n  /**\n\t * @return {boolean}\n\t */\n  isHorizontal() {\n    const {axis, position} = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n  /**\n\t * @return {boolean}\n\t */\n  isFullSize() {\n    return this.options.fullSize;\n  }\n\n  /**\n\t * @param {Tick[]} ticks\n\t * @private\n\t */\n  _convertTicksToLabels(ticks) {\n    this.beforeTickToLabelConversion();\n\n    this.generateTickLabels(ticks);\n\n    // Ticks should be skipped when callback returns null or undef, so lets remove those.\n    let i, ilen;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      if (isNullOrUndef(ticks[i].label)) {\n        ticks.splice(i, 1);\n        ilen--;\n        i--;\n      }\n    }\n\n    this.afterTickToLabelConversion();\n  }\n\n  /**\n\t * @return {{ first: object, last: object, widest: object, highest: object, widths: Array, heights: array }}\n\t * @private\n\t */\n  _getLabelSizes() {\n    let labelSizes = this._labelSizes;\n\n    if (!labelSizes) {\n      const sampleSize = this.options.ticks.sampleSize;\n      let ticks = this.ticks;\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n\n      this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length);\n    }\n\n    return labelSizes;\n  }\n\n  /**\n\t * Returns {width, height, offset} objects for the first, last, widest, highest tick\n\t * labels where offset indicates the anchor point offset from the top in pixels.\n\t * @return {{ first: object, last: object, widest: object, highest: object, widths: Array, heights: array }}\n\t * @private\n\t */\n  _computeLabelSizes(ticks, length) {\n    const {ctx, _longestTextCache: caches} = this;\n    const widths = [];\n    const heights = [];\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n\n    for (i = 0; i < length; ++i) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {data: {}, gc: []};\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n      // Undefined labels and arrays should not be measured\n      if (!isNullOrUndef(label) && !isArray(label)) {\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (isArray(label)) {\n        // if it is an array let's measure each element\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = label[j];\n          // Undefined labels and arrays should not be measured\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n    garbageCollect(caches, length);\n\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n\n    const valueAt = (idx) => ({width: widths[idx] || 0, height: heights[idx] || 0});\n\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest),\n      widths,\n      heights,\n    };\n  }\n\n  /**\n\t * Used to get the label to display in the tooltip for the given value\n\t * @param {*} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    return value;\n  }\n\n  /**\n\t * Returns the location of the given data point. Value can either be an index or a numerical value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {*} value\n\t * @param {number} [index]\n\t * @return {number}\n\t */\n  getPixelForValue(value, index) { // eslint-disable-line no-unused-vars\n    return NaN;\n  }\n\n  /**\n\t * Used to get the data value from a given pixel. This is the inverse of getPixelForValue\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} pixel\n\t * @return {*}\n\t */\n  getValueForPixel(pixel) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Returns the location of the tick at the given index\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} index\n\t * @return {number}\n\t */\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n\n  /**\n\t * Utility for getting the pixel location of a percentage of scale\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} decimal\n\t * @return {number}\n\t */\n  getPixelForDecimal(decimal) {\n    if (this._reversePixels) {\n      decimal = 1 - decimal;\n    }\n\n    const pixel = this._startPixel + decimal * this._length;\n    return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n\n  /**\n\t * Returns the pixel for the minimum chart value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @return {number}\n\t */\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n\n  /**\n\t * @return {number}\n\t */\n  getBaseValue() {\n    const {min, max} = this;\n\n    return min < 0 && max < 0 ? max :\n      min > 0 && max > 0 ? min :\n      0;\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext(index) {\n    const ticks = this.ticks || [];\n\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context ||\n\t\t\t\t(tick.$context = createTickContext(this.getContext(), index, tick));\n    }\n    return this.$context ||\n\t\t\t(this.$context = createScaleContext(this.chart.getContext(), this));\n  }\n\n  /**\n\t * @return {number}\n\t * @private\n\t */\n  _tickSize() {\n    const optionTicks = this.options.ticks;\n\n    // Calculate space needed by label in axis direction.\n    const rot = toRadians(this.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n\n    const labelSizes = this._getLabelSizes();\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n\n    // Calculate space needed for 1 tick in axis direction.\n    return this.isHorizontal()\n      ? h * cos > w * sin ? w / cos : h / sin\n      : h * sin < w * cos ? h / cos : w / sin;\n  }\n\n  /**\n\t * @return {boolean}\n\t * @private\n\t */\n  _isVisible() {\n    const display = this.options.display;\n\n    if (display !== 'auto') {\n      return !!display;\n    }\n\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeGridLineItems(chartArea) {\n    const axis = this.axis;\n    const chart = this.chart;\n    const options = this.options;\n    const {grid, position, border} = options;\n    const offset = grid.offset;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n\n    const borderOpts = border.setContext(this.getContext());\n    const axisWidth = borderOpts.display ? borderOpts.width : 0;\n    const axisHalfWidth = axisWidth / 2;\n    const alignBorderValue = function(pixel) {\n      return _alignPixel(chart, pixel, axisWidth);\n    };\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n\n    if (position === 'top') {\n      borderValue = alignBorderValue(this.bottom);\n      ty1 = this.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(this.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = this.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(this.right);\n      tx1 = this.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(this.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = this.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n\n    const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n    const step = Math.max(1, Math.ceil(ticksLength / limit));\n    for (i = 0; i < ticksLength; i += step) {\n      const context = this.getContext(i);\n      const optsAtIndex = grid.setContext(context);\n      const optsAtIndexBorder = border.setContext(context);\n\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = optsAtIndexBorder.dash || [];\n      const borderDashOffset = optsAtIndexBorder.dashOffset;\n\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n\n      lineValue = getPixelForGridLine(this, i, offset);\n\n      // Skip if the pixel is out of the range\n      if (lineValue === undefined) {\n        continue;\n      }\n\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset,\n      });\n    }\n\n    this._ticksLength = ticksLength;\n    this._borderValue = borderValue;\n\n    return items;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeLabelItems(chartArea) {\n    const axis = this.axis;\n    const options = this.options;\n    const {position, ticks: optionTicks} = options;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const {align, crossAlign, padding, mirror} = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\n    const rotation = -toRadians(this.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n\n    if (position === 'top') {\n      y = this.bottom - hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = this.top + hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = ((chartArea.top + chartArea.bottom) / 2) + tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = ((chartArea.left + chartArea.right) / 2) - tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        x = this.chart.scales[positionAxisID].getPixelForValue(value);\n      }\n      textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n    }\n\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n\n    const labelSizes = this._getLabelSizes();\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n\n      const optsAtIndex = optionTicks.setContext(this.getContext(i));\n      pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n      font = this._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = isArray(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n      let tickTextAlign = textAlign;\n\n      if (isHorizontal) {\n        x = pixel;\n\n        if (textAlign === 'inner') {\n          if (i === ilen - 1) {\n            tickTextAlign = !this.options.reverse ? 'right' : 'left';\n          } else if (i === 0) {\n            tickTextAlign = !this.options.reverse ? 'left' : 'right';\n          } else {\n            tickTextAlign = 'center';\n          }\n        }\n\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          // eslint-disable-next-line no-lonely-if\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n        if (mirror) {\n          textOffset *= -1;\n        }\n        if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) {\n          x += (lineHeight / 2) * Math.sin(rotation);\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n\n      let backdrop;\n\n      if (optsAtIndex.showLabelBackdrop) {\n        const labelPadding = toPadding(optsAtIndex.backdropPadding);\n        const height = labelSizes.heights[i];\n        const width = labelSizes.widths[i];\n\n        let top = textOffset - labelPadding.top;\n        let left = 0 - labelPadding.left;\n\n        switch (textBaseline) {\n        case 'middle':\n          top -= height / 2;\n          break;\n        case 'bottom':\n          top -= height;\n          break;\n        default:\n          break;\n        }\n\n        switch (textAlign) {\n        case 'center':\n          left -= width / 2;\n          break;\n        case 'right':\n          left -= width;\n          break;\n        default:\n          break;\n        }\n\n        backdrop = {\n          left,\n          top,\n          width: width + labelPadding.width,\n          height: height + labelPadding.height,\n\n          color: optsAtIndex.backdropColor,\n        };\n      }\n\n      items.push({\n        rotation,\n        label,\n        font,\n        color,\n        strokeColor,\n        strokeWidth,\n        textOffset,\n        textAlign: tickTextAlign,\n        textBaseline,\n        translation: [x, y],\n        backdrop,\n      });\n    }\n\n    return items;\n  }\n\n  _getXAxisLabelAlignment() {\n    const {position, ticks} = this.options;\n    const rotation = -toRadians(this.labelRotation);\n\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n\n    let align = 'center';\n\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    } else if (ticks.align === 'inner') {\n      align = 'inner';\n    }\n\n    return align;\n  }\n\n  _getYAxisLabelAlignment(tl) {\n    const {position, ticks: {crossAlign, mirror, padding}} = this.options;\n    const labelSizes = this._getLabelSizes();\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n\n    let textAlign;\n    let x;\n\n    if (position === 'left') {\n      if (mirror) {\n        x = this.right + padding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += (widest / 2);\n        } else {\n          textAlign = 'right';\n          x += widest;\n        }\n      } else {\n        x = this.right - tickAndPadding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x = this.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        x = this.left + padding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x -= widest;\n        }\n      } else {\n        x = this.left + tickAndPadding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = this.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n\n    return {textAlign, x};\n  }\n\n  /**\n\t * @private\n\t */\n  _computeLabelArea() {\n    if (this.options.ticks.mirror) {\n      return;\n    }\n\n    const chart = this.chart;\n    const position = this.options.position;\n\n    if (position === 'left' || position === 'right') {\n      return {top: 0, left: this.left, bottom: chart.height, right: this.right};\n    } if (position === 'top' || position === 'bottom') {\n      return {top: this.top, left: 0, bottom: this.bottom, right: chart.width};\n    }\n  }\n\n  /**\n   * @protected\n   */\n  drawBackground() {\n    const {ctx, options: {backgroundColor}, left, top, width, height} = this;\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n\n  getLineWidthForValue(value) {\n    const grid = this.options.grid;\n    if (!this._isVisible() || !grid.display) {\n      return 0;\n    }\n    const ticks = this.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n    if (index >= 0) {\n      const opts = grid.setContext(this.getContext(index));\n      return opts.lineWidth;\n    }\n    return 0;\n  }\n\n  /**\n\t * @protected\n\t */\n  drawGrid(chartArea) {\n    const grid = this.options.grid;\n    const ctx = this.ctx;\n    const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n    let i, ilen;\n\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n\n        if (grid.drawOnChartArea) {\n          drawLine(\n            {x: item.x1, y: item.y1},\n            {x: item.x2, y: item.y2},\n            item\n          );\n        }\n\n        if (grid.drawTicks) {\n          drawLine(\n            {x: item.tx1, y: item.ty1},\n            {x: item.tx2, y: item.ty2},\n            {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            }\n          );\n        }\n      }\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBorder() {\n    const {chart, ctx, options: {border, grid}} = this;\n    const borderOpts = border.setContext(this.getContext());\n    const axisWidth = border.display ? borderOpts.width : 0;\n    if (!axisWidth) {\n      return;\n    }\n    const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n    const borderValue = this._borderValue;\n    let x1, x2, y1, y2;\n\n    if (this.isHorizontal()) {\n      x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n      x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n      y1 = y2 = borderValue;\n    } else {\n      y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n      y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n      x1 = x2 = borderValue;\n    }\n    ctx.save();\n    ctx.lineWidth = borderOpts.width;\n    ctx.strokeStyle = borderOpts.color;\n\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n\n    ctx.restore();\n  }\n\n  /**\n\t * @protected\n\t */\n  drawLabels(chartArea) {\n    const optionTicks = this.options.ticks;\n\n    if (!optionTicks.display) {\n      return;\n    }\n\n    const ctx = this.ctx;\n\n    const area = this._computeLabelArea();\n    if (area) {\n      clipArea(ctx, area);\n    }\n\n    const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n    let i, ilen;\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      const item = items[i];\n      const tickFont = item.font;\n      const label = item.label;\n\n      let y = item.textOffset;\n      renderText(ctx, label, 0, y, tickFont, item);\n    }\n\n    if (area) {\n      unclipArea(ctx);\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {\n    const {ctx, options: {position, title, reverse}} = this;\n\n    if (!title.display) {\n      return;\n    }\n\n    const font = toFont(title.font);\n    const padding = toPadding(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n\n    if (position === 'bottom' || position === 'center' || isObject(position)) {\n      offset += padding.bottom;\n      if (isArray(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n\n    const {titleX, titleY, maxWidth, rotation} = titleArgs(this, offset, position, align);\n\n    renderText(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n\n  draw(chartArea) {\n    if (!this._isVisible()) {\n      return;\n    }\n\n    this.drawBackground();\n    this.drawGrid(chartArea);\n    this.drawBorder();\n    this.drawTitle();\n    this.drawLabels(chartArea);\n  }\n\n  /**\n\t * @return {object[]}\n\t * @private\n\t */\n  _layers() {\n    const opts = this.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n    const bz = valueOrDefault(opts.border && opts.border.z, 0);\n\n    if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n      // backward compatibility: draw has been overridden by custom scale\n      return [{\n        z: tz,\n        draw: (chartArea) => {\n          this.draw(chartArea);\n        }\n      }];\n    }\n\n    return [{\n      z: gz,\n      draw: (chartArea) => {\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawTitle();\n      }\n    }, {\n      z: bz,\n      draw: () => {\n        this.drawBorder();\n      }\n    }, {\n      z: tz,\n      draw: (chartArea) => {\n        this.drawLabels(chartArea);\n      }\n    }];\n  }\n\n  /**\n\t * Returns visible dataset metas that are attached to this scale\n\t * @param {string} [type] - if specified, also filter by dataset type\n\t * @return {object[]}\n\t */\n  getMatchingVisibleMetas(type) {\n    const metas = this.chart.getSortedVisibleDatasetMetas();\n    const axisID = this.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n      if (meta[axisID] === this.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n\n  /**\n\t * @param {number} index\n\t * @return {object}\n\t * @protected\n \t */\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return toFont(opts.font);\n  }\n\n  /**\n   * @protected\n   */\n  _maxDigits() {\n    const fontSize = this._resolveTickFontOptions(0).lineHeight;\n    return (this.isHorizontal() ? this.width : this.height) / fontSize;\n  }\n}\n","import {merge} from '../helpers';\nimport defaults, {overrides} from './core.defaults';\n\n/**\n * @typedef {{id: string, defaults: any, overrides?: any, defaultRoutes: any}} IChartComponent\n */\n\nexport default class TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n\n  /**\n\t * @param {IChartComponent} item\n\t * @returns {string} The scope where items defaults were registered to.\n\t */\n  register(item) {\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n\n    if (isIChartComponent(proto)) {\n      // Make sure the parent is registered and note the scope where its defaults are.\n      parentScope = this.register(proto);\n    }\n\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope + '.' + id;\n\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n\n    if (id in items) {\n      // already registered\n      return scope;\n    }\n\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n    if (this.override) {\n      defaults.override(item.id, item.overrides);\n    }\n\n    return scope;\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {object?}\n\t */\n  get(id) {\n    return this.items[id];\n  }\n\n  /**\n\t * @param {IChartComponent} item\n\t */\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n\n    if (id in items) {\n      delete items[id];\n    }\n\n    if (scope && id in defaults[scope]) {\n      delete defaults[scope][id];\n      if (this.override) {\n        delete overrides[id];\n      }\n    }\n  }\n}\n\nfunction registerDefaults(item, scope, parentScope) {\n  // Inherit the parent's defaults and keep existing defaults\n  const itemDefaults = merge(Object.create(null), [\n    parentScope ? defaults.get(parentScope) : {},\n    defaults.get(scope),\n    item.defaults\n  ]);\n\n  defaults.set(scope, itemDefaults);\n\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\n\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\n\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n","import DatasetController from './core.datasetController';\nimport Element from './core.element';\nimport Scale from './core.scale';\nimport TypedRegistry from './core.typedRegistry';\nimport {each, callback as call, _capitalize} from '../helpers/helpers.core';\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is exported for typedoc\n */\nexport class Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    // Order is important, Scale has Element in prototype chain,\n    // so Scales must be before Elements. Plugins are a fallback, so not listed here.\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  add(...args) {\n    this._each('register', args);\n  }\n\n  remove(...args) {\n    this._each('unregister', args);\n  }\n\n  /**\n\t * @param  {...typeof DatasetController} args\n\t */\n  addControllers(...args) {\n    this._each('register', args, this.controllers);\n  }\n\n  /**\n\t * @param  {...typeof Element} args\n\t */\n  addElements(...args) {\n    this._each('register', args, this.elements);\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  addPlugins(...args) {\n    this._each('register', args, this.plugins);\n  }\n\n  /**\n\t * @param  {...typeof Scale} args\n\t */\n  addScales(...args) {\n    this._each('register', args, this.scales);\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof DatasetController}\n\t */\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof Element}\n\t */\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {object}\n\t */\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof Scale}\n\t */\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n\n  /**\n\t * @param  {...typeof DatasetController} args\n\t */\n  removeControllers(...args) {\n    this._each('unregister', args, this.controllers);\n  }\n\n  /**\n\t * @param  {...typeof Element} args\n\t */\n  removeElements(...args) {\n    this._each('unregister', args, this.elements);\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  removePlugins(...args) {\n    this._each('unregister', args, this.plugins);\n  }\n\n  /**\n\t * @param  {...typeof Scale} args\n\t */\n  removeScales(...args) {\n    this._each('unregister', args, this.scales);\n  }\n\n  /**\n\t * @private\n\t */\n  _each(method, args, typedRegistry) {\n    [...args].forEach(arg => {\n      const reg = typedRegistry || this._getRegistryForType(arg);\n      if (typedRegistry || reg.isForType(arg) || (reg === this.plugins && arg.id)) {\n        this._exec(method, reg, arg);\n      } else {\n        // Handle loopable args\n        // Use case:\n        //  import * as plugins from './plugins';\n        //  Chart.register(plugins);\n        each(arg, item => {\n          // If there are mixed types in the loopable, make sure those are\n          // registered in correct registry\n          // Use case: (treemap exporting controller, elements etc)\n          //  import * as treemap from 'chartjs-chart-treemap';\n          //  Chart.register(treemap);\n\n          const itemReg = typedRegistry || this._getRegistryForType(item);\n          this._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _exec(method, registry, component) {\n    const camelMethod = _capitalize(method);\n    call(component['before' + camelMethod], [], component); // beforeRegister / beforeUnregister\n    registry[method](component);\n    call(component['after' + camelMethod], [], component); // afterRegister / afterUnregister\n  }\n\n  /**\n\t * @private\n\t */\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n    // plugins is the fallback registry\n    return this.plugins;\n  }\n\n  /**\n\t * @private\n\t */\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n    return item;\n  }\n\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Registry();\n","import registry from './core.registry';\nimport {callback as callCallback, isNullOrUndef, valueOrDefault} from '../helpers/helpers.core';\n\n/**\n * @typedef { import(\"./core.controller\").default } Chart\n * @typedef { import(\"../../types\").ChartEvent } ChartEvent\n * @typedef { import(\"../plugins/plugin.tooltip\").default } Tooltip\n */\n\n/**\n * @callback filterCallback\n * @param {{plugin: object, options: object}} value\n * @param {number} [index]\n * @param {array} [array]\n * @param {object} [thisArg]\n * @return {boolean}\n */\n\n\nexport default class PluginService {\n  constructor() {\n    this._init = [];\n  }\n\n  /**\n\t * Calls enabled plugins for `chart` on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {Chart} chart - The chart instance for which plugins should be called.\n\t * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {object} [args] - Extra arguments to apply to the hook call.\n   * @param {filterCallback} [filter] - Filtering function for limiting which plugins are notified\n\t * @returns {boolean} false if any of the plugins return false, else returns true.\n\t */\n  notify(chart, hook, args, filter) {\n    if (hook === 'beforeInit') {\n      this._init = this._createDescriptors(chart, true);\n      this._notify(this._init, chart, 'install');\n    }\n\n    const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n    const result = this._notify(descriptors, chart, hook, args);\n\n    if (hook === 'afterDestroy') {\n      this._notify(descriptors, chart, 'stop');\n      this._notify(this._init, chart, 'uninstall');\n    }\n    return result;\n  }\n\n  /**\n\t * @private\n\t */\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n      if (callCallback(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  invalidate() {\n    // When plugins are registered, there is the possibility of a double\n    // invalidate situation. In this case, we only want to invalidate once.\n    // If we invalidate multiple times, the `_oldCache` is lost and all of the\n    // plugins are restarted without being correctly stopped.\n    // See https://github.com/chartjs/Chart.js/issues/8147\n    if (!isNullOrUndef(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @private\n\t */\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n\n    const descriptors = this._cache = this._createDescriptors(chart);\n\n    this._notifyStateChanges(chart);\n\n    return descriptors;\n  }\n\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = valueOrDefault(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    // options === false => all plugins are disabled\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @private\n\t */\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n}\n\n/**\n * @param {import(\"./core.config\").default} config\n */\nfunction allPlugins(config) {\n  const localIds = {};\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n\n  const local = config.plugins || [];\n  for (let i = 0; i < local.length; i++) {\n    const plugin = local[i];\n\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n      localIds[plugin.id] = true;\n    }\n  }\n\n  return {plugins, localIds};\n}\n\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\n\nfunction createDescriptors(chart, {plugins, localIds}, options, all) {\n  const result = [];\n  const context = chart.getContext();\n\n  for (const plugin of plugins) {\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n    if (opts === null) {\n      continue;\n    }\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, {plugin, local: localIds[id]}, opts, context)\n    });\n  }\n\n  return result;\n}\n\nfunction pluginOpts(config, {plugin, local}, opts, context) {\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n  if (local && plugin.defaults) {\n    // make sure plugin defaults are in scopes for local (not registered) plugins\n    scopes.push(plugin.defaults);\n  }\n  return config.createResolver(scopes, context, [''], {\n    // These are just defaults that plugins can override\n    scriptable: false,\n    indexable: false,\n    allKeys: true\n  });\n}\n","import defaults, {overrides, descriptors} from './core.defaults';\nimport {mergeIf, resolveObjectKey, isArray, isFunction, valueOrDefault, isObject} from '../helpers/helpers.core';\nimport {_attachContext, _createResolver, _descriptors} from '../helpers/helpers.config';\n\nexport function getIndexAxis(type, options) {\n  const datasetDefaults = defaults.datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\n\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\n\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\n\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\n\nexport function determineAxis(id, scaleOptions) {\n  if (id === 'x' || id === 'y' || id === 'r') {\n    return id;\n  }\n\n  id = scaleOptions.axis\n    || axisFromPosition(scaleOptions.position)\n    || id.length > 1 && determineAxis(id[0].toLowerCase(), scaleOptions);\n\n  if (id) {\n    return id;\n  }\n\n  throw new Error(`Cannot determine type of '${name}' axis. Please provide 'axis' or 'position' option.`);\n}\n\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = overrides[config.type] || {scales: {}};\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const scales = Object.create(null);\n\n  // First figure out first scale id's per axis.\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n    if (!isObject(scaleConf)) {\n      return console.error(`Invalid scale configuration for scale: ${id}`);\n    }\n    if (scaleConf._proxy) {\n      return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n    }\n    const axis = determineAxis(id, scaleConf);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    scales[id] = mergeIf(Object.create(null), [{axis}, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n\n  // Then merge dataset defaults to scale configs\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = overrides[type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{axis}, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n\n  // apply scale defaults, if not overridden by dataset defaults\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n\n  return scales;\n}\n\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\n\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\n\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n\n  initOptions(config);\n\n  return config;\n}\n\nconst keyCache = new Map();\nconst keysCached = new Set();\n\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\n\nconst addIfFound = (set, obj, key) => {\n  const opts = resolveObjectKey(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\n\nexport default class Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n\n  get platform() {\n    return this._config.platform;\n  }\n\n  get type() {\n    return this._config.type;\n  }\n\n  set type(type) {\n    this._config.type = type;\n  }\n\n  get data() {\n    return this._config.data;\n  }\n\n  set data(data) {\n    this._config.data = initData(data);\n  }\n\n  get options() {\n    return this._config.options;\n  }\n\n  set options(options) {\n    this._config.options = options;\n  }\n\n  get plugins() {\n    return this._config.plugins;\n  }\n\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n\n  clearCache() {\n    this._scopeCache.clear();\n    this._resolverCache.clear();\n  }\n\n  /**\n   * Returns the option scope keys for resolving dataset options.\n   * These keys do not include the dataset itself, because it is not under options.\n   * @param {string} datasetType\n   * @return {string[][]}\n   */\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType,\n      () => [[\n        `datasets.${datasetType}`,\n        ''\n      ]]);\n  }\n\n  /**\n   * Returns the option scope keys for resolving dataset animation options.\n   * These keys do not include the dataset itself, because it is not under options.\n   * @param {string} datasetType\n   * @param {string} transition\n   * @return {string[][]}\n   */\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`,\n      () => [\n        [\n          `datasets.${datasetType}.transitions.${transition}`,\n          `transitions.${transition}`,\n        ],\n        // The following are used for looking up the `animations` and `animation` keys\n        [\n          `datasets.${datasetType}`,\n          ''\n        ]\n      ]);\n  }\n\n  /**\n   * Returns the options scope keys for resolving element options that belong\n   * to an dataset. These keys do not include the dataset itself, because it\n   * is not under options.\n   * @param {string} datasetType\n   * @param {string} elementType\n   * @return {string[][]}\n   */\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`,\n      () => [[\n        `datasets.${datasetType}.elements.${elementType}`,\n        `datasets.${datasetType}`,\n        `elements.${elementType}`,\n        ''\n      ]]);\n  }\n\n  /**\n   * Returns the options scope keys for resolving plugin options.\n   * @param {{id: string, additionalOptionScopes?: string[]}} plugin\n   * @return {string[][]}\n   */\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`,\n      () => [[\n        `plugins.${id}`,\n        ...plugin.additionalOptionScopes || [],\n      ]]);\n  }\n\n  /**\n   * @private\n   */\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n    let cache = _scopeCache.get(mainScope);\n    if (!cache || resetCache) {\n      cache = new Map();\n      _scopeCache.set(mainScope, cache);\n    }\n    return cache;\n  }\n\n  /**\n   * Resolves the objects from options and defaults for option value resolution.\n   * @param {object} mainScope - The main scope object for options\n   * @param {string[][]} keyLists - The arrays of keys in resolution order\n   * @param {boolean} [resetCache] - reset the cache for this mainScope\n   */\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {options, type} = this;\n    const cache = this._cachedScopes(mainScope, resetCache);\n    const cached = cache.get(keyLists);\n    if (cached) {\n      return cached;\n    }\n\n    const scopes = new Set();\n\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, defaults, key));\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\n    });\n\n    const array = Array.from(scopes);\n    if (array.length === 0) {\n      array.push(Object.create(null));\n    }\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n    return array;\n  }\n\n  /**\n   * Returns the option scopes for resolving chart options\n   * @return {object[]}\n   */\n  chartOptionScopes() {\n    const {options, type} = this;\n\n    return [\n      options,\n      overrides[type] || {},\n      defaults.datasets[type] || {}, // https://github.com/chartjs/Chart.js/issues/8531\n      {type},\n      defaults,\n      descriptors\n    ];\n  }\n\n  /**\n   * @param {object[]} scopes\n   * @param {string[]} names\n   * @param {function|object} context\n   * @param {string[]} [prefixes]\n   * @return {object}\n   */\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\n    const result = {$shared: true};\n    const {resolver, subPrefixes} = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = isFunction(context) ? context() : context;\n      // subResolver is passed to scriptable options. It should not resolve to hover options.\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = _attachContext(resolver, context, subResolver);\n    }\n\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n    return result;\n  }\n\n  /**\n   * @param {object[]} scopes\n   * @param {object} [context]\n   * @param {string[]} [prefixes]\n   * @param {{scriptable: boolean, indexable: boolean, allKeys?: boolean}} [descriptorDefaults]\n   */\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\n    const {resolver} = getResolver(this._resolverCache, scopes, prefixes);\n    return isObject(context)\n      ? _attachContext(resolver, context, undefined, descriptorDefaults)\n      : resolver;\n  }\n}\n\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n  if (!cached) {\n    const resolver = _createResolver(scopes, prefixes);\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\n\nconst hasFunction = value => isObject(value)\n  && Object.getOwnPropertyNames(value).reduce((acc, key) => acc || isFunction(value[key]), false);\n\nfunction needContext(proxy, names) {\n  const {isScriptable, isIndexable} = _descriptors(proxy);\n\n  for (const prop of names) {\n    const scriptable = isScriptable(prop);\n    const indexable = isIndexable(prop);\n    const value = (indexable || scriptable) && proxy[prop];\n    if ((scriptable && (isFunction(value) || hasFunction(value)))\n      || (indexable && isArray(value))) {\n      return true;\n    }\n  }\n  return false;\n}\n","import animator from './core.animator';\nimport defaults, {overrides} from './core.defaults';\nimport Interaction from './core.interaction';\nimport layouts from './core.layouts';\nimport {_detectPlatform} from '../platform';\nimport PluginService from './core.plugins';\nimport registry from './core.registry';\nimport Config, {determineAxis, getIndexAxis} from './core.config';\nimport {retinaScale, _isDomSupported} from '../helpers/helpers.dom';\nimport {each, callback as callCallback, uid, valueOrDefault, _elementsEqual, isNullOrUndef, setsEqual, defined, isFunction, _isClickEvent} from '../helpers/helpers.core';\nimport {clearCanvas, clipArea, createContext, unclipArea, _isPointInArea} from '../helpers';\n// @ts-ignore\nimport {version} from '../../package.json';\nimport {debounce} from '../helpers/helpers.extras';\n\n/**\n * @typedef { import('../../types').ChartEvent } ChartEvent\n * @typedef { import(\"../../types\").Point } Point\n */\n\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || (KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x');\n}\n\nfunction compare2Level(l1, l2) {\n  return function(a, b) {\n    return a[l1] === b[l1]\n      ? a[l2] - b[l2]\n      : a[l1] - b[l1];\n  };\n}\n\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n\n  chart.notifyPlugins('afterRender');\n  callCallback(animationOptions && animationOptions.onComplete, [context], chart);\n}\n\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  callCallback(animationOptions && animationOptions.onProgress, [context], chart);\n}\n\n/**\n * Chart.js can take a string id of a canvas element, a 2d context, or a canvas element itself.\n * Attempt to unwrap the item passed into the chart constructor so that it is a canvas element (if possible).\n */\nfunction getCanvas(item) {\n  if (_isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    // Support for array based queries (such as jQuery)\n    item = item[0];\n  }\n\n  if (item && item.canvas) {\n    // Support for any object associated to a canvas (including a context2d)\n    item = item.canvas;\n  }\n  return item;\n}\n\nconst instances = {};\nconst getChart = (key) => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter((c) => c.canvas === canvas).pop();\n};\n\nfunction moveNumericKeys(obj, start, move) {\n  const keys = Object.keys(obj);\n  for (const key of keys) {\n    const intKey = +key;\n    if (intKey >= start) {\n      const value = obj[key];\n      delete obj[key];\n      if (move > 0 || intKey > start) {\n        obj[intKey + move] = value;\n      }\n    }\n  }\n}\n\n/**\n * @param {ChartEvent} e\n * @param {ChartEvent|null} lastEvent\n * @param {boolean} inChartArea\n * @param {boolean} isClick\n * @returns {ChartEvent|null}\n */\nfunction determineLastEvent(e, lastEvent, inChartArea, isClick) {\n  if (!inChartArea || e.type === 'mouseout') {\n    return null;\n  }\n  if (isClick) {\n    return lastEvent;\n  }\n  return e;\n}\n\nfunction getDatasetArea(meta) {\n  const {xScale, yScale} = meta;\n  if (xScale && yScale) {\n    return {\n      left: xScale.left,\n      right: xScale.right,\n      top: yScale.top,\n      bottom: yScale.bottom\n    };\n  }\n}\n\nclass Chart {\n\n  static defaults = defaults;\n  static instances = instances;\n  static overrides = overrides;\n  static registry = registry;\n  static version = version;\n  static getChart = getChart;\n\n  static register(...items) {\n    registry.add(...items);\n    invalidatePlugins();\n  }\n\n  static unregister(...items) {\n    registry.remove(...items);\n    invalidatePlugins();\n  }\n\n  // eslint-disable-next-line max-statements\n  constructor(item, userConfig) {\n    const config = this.config = new Config(userConfig);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error(\n        'Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' +\n\t\t\t\t' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.'\n      );\n    }\n\n    const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n\n    this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n    this.platform.updateConfig(config);\n\n    const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    // Store the previously used aspect ratio to determine if a resize\n    // is needed during updates. Do this after _options is set since\n    // aspectRatio uses a getter\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    /** @type {?{attach?: function, detach?: function, resize?: function}} */\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(mode => this.update(mode), options.resizeDelay || 0);\n    this._dataChanges = [];\n\n    // Add the chart instance to the global namespace\n    instances[this.id] = this;\n\n    if (!context || !canvas) {\n      // The given item is not a compatible context2d element, let's return before finalizing\n      // the chart initialization but after setting basic chart / controller properties that\n      // can help to figure out that the chart is not valid (e.g chart.canvas !== null);\n      // https://github.com/chartjs/Chart.js/issues/2807\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n\n    animator.listen(this, 'complete', onAnimationsComplete);\n    animator.listen(this, 'progress', onAnimationProgress);\n\n    this._initialize();\n    if (this.attached) {\n      this.update();\n    }\n  }\n\n  get aspectRatio() {\n    const {options: {aspectRatio, maintainAspectRatio}, width, height, _aspectRatio} = this;\n    if (!isNullOrUndef(aspectRatio)) {\n      // If aspectRatio is defined in options, use that.\n      return aspectRatio;\n    }\n\n    if (maintainAspectRatio && _aspectRatio) {\n      // If maintainAspectRatio is truthly and we had previously determined _aspectRatio, use that\n      return _aspectRatio;\n    }\n\n    // Calculate\n    return height ? width / height : null;\n  }\n\n  get data() {\n    return this.config.data;\n  }\n\n  set data(data) {\n    this.config.data = data;\n  }\n\n  get options() {\n    return this._options;\n  }\n\n  set options(options) {\n    this.config.options = options;\n  }\n\n  get registry() {\n    return registry;\n  }\n\n  /**\n\t * @private\n\t */\n  _initialize() {\n    // Before init plugin notification\n    this.notifyPlugins('beforeInit');\n\n    if (this.options.responsive) {\n      this.resize();\n    } else {\n      retinaScale(this, this.options.devicePixelRatio);\n    }\n\n    this.bindEvents();\n\n    // After init plugin notification\n    this.notifyPlugins('afterInit');\n\n    return this;\n  }\n\n  clear() {\n    clearCanvas(this.canvas, this.ctx);\n    return this;\n  }\n\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n\n  /**\n\t * Resize the chart to its container or to explicit dimensions.\n\t * @param {number} [width]\n\t * @param {number} [height]\n\t */\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {width, height};\n    }\n  }\n\n  _resize(width, height) {\n    const options = this.options;\n    const canvas = this.canvas;\n    const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n    const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n    const mode = this.width ? 'resize' : 'attach';\n\n    this.width = newSize.width;\n    this.height = newSize.height;\n    this._aspectRatio = this.aspectRatio;\n    if (!retinaScale(this, newRatio, true)) {\n      return;\n    }\n\n    this.notifyPlugins('resize', {size: newSize});\n\n    callCallback(options.onResize, [this, newSize], this);\n\n    if (this.attached) {\n      if (this._doResize(mode)) {\n        // The resize update is delayed, only draw without updating.\n        this.render();\n      }\n    }\n  }\n\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n\n    each(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n\n  /**\n\t * Builds a map of scale ID to scale object for future lookup.\n\t */\n  buildOrUpdateScales() {\n    const options = this.options;\n    const scaleOpts = options.scales;\n    const scales = this.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n\n    if (scaleOpts) {\n      items = items.concat(\n        Object.keys(scaleOpts).map((id) => {\n          const scaleOptions = scaleOpts[id];\n          const axis = determineAxis(id, scaleOptions);\n          const isRadial = axis === 'r';\n          const isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        })\n      );\n    }\n\n    each(items, (item) => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n\n      updated[id] = true;\n      let scale = null;\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: this.ctx,\n          chart: this\n        });\n        scales[scale.id] = scale;\n      }\n\n      scale.init(scaleOptions, options);\n    });\n    // clear up discarded scales\n    each(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n\n    each(scales, (scale) => {\n      layouts.configure(this, scale, scale.options);\n      layouts.addBox(this, scale);\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _updateMetasets() {\n    const metasets = this._metasets;\n    const numData = this.data.datasets.length;\n    const numMeta = metasets.length;\n\n    metasets.sort((a, b) => a.index - b.index);\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        this._destroyDatasetMeta(i);\n      }\n      metasets.splice(numData, numMeta - numData);\n    }\n    this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n\n  /**\n\t * @private\n\t */\n  _removeUnreferencedMetasets() {\n    const {_metasets: metasets, data: {datasets}} = this;\n    if (metasets.length > datasets.length) {\n      delete this._stacks;\n    }\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        this._destroyDatasetMeta(index);\n      }\n    });\n  }\n\n  buildOrUpdateControllers() {\n    const newControllers = [];\n    const datasets = this.data.datasets;\n    let i, ilen;\n\n    this._removeUnreferencedMetasets();\n\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = this.getDatasetMeta(i);\n      const type = dataset.type || this.config.type;\n\n      if (meta.type && meta.type !== type) {\n        this._destroyDatasetMeta(i);\n        meta = this.getDatasetMeta(i);\n      }\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n      meta.order = dataset.order || 0;\n      meta.index = i;\n      meta.label = '' + dataset.label;\n      meta.visible = this.isDatasetVisible(i);\n\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {datasetElementType, dataElementType} = defaults.datasets[type];\n        Object.assign(ControllerClass, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(this, i);\n        newControllers.push(meta.controller);\n      }\n    }\n\n    this._updateMetasets();\n    return newControllers;\n  }\n\n  /**\n\t * Reset the elements of all datasets\n\t * @private\n\t */\n  _resetElements() {\n    each(this.data.datasets, (dataset, datasetIndex) => {\n      this.getDatasetMeta(datasetIndex).controller.reset();\n    }, this);\n  }\n\n  /**\n\t* Resets the chart back to its state before the initial animation\n\t*/\n  reset() {\n    this._resetElements();\n    this.notifyPlugins('reset');\n  }\n\n  update(mode) {\n    const config = this.config;\n\n    config.update();\n    const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    const animsDisabled = this._animationsDisabled = !options.animation;\n\n    this._updateScales();\n    this._checkEventBindings();\n    this._updateHiddenIndices();\n\n    // plugins options references might have change, let's invalidate the cache\n    // https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n    this._plugins.invalidate();\n\n    if (this.notifyPlugins('beforeUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n\n    // Make sure dataset controllers are updated and new controllers are reset\n    const newControllers = this.buildOrUpdateControllers();\n\n    this.notifyPlugins('beforeElementsUpdate');\n\n    // Make sure all dataset controllers have correct meta data counts\n    let minPadding = 0;\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; i++) {\n      const {controller} = this.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      // New controllers will be reset after the layout pass, so we only want to modify\n      // elements added to new datasets\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n    minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n    this._updateLayout(minPadding);\n\n    // Only reset the controllers if we have animations\n    if (!animsDisabled) {\n      // Can only reset the new controllers after the scales have been updated\n      // Reset is done to get the starting point for the initial animation\n      each(newControllers, (controller) => {\n        controller.reset();\n      });\n    }\n\n    this._updateDatasets(mode);\n\n    // Do this before render so that any plugins that need final scale updates can use it\n    this.notifyPlugins('afterUpdate', {mode});\n\n    this._layers.sort(compare2Level('z', '_idx'));\n\n    // Replay last event from before update, or set hover styles on active elements\n    const {_active, _lastEvent} = this;\n    if (_lastEvent) {\n      this._eventHandler(_lastEvent, true);\n    } else if (_active.length) {\n      this._updateHoverStyles(_active, _active, true);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  _updateScales() {\n    each(this.scales, (scale) => {\n      layouts.removeBox(this, scale);\n    });\n\n    this.ensureScalesHaveIDs();\n    this.buildOrUpdateScales();\n  }\n\n  /**\n   * @private\n   */\n  _checkEventBindings() {\n    const options = this.options;\n    const existingEvents = new Set(Object.keys(this._listeners));\n    const newEvents = new Set(options.events);\n\n    if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n      // The configured events have changed. Rebind.\n      this.unbindEvents();\n      this.bindEvents();\n    }\n  }\n\n  /**\n   * @private\n   */\n  _updateHiddenIndices() {\n    const {_hiddenIndices} = this;\n    const changes = this._getUniformDataChanges() || [];\n    for (const {method, start, count} of changes) {\n      const move = method === '_removeElements' ? -count : count;\n      moveNumericKeys(_hiddenIndices, start, move);\n    }\n  }\n\n  /**\n   * @private\n   */\n  _getUniformDataChanges() {\n    const _dataChanges = this._dataChanges;\n    if (!_dataChanges || !_dataChanges.length) {\n      return;\n    }\n\n    this._dataChanges = [];\n    const datasetCount = this.data.datasets.length;\n    const makeSet = (idx) => new Set(\n      _dataChanges\n        .filter(c => c[0] === idx)\n        .map((c, i) => i + ',' + c.splice(1).join(','))\n    );\n\n    const changeSet = makeSet(0);\n    for (let i = 1; i < datasetCount; i++) {\n      if (!setsEqual(changeSet, makeSet(i))) {\n        return;\n      }\n    }\n    return Array.from(changeSet)\n      .map(c => c.split(','))\n      .map(a => ({method: a[1], start: +a[2], count: +a[3]}));\n  }\n\n  /**\n\t * Updates the chart layout unless a plugin returns `false` to the `beforeLayout`\n\t * hook, in which case, plugins will not be called on `afterLayout`.\n\t * @private\n\t */\n  _updateLayout(minPadding) {\n    if (this.notifyPlugins('beforeLayout', {cancelable: true}) === false) {\n      return;\n    }\n\n    layouts.update(this, this.width, this.height, minPadding);\n\n    const area = this.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n\n    this._layers = [];\n    each(this.boxes, (box) => {\n      if (noArea && box.position === 'chartArea') {\n        // Skip drawing and configuring chartArea boxes when chartArea is zero or negative\n        return;\n      }\n\n      // configure is called twice, once in core.scale.update and once here.\n      // Here the boxes are fully updated and at their final positions.\n      if (box.configure) {\n        box.configure();\n      }\n      this._layers.push(...box._layers());\n    }, this);\n\n    this._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n\n    this.notifyPlugins('afterLayout');\n  }\n\n  /**\n\t * Updates all datasets unless a plugin returns `false` to the `beforeDatasetsUpdate`\n\t * hook, in which case, plugins will not be called on `afterDatasetsUpdate`.\n\t * @private\n\t */\n  _updateDatasets(mode) {\n    if (this.notifyPlugins('beforeDatasetsUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this.getDatasetMeta(i).controller.configure();\n    }\n\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._updateDataset(i, isFunction(mode) ? mode({datasetIndex: i}) : mode);\n    }\n\n    this.notifyPlugins('afterDatasetsUpdate', {mode});\n  }\n\n  /**\n\t * Updates dataset at index unless a plugin returns `false` to the `beforeDatasetUpdate`\n\t * hook, in which case, plugins will not be called on `afterDatasetUpdate`.\n\t * @private\n\t */\n  _updateDataset(index, mode) {\n    const meta = this.getDatasetMeta(index);\n    const args = {meta, index, mode, cancelable: true};\n\n    if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n\n    meta.controller._update(mode);\n\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetUpdate', args);\n  }\n\n  render() {\n    if (this.notifyPlugins('beforeRender', {cancelable: true}) === false) {\n      return;\n    }\n\n    if (animator.has(this)) {\n      if (this.attached && !animator.running(this)) {\n        animator.start(this);\n      }\n    } else {\n      this.draw();\n      onAnimationsComplete({chart: this});\n    }\n  }\n\n  draw() {\n    let i;\n    if (this._resizeBeforeDraw) {\n      const {width, height} = this._resizeBeforeDraw;\n      this._resize(width, height);\n      this._resizeBeforeDraw = null;\n    }\n    this.clear();\n\n    if (this.width <= 0 || this.height <= 0) {\n      return;\n    }\n\n    if (this.notifyPlugins('beforeDraw', {cancelable: true}) === false) {\n      return;\n    }\n\n    // Because of plugin hooks (before/afterDatasetsDraw), datasets can't\n    // currently be part of layers. Instead, we draw\n    // layers <= 0 before(default, backward compat), and the rest after\n    const layers = this._layers;\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n\n    this._drawDatasets();\n\n    // Rest of layers\n    for (; i < layers.length; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n\n    this.notifyPlugins('afterDraw');\n  }\n\n  /**\n\t * @private\n\t */\n  _getSortedDatasetMetas(filterVisible) {\n    const metasets = this._sortedMetasets;\n    const result = [];\n    let i, ilen;\n\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n\n    return result;\n  }\n\n  /**\n\t * Gets the visible dataset metas in drawing order\n\t * @return {object[]}\n\t */\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n\n  /**\n\t * Draws all datasets unless a plugin returns `false` to the `beforeDatasetsDraw`\n\t * hook, in which case, plugins will not be called on `afterDatasetsDraw`.\n\t * @private\n\t */\n  _drawDatasets() {\n    if (this.notifyPlugins('beforeDatasetsDraw', {cancelable: true}) === false) {\n      return;\n    }\n\n    const metasets = this.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      this._drawDataset(metasets[i]);\n    }\n\n    this.notifyPlugins('afterDatasetsDraw');\n  }\n\n  /**\n\t * Draws dataset at index unless a plugin returns `false` to the `beforeDatasetDraw`\n\t * hook, in which case, plugins will not be called on `afterDatasetDraw`.\n\t * @private\n\t */\n  _drawDataset(meta) {\n    const ctx = this.ctx;\n    const clip = meta._clip;\n    const useClip = !clip.disabled;\n    const area = getDatasetArea(meta) || this.chartArea;\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n\n    if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n\n    if (useClip) {\n      clipArea(ctx, {\n        left: clip.left === false ? 0 : area.left - clip.left,\n        right: clip.right === false ? this.width : area.right + clip.right,\n        top: clip.top === false ? 0 : area.top - clip.top,\n        bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n      });\n    }\n\n    meta.controller.draw();\n\n    if (useClip) {\n      unclipArea(ctx);\n    }\n\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetDraw', args);\n  }\n\n  /**\n   * Checks whether the given point is in the chart area.\n   * @param {Point} point - in relative coordinates (see, e.g., getRelativePosition)\n   * @returns {boolean}\n   */\n  isPointInArea(point) {\n    return _isPointInArea(point, this.chartArea, this._minPadding);\n  }\n\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n\n    return [];\n  }\n\n  getDatasetMeta(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    const metasets = this._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n\n    if (!meta) {\n      meta = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\t\t\t// See isDatasetVisible() comment\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n      metasets.push(meta);\n    }\n\n    return meta;\n  }\n\n  getContext() {\n    return this.$context || (this.$context = createContext(null, {chart: this, type: 'chart'}));\n  }\n\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    if (!dataset) {\n      return false;\n    }\n\n    const meta = this.getDatasetMeta(datasetIndex);\n\n    // meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,\n    // the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n\n  /**\n\t * @private\n\t */\n  _updateVisibility(datasetIndex, dataIndex, visible) {\n    const mode = visible ? 'show' : 'hide';\n    const meta = this.getDatasetMeta(datasetIndex);\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n\n    if (defined(dataIndex)) {\n      meta.data[dataIndex].hidden = !visible;\n      this.update();\n    } else {\n      this.setDatasetVisibility(datasetIndex, visible);\n      // Animate visible state, so hide animation can be seen. This could be handled better if update / updateDataset returned a Promise.\n      anims.update(meta, {visible});\n      this.update((ctx) => ctx.datasetIndex === datasetIndex ? mode : undefined);\n    }\n  }\n\n  hide(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, false);\n  }\n\n  show(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, true);\n  }\n\n  /**\n\t * @private\n\t */\n  _destroyDatasetMeta(datasetIndex) {\n    const meta = this._metasets[datasetIndex];\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n    }\n    delete this._metasets[datasetIndex];\n  }\n\n  _stop() {\n    let i, ilen;\n    this.stop();\n    animator.remove(this);\n\n    for (i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._destroyDatasetMeta(i);\n    }\n  }\n\n  destroy() {\n    this.notifyPlugins('beforeDestroy');\n    const {canvas, ctx} = this;\n\n    this._stop();\n    this.config.clearCache();\n\n    if (canvas) {\n      this.unbindEvents();\n      clearCanvas(canvas, ctx);\n      this.platform.releaseContext(ctx);\n      this.canvas = null;\n      this.ctx = null;\n    }\n\n    delete instances[this.id];\n\n    this.notifyPlugins('afterDestroy');\n  }\n\n  toBase64Image(...args) {\n    return this.canvas.toDataURL(...args);\n  }\n\n  /**\n\t * @private\n\t */\n  bindEvents() {\n    this.bindUserEvents();\n    if (this.options.responsive) {\n      this.bindResponsiveEvents();\n    } else {\n      this.attached = true;\n    }\n  }\n\n  /**\n   * @private\n   */\n  bindUserEvents() {\n    const listeners = this._listeners;\n    const platform = this.platform;\n\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n\n    const listener = (e, x, y) => {\n      e.offsetX = x;\n      e.offsetY = y;\n      this._eventHandler(e);\n    };\n\n    each(this.options.events, (type) => _add(type, listener));\n  }\n\n  /**\n   * @private\n   */\n  bindResponsiveEvents() {\n    if (!this._responsiveListeners) {\n      this._responsiveListeners = {};\n    }\n    const listeners = this._responsiveListeners;\n    const platform = this.platform;\n\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(this, type, listener);\n        delete listeners[type];\n      }\n    };\n\n    const listener = (width, height) => {\n      if (this.canvas) {\n        this.resize(width, height);\n      }\n    };\n\n    let detached; // eslint-disable-line prefer-const\n    const attached = () => {\n      _remove('attach', attached);\n\n      this.attached = true;\n      this.resize();\n\n      _add('resize', listener);\n      _add('detach', detached);\n    };\n\n    detached = () => {\n      this.attached = false;\n\n      _remove('resize', listener);\n\n      // Stop animating and remove metasets, so when re-attached, the animations start from beginning.\n      this._stop();\n      this._resize(0, 0);\n\n      _add('attach', attached);\n    };\n\n    if (platform.isAttached(this.canvas)) {\n      attached();\n    } else {\n      detached();\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  unbindEvents() {\n    each(this._listeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._listeners = {};\n\n    each(this._responsiveListeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._responsiveListeners = undefined;\n  }\n\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n\n  /**\n\t * Get active (hovered) elements\n\t * @returns array\n\t */\n  getActiveElements() {\n    return this._active || [];\n  }\n\n  /**\n\t * Set active (hovered) elements\n\t * @param {array} activeElements New active data points\n\t */\n  setActiveElements(activeElements) {\n    const lastActive = this._active || [];\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(active, lastActive);\n\n    if (changed) {\n      this._active = active;\n      // Make sure we don't use the previous mouse event to override the active elements in update.\n      this._lastEvent = null;\n      this._updateHoverStyles(active, lastActive);\n    }\n  }\n\n  /**\n\t * Calls enabled plugins on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {Object} [args] - Extra arguments to apply to the hook call.\n   * @param {import('./core.plugins').filterCallback} [filter] - Filtering function for limiting which plugins are notified\n\t * @returns {boolean} false if any of the plugins return false, else returns true.\n\t */\n  notifyPlugins(hook, args, filter) {\n    return this._plugins.notify(this, hook, args, filter);\n  }\n\n  /**\n   * Check if a plugin with the specific ID is registered and enabled\n   * @param {string} pluginId - The ID of the plugin of which to check if it is enabled\n   * @returns {boolean}\n   */\n  isPluginEnabled(pluginId) {\n    return this._plugins._cache.filter(p => p.plugin.id === pluginId).length === 1;\n  }\n\n  /**\n\t * @private\n\t */\n  _updateHoverStyles(active, lastActive, replay) {\n    const hoverOptions = this.options.hover;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n\n    if (deactivated.length) {\n      this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n\n    if (activated.length && hoverOptions.mode) {\n      this.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _eventHandler(e, replay) {\n    const args = {\n      event: e,\n      replay,\n      cancelable: true,\n      inChartArea: this.isPointInArea(e)\n    };\n    const eventFilter = (plugin) => (plugin.options.events || this.options.events).includes(e.native.type);\n\n    if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n      return;\n    }\n\n    const changed = this._handleEvent(e, replay, args.inChartArea);\n\n    args.cancelable = false;\n    this.notifyPlugins('afterEvent', args, eventFilter);\n\n    if (changed || args.changed) {\n      this.render();\n    }\n\n    return this;\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e the event to handle\n\t * @param {boolean} [replay] - true if the event was replayed by `update`\n   * @param {boolean} [inChartArea] - true if the event is inside chartArea\n\t * @return {boolean} true if the chart needs to re-render\n\t * @private\n\t */\n  _handleEvent(e, replay, inChartArea) {\n    const {_active: lastActive = [], options} = this;\n\n    // If the event is replayed from `update`, we should evaluate with the final positions.\n    //\n    // The `replay`:\n    // It's the last event (excluding click) that has occurred before `update`.\n    // So mouse has not moved. It's also over the chart, because there is a `replay`.\n    //\n    // The why:\n    // If animations are active, the elements haven't moved yet compared to state before update.\n    // But if they will, we are activating the elements that would be active, if this check\n    // was done after the animations have completed. => \"final positions\".\n    // If there is no animations, the \"final\" and \"current\" positions are equal.\n    // This is done so we do not have to evaluate the active elements each animation frame\n    // - it would be expensive.\n    const useFinalPosition = replay;\n    const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n    const isClick = _isClickEvent(e);\n    const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n\n    if (inChartArea) {\n      // Set _lastEvent to null while we are processing the event handlers.\n      // This prevents recursion if the handler calls chart.update()\n      this._lastEvent = null;\n\n      // Invoke onHover hook\n      callCallback(options.onHover, [e, active, this], this);\n\n      if (isClick) {\n        callCallback(options.onClick, [e, active, this], this);\n      }\n    }\n\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed || replay) {\n      this._active = active;\n      this._updateHoverStyles(active, lastActive, replay);\n    }\n\n    this._lastEvent = lastEvent;\n\n    return changed;\n  }\n\n  /**\n   * @param {ChartEvent} e - The event\n   * @param {import('../../types').ActiveElement[]} lastActive - Previously active elements\n   * @param {boolean} inChartArea - Is the envent inside chartArea\n   * @param {boolean} useFinalPosition - Should the evaluation be done with current or final (after animation) element positions\n   * @returns {import('../../types').ActiveElement[]} - The active elements\n   * @pravate\n   */\n  _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n    if (e.type === 'mouseout') {\n      return [];\n    }\n\n    if (!inChartArea) {\n      // Let user control the active elements outside chartArea. Eg. using Legend.\n      return lastActive;\n    }\n\n    const hoverOptions = this.options.hover;\n    return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n  }\n}\n\n// @ts-ignore\nfunction invalidatePlugins() {\n  return each(Chart.instances, (chart) => chart._plugins.invalidate());\n}\n\nexport default Chart;\n","import Element from '../core/core.element';\nimport {_angleBetween, getAngleFromPoint, TAU, HALF_PI, valueOrDefault} from '../helpers/index';\nimport {PI, _isBetween, _limitValue} from '../helpers/helpers.math';\nimport {_readValueToProps} from '../helpers/helpers.options';\nimport type {ArcOptions, Point} from '../../types';\n\n\nfunction clipArc(ctx: CanvasRenderingContext2D, element: ArcElement, endAngle: number) {\n  const {startAngle, pixelMargin, x, y, outerRadius, innerRadius} = element;\n  let angleMargin = pixelMargin / outerRadius;\n\n  // Draw an inner border by clipping the arc and drawing a double-width border\n  // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n  ctx.closePath();\n  ctx.clip();\n}\n\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\n\n/**\n * Parse border radius from the provided options\n */\nfunction parseBorderRadius(arc: ArcElement, innerRadius: number, outerRadius: number, angleDelta: number) {\n  const o = toRadiusCorners(arc.options.borderRadius);\n  const halfThickness = (outerRadius - innerRadius) / 2;\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n\n  // Outer limits are complicated. We want to compute the available angular distance at\n  // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\n  // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\n  //\n  // If the borderRadius is large, that value can become negative.\n  // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\n  // we know that the thickness term will dominate and compute the limits at that point\n  const computeOuterLimit = (val) => {\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit),\n  };\n}\n\n/**\n * Convert (r, 𝜃) to (x, y)\n */\nfunction rThetaToXY(r: number, theta: number, x: number, y: number) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta),\n  };\n}\n\n\n/**\n * Path the arc, respecting border radius by separating into left and right halves.\n *\n *   Start      End\n *\n *    1--->a--->2    Outer\n *   /           \\\n *   8           3\n *   |           |\n *   |           |\n *   7           4\n *   \\           /\n *    6<---b<---5    Inner\n */\nfunction pathArc(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  end: number,\n  circular: boolean,\n) {\n  const {x, y, startAngle: start, pixelMargin, innerRadius: innerR} = element;\n\n  const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n  const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n\n  let spacingOffset = 0;\n  const alpha = end - start;\n\n  if (spacing) {\n    // When spacing is present, it is the same for all items\n    // So we adjust the start and end angle of the arc such that\n    // the distance is the same as it would be without the spacing\n    const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n    const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n    const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n    const adjustedAngle = avNogSpacingRadius !== 0 ? (alpha * avNogSpacingRadius) / (avNogSpacingRadius + spacing) : alpha;\n    spacingOffset = (alpha - adjustedAngle) / 2;\n  }\n\n  const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n  const angleOffset = (alpha - beta) / 2;\n  const startAngle = start + angleOffset + spacingOffset;\n  const endAngle = end - angleOffset - spacingOffset;\n  const {outerStart, outerEnd, innerStart, innerEnd} = parseBorderRadius(element, innerRadius, outerRadius, endAngle - startAngle);\n\n  const outerStartAdjustedRadius = outerRadius - outerStart;\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n\n  const innerStartAdjustedRadius = innerRadius + innerStart;\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n\n  ctx.beginPath();\n\n  if (circular) {\n    // The first arc segments from point 1 to point a to point 2\n    const outerMidAdjustedAngle = (outerStartAdjustedAngle + outerEndAdjustedAngle) / 2;\n    ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerMidAdjustedAngle);\n    ctx.arc(x, y, outerRadius, outerMidAdjustedAngle, outerEndAdjustedAngle);\n\n    // The corner segment from point 2 to point 3\n    if (outerEnd > 0) {\n      const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n    }\n\n    // The line from point 3 to point 4\n    const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n    ctx.lineTo(p4.x, p4.y);\n\n    // The corner segment from point 4 to point 5\n    if (innerEnd > 0) {\n      const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n    }\n\n    // The inner arc from point 5 to point b to point 6\n    const innerMidAdjustedAngle = ((endAngle - (innerEnd / innerRadius)) + (startAngle + (innerStart / innerRadius))) / 2;\n    ctx.arc(x, y, innerRadius, endAngle - (innerEnd / innerRadius), innerMidAdjustedAngle, true);\n    ctx.arc(x, y, innerRadius, innerMidAdjustedAngle, startAngle + (innerStart / innerRadius), true);\n\n    // The corner segment from point 6 to point 7\n    if (innerStart > 0) {\n      const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n    }\n\n    // The line from point 7 to point 8\n    const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n    ctx.lineTo(p8.x, p8.y);\n\n    // The corner segment from point 8 to point 1\n    if (outerStart > 0) {\n      const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n    }\n  } else {\n    ctx.moveTo(x, y);\n\n    const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n    const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerStartX, outerStartY);\n\n    const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n    const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerEndX, outerEndY);\n  }\n\n  ctx.closePath();\n}\n\nfunction drawArc(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  circular: boolean,\n) {\n  const {fullCircles, startAngle, circumference} = element;\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + (circumference % TAU || TAU);\n    }\n  }\n  pathArc(ctx, element, offset, spacing, endAngle, circular);\n  ctx.fill();\n  return endAngle;\n}\n\nfunction drawBorder(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  circular: boolean,\n) {\n  const {fullCircles, startAngle, circumference, options} = element;\n  const {borderWidth, borderJoinStyle} = options;\n  const inner = options.borderAlign === 'inner';\n\n  if (!borderWidth) {\n    return;\n  }\n\n  if (inner) {\n    ctx.lineWidth = borderWidth * 2;\n    ctx.lineJoin = borderJoinStyle || 'round';\n  } else {\n    ctx.lineWidth = borderWidth;\n    ctx.lineJoin = borderJoinStyle || 'bevel';\n  }\n\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.stroke();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + (circumference % TAU || TAU);\n    }\n  }\n\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n\n  if (!fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.stroke();\n  }\n}\n\nexport interface ArcProps extends Point {\n  startAngle: number;\n  endAngle: number;\n  innerRadius: number;\n  outerRadius: number;\n  circumference: number;\n}\n\nexport default class ArcElement extends Element<ArcProps, ArcOptions> {\n\n  static id = 'arc';\n\n  static defaults = {\n    borderAlign: 'center',\n    borderColor: '#fff',\n    borderJoinStyle: undefined,\n    borderRadius: 0,\n    borderWidth: 2,\n    offset: 0,\n    spacing: 0,\n    angle: undefined,\n    circular: true,\n  };\n\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor'\n  };\n\n  circumference: number;\n  endAngle: number;\n  fullCircles: number;\n  innerRadius: number;\n  outerRadius: number;\n  pixelMargin: number;\n  startAngle: number;\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  inRange(chartX: number, chartY: number, useFinalPosition: boolean) {\n    const point = this.getProps(['x', 'y'], useFinalPosition);\n    const {angle, distance} = getAngleFromPoint(point, {x: chartX, y: chartY});\n    const {startAngle, endAngle, innerRadius, outerRadius, circumference} = this.getProps([\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference'\n    ], useFinalPosition);\n    const rAdjust = this.options.spacing / 2;\n    const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n    const betweenAngles = _circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n    const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n\n    return (betweenAngles && withinRadius);\n  }\n\n  getCenterPoint(useFinalPosition: boolean) {\n    const {x, y, startAngle, endAngle, innerRadius, outerRadius} = this.getProps([\n      'x',\n      'y',\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference',\n    ], useFinalPosition);\n    const {offset, spacing} = this.options;\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n\n  tooltipPosition(useFinalPosition: boolean) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n\n  draw(ctx: CanvasRenderingContext2D) {\n    const {options, circumference} = this;\n    const offset = (options.offset || 0) / 4;\n    const spacing = (options.spacing || 0) / 2;\n    const circular = options.circular;\n    this.pixelMargin = (options.borderAlign === 'inner') ? 0.33 : 0;\n    this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n\n    if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n      return;\n    }\n\n    ctx.save();\n\n    const halfAngle = (this.startAngle + this.endAngle) / 2;\n    ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n    const fix = 1 - Math.sin(Math.min(PI, circumference || 0));\n    const radiusOffset = offset * fix;\n\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n\n    drawArc(ctx, this, radiusOffset, spacing, circular);\n    drawBorder(ctx, this, radiusOffset, spacing, circular);\n\n    ctx.restore();\n  }\n}\n","import Element from '../core/core.element';\nimport {_bezierInterpolation, _pointInLine, _steppedInterpolation} from '../helpers/helpers.interpolation';\nimport {_computeSegments, _boundSegments} from '../helpers/helpers.segment';\nimport {_steppedLineTo, _bezierCurveTo} from '../helpers/helpers.canvas';\nimport {_updateBezierControlPoints} from '../helpers/helpers.curve';\nimport {valueOrDefault} from '../helpers';\n\n/**\n * @typedef { import(\"./element.point\").default } PointElement\n */\n\nfunction setStyle(ctx, options, style = options) {\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\n\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\n\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierCurveTo;\n  }\n\n  return lineTo;\n}\n\nfunction pathVars(points, segment, params = {}) {\n  const count = points.length;\n  const {start: paramsStart = 0, end: paramsEnd = count - 1} = params;\n  const {start: segmentStart, end: segmentEnd} = segment;\n  const start = Math.max(paramsStart, segmentStart);\n  const end = Math.min(paramsEnd, segmentEnd);\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n\n  return {\n    count,\n    start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\n\n/**\n * Create path from points, grouping by truncated x-coordinate\n * Points need to be in order by x-coordinate for this to work efficiently\n * @param {CanvasRenderingContext2D|Path2D} ctx - Context\n * @param {LineElement} line\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} params\n * @param {boolean} params.move - move to starting point (vs line to it)\n * @param {boolean} params.reverse - path the segment from end to start\n * @param {number} params.start - limit segment to points starting from `start` index\n * @param {number} params.end - limit segment to points ending at `start` + `count` index\n */\nfunction pathSegment(ctx, line, segment, params) {\n  const {points, options} = line;\n  const {count, start, loop, ilen} = pathVars(points, segment, params);\n  const lineMethod = getLineMethod(options);\n  // eslint-disable-next-line prefer-const\n  let {move = true, reverse} = params || {};\n  let i, point, prev;\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n\n    if (point.skip) {\n      // If there is a skipped point inside a segment, spanGaps must be true\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n\n    prev = point;\n  }\n\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n\n  return !!loop;\n}\n\n/**\n * Create path from points, grouping by truncated x-coordinate\n * Points need to be in order by x-coordinate for this to work efficiently\n * @param {CanvasRenderingContext2D|Path2D} ctx - Context\n * @param {LineElement} line\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} params\n * @param {boolean} params.move - move to starting point (vs line to it)\n * @param {boolean} params.reverse - path the segment from end to start\n * @param {number} params.start - limit segment to points starting from `start` index\n * @param {number} params.end - limit segment to points ending at `start` + `count` index\n */\nfunction fastPathSegment(ctx, line, segment, params) {\n  const points = line.points;\n  const {count, start, ilen} = pathVars(points, segment, params);\n  const {move = true, reverse} = params || {};\n  let avgX = 0;\n  let countX = 0;\n  let i, point, prevX, minY, maxY, lastY;\n\n  const pointIndex = (index) => (start + (reverse ? ilen - index : index)) % count;\n  const drawX = () => {\n    if (minY !== maxY) {\n      // Draw line to maxY and minY, using the average x-coordinate\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      // Line to y-value of last point in group. So the line continues\n      // from correct position. Not using move, to have solid path.\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n\n    if (point.skip) {\n      // If there is a skipped point inside a segment, spanGaps must be true\n      continue;\n    }\n\n    const x = point.x;\n    const y = point.y;\n    const truncX = x | 0; // truncated x-coordinate\n\n    if (truncX === prevX) {\n      // Determine `minY` / `maxY` and `avgX` while we stay within same x-position\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n      // For first point in group, countX is `0`, so average will be `x` / 1.\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      // Draw line to next x-position, using the first (or only)\n      // y-value in that group\n      ctx.lineTo(x, y);\n\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n    // Keep track of the last y-value in group\n    lastY = y;\n  }\n  drawX();\n}\n\n/**\n * @param {LineElement} line - the line\n * @returns {function}\n * @private\n */\nfunction _getSegmentMethod(line) {\n  const opts = line.options;\n  const borderDash = opts.borderDash && opts.borderDash.length;\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\n\n/**\n * @private\n */\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierInterpolation;\n  }\n\n  return _pointInLine;\n}\n\nfunction strokePathWithCache(ctx, line, start, count) {\n  let path = line._path;\n  if (!path) {\n    path = line._path = new Path2D();\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\n\nfunction strokePathDirect(ctx, line, start, count) {\n  const {segments, options} = line;\n  const segmentMethod = _getSegmentMethod(line);\n\n  for (const segment of segments) {\n    setStyle(ctx, options, segment.style);\n    ctx.beginPath();\n    if (segmentMethod(ctx, line, segment, {start, end: start + count - 1})) {\n      ctx.closePath();\n    }\n    ctx.stroke();\n  }\n}\n\nconst usePath2D = typeof Path2D === 'function';\n\nfunction draw(ctx, line, start, count) {\n  if (usePath2D && !line.options.segment) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\n\nexport default class LineElement extends Element {\n\n  static id = 'line';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderCapStyle: 'butt',\n    borderDash: [],\n    borderDashOffset: 0,\n    borderJoinStyle: 'miter',\n    borderWidth: 3,\n    capBezierPoints: true,\n    cubicInterpolationMode: 'default',\n    fill: false,\n    spanGaps: false,\n    stepped: false,\n    tension: 0,\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n\n  static descriptors = {\n    _scriptable: true,\n    _indexable: (name) => name !== 'borderDash' && name !== 'fill',\n  };\n\n\n  constructor(cfg) {\n    super();\n\n    this.animated = true;\n    this.options = undefined;\n    this._chart = undefined;\n    this._loop = undefined;\n    this._fullLoop = undefined;\n    this._path = undefined;\n    this._points = undefined;\n    this._segments = undefined;\n    this._decimated = false;\n    this._pointsUpdated = false;\n    this._datasetIndex = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  updateControlPoints(chartArea, indexAxis) {\n    const options = this.options;\n    if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n      const loop = options.spanGaps ? this._loop : this._fullLoop;\n      _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n      this._pointsUpdated = true;\n    }\n  }\n\n  set points(points) {\n    this._points = points;\n    delete this._segments;\n    delete this._path;\n    this._pointsUpdated = false;\n  }\n\n  get points() {\n    return this._points;\n  }\n\n  get segments() {\n    return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n  }\n\n  /**\n\t * First non-skipped point on this line\n\t * @returns {PointElement|undefined}\n\t */\n  first() {\n    const segments = this.segments;\n    const points = this.points;\n    return segments.length && points[segments[0].start];\n  }\n\n  /**\n\t * Last non-skipped point on this line\n\t * @returns {PointElement|undefined}\n\t */\n  last() {\n    const segments = this.segments;\n    const points = this.points;\n    const count = segments.length;\n    return count && points[segments[count - 1].end];\n  }\n\n  /**\n\t * Interpolate a point in this line at the same value on `property` as\n\t * the reference `point` provided\n\t * @param {PointElement} point - the reference point\n\t * @param {string} property - the property to match on\n\t * @returns {PointElement|undefined}\n\t */\n  interpolate(point, property) {\n    const options = this.options;\n    const value = point[property];\n    const points = this.points;\n    const segments = _boundSegments(this, {property, start: value, end: value});\n\n    if (!segments.length) {\n      return;\n    }\n\n    const result = [];\n    const _interpolate = _getInterpolationMethod(options);\n    let i, ilen;\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\n      const {start, end} = segments[i];\n      const p1 = points[start];\n      const p2 = points[end];\n      if (p1 === p2) {\n        result.push(p1);\n        continue;\n      }\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\n      interpolated[property] = point[property];\n      result.push(interpolated);\n    }\n    return result.length === 1 ? result[0] : result;\n  }\n\n  /**\n\t * Append a segment of this line to current path.\n\t * @param {CanvasRenderingContext2D} ctx\n\t * @param {object} segment\n\t * @param {number} segment.start - start index of the segment, referring the points array\n \t * @param {number} segment.end - end index of the segment, referring the points array\n \t * @param {boolean} segment.loop - indicates that the segment is a loop\n\t * @param {object} params\n\t * @param {boolean} params.move - move to starting point (vs line to it)\n\t * @param {boolean} params.reverse - path the segment from end to start\n\t * @param {number} params.start - limit segment to points starting from `start` index\n\t * @param {number} params.end - limit segment to points ending at `start` + `count` index\n\t * @returns {undefined|boolean} - true if the segment is a full loop (path should be closed)\n\t */\n  pathSegment(ctx, segment, params) {\n    const segmentMethod = _getSegmentMethod(this);\n    return segmentMethod(ctx, this, segment, params);\n  }\n\n  /**\n\t * Append all segments of this line to current path.\n\t * @param {CanvasRenderingContext2D|Path2D} ctx\n\t * @param {number} [start]\n\t * @param {number} [count]\n\t * @returns {undefined|boolean} - true if line is a full loop (path should be closed)\n\t */\n  path(ctx, start, count) {\n    const segments = this.segments;\n    const segmentMethod = _getSegmentMethod(this);\n    let loop = this._loop;\n\n    start = start || 0;\n    count = count || (this.points.length - start);\n\n    for (const segment of segments) {\n      loop &= segmentMethod(ctx, this, segment, {start, end: start + count - 1});\n    }\n    return !!loop;\n  }\n\n  /**\n\t * Draw\n\t * @param {CanvasRenderingContext2D} ctx\n\t * @param {object} chartArea\n\t * @param {number} [start]\n\t * @param {number} [count]\n\t */\n  draw(ctx, chartArea, start, count) {\n    const options = this.options || {};\n    const points = this.points || [];\n\n    if (points.length && options.borderWidth) {\n      ctx.save();\n\n      draw(ctx, this, start, count);\n\n      ctx.restore();\n    }\n\n    if (this.animated) {\n      // When line is animated, the control points and path are not cached.\n      this._pointsUpdated = false;\n      this._path = undefined;\n    }\n  }\n}\n","import Element from '../core/core.element';\nimport {drawPoint, _isPointInArea} from '../helpers/helpers.canvas';\nimport {\n  type CartesianParsedData,\n  type ChartArea,\n  type Point,\n  type PointHoverOptions,\n  type PointOptions,\n} from '../../types';\n\nfunction inRange(el: PointElement, pos: number, axis: 'x' | 'y', useFinalPosition?: boolean) {\n  const options = el.options;\n  const {[axis]: value} = el.getProps([axis], useFinalPosition);\n\n  return (Math.abs(pos - value) < options.radius + options.hitRadius);\n}\n\nexport type PointProps = Point\n\nexport default class PointElement extends Element<PointProps, PointOptions & PointHoverOptions> {\n\n  static id = 'point';\n\n  parsed: CartesianParsedData;\n  skip?: boolean;\n  stop?: boolean;\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderWidth: 1,\n    hitRadius: 1,\n    hoverBorderWidth: 1,\n    hoverRadius: 4,\n    pointStyle: 'circle',\n    radius: 3,\n    rotation: 0\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.parsed = undefined;\n    this.skip = undefined;\n    this.stop = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  inRange(mouseX: number, mouseY: number, useFinalPosition?: boolean) {\n    const options = this.options;\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return ((Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2)) < Math.pow(options.hitRadius + options.radius, 2));\n  }\n\n  inXRange(mouseX: number, useFinalPosition?: boolean) {\n    return inRange(this, mouseX, 'x', useFinalPosition);\n  }\n\n  inYRange(mouseY: number, useFinalPosition?: boolean) {\n    return inRange(this, mouseY, 'y', useFinalPosition);\n  }\n\n  getCenterPoint(useFinalPosition?: boolean) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n\n  size(options?: Partial<PointOptions & PointHoverOptions>) {\n    options = options || this.options || {};\n    let radius = options.radius || 0;\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\n    const borderWidth = radius && options.borderWidth || 0;\n    return (radius + borderWidth) * 2;\n  }\n\n  draw(ctx: CanvasRenderingContext2D, area: ChartArea) {\n    const options = this.options;\n\n    if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n      return;\n    }\n\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.fillStyle = options.backgroundColor;\n    drawPoint(ctx, options, this.x, this.y);\n  }\n\n  getRange() {\n    const options = this.options || {};\n    // @ts-expect-error Fallbacks should never be hit in practice\n    return options.radius + options.hitRadius;\n  }\n}\n","import Element from '../core/core.element';\nimport {isObject, _isBetween, _limitValue} from '../helpers';\nimport {addRoundedRectPath} from '../helpers/helpers.canvas';\nimport {toTRBL, toTRBLCorners} from '../helpers/helpers.options';\n\n/** @typedef {{ x: number, y: number, base: number, horizontal: boolean, width: number, height: number }} BarProps */\n\n/**\n * Helper function to get the bounds of the bar regardless of the orientation\n * @param {BarElement} bar the bar\n * @param {boolean} [useFinalPosition]\n * @return {object} bounds of the bar\n * @private\n */\nfunction getBarBounds(bar, useFinalPosition) {\n  const {x, y, base, width, height} = /** @type {BarProps} */ (bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition));\n\n  let left, right, top, bottom, half;\n\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n\n  return {left, top, right, bottom};\n}\n\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : _limitValue(value, min, max);\n}\n\nfunction parseBorderWidth(bar, maxW, maxH) {\n  const value = bar.options.borderWidth;\n  const skip = bar.borderSkipped;\n  const o = toTRBL(value);\n\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\n\nfunction parseBorderRadius(bar, maxW, maxH) {\n  const {enableBorderRadius} = bar.getProps(['enableBorderRadius']);\n  const value = bar.options.borderRadius;\n  const o = toTRBLCorners(value);\n  const maxR = Math.min(maxW, maxH);\n  const skip = bar.borderSkipped;\n\n  // If the value is an object, assume the user knows what they are doing\n  // and apply as directed.\n  const enableBorder = enableBorderRadius || isObject(value);\n\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\n\nfunction boundingRects(bar) {\n  const bounds = getBarBounds(bar);\n  const width = bounds.right - bounds.left;\n  const height = bounds.bottom - bounds.top;\n  const border = parseBorderWidth(bar, width / 2, height / 2);\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\n\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r)),\n      }\n    }\n  };\n}\n\nfunction inRange(bar, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const skipBoth = skipX && skipY;\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n\n  return bounds\n\t\t&& (skipX || _isBetween(x, bounds.left, bounds.right))\n\t\t&& (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\n\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n\n/**\n * Add a path of a rectangle to the current sub-path\n * @param {CanvasRenderingContext2D} ctx Context\n * @param {*} rect Bounding rect\n */\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\n\nfunction inflateRect(rect, amount, refRect = {}) {\n  const x = rect.x !== refRect.x ? -amount : 0;\n  const y = rect.y !== refRect.y ? -amount : 0;\n  const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n  const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n  return {\n    x: rect.x + x,\n    y: rect.y + y,\n    w: rect.w + w,\n    h: rect.h + h,\n    radius: rect.radius\n  };\n}\n\nexport default class BarElement extends Element {\n\n  static id = 'bar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderSkipped: 'start',\n    borderWidth: 0,\n    borderRadius: 0,\n    inflateAmount: 'auto',\n    pointStyle: undefined\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.horizontal = undefined;\n    this.base = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.inflateAmount = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  draw(ctx) {\n    const {inflateAmount, options: {borderColor, backgroundColor}} = this;\n    const {inner, outer} = boundingRects(this);\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n\n    ctx.save();\n\n    if (outer.w !== inner.w || outer.h !== inner.h) {\n      ctx.beginPath();\n      addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n      ctx.clip();\n      addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n      ctx.fillStyle = borderColor;\n      ctx.fill('evenodd');\n    }\n\n    ctx.beginPath();\n    addRectPath(ctx, inflateRect(inner, inflateAmount));\n    ctx.fillStyle = backgroundColor;\n    ctx.fill();\n\n    ctx.restore();\n  }\n\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n\n  getCenterPoint(useFinalPosition) {\n    const {x, y, base, horizontal} = /** @type {BarProps} */ (this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition));\n    return {\n      x: horizontal ? (x + base) / 2 : x,\n      y: horizontal ? y : (y + base) / 2\n    };\n  }\n\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n}\n","import type {Chart, ChartConfiguration, ChartDataset} from '../types';\n\nexport interface ColorsPluginOptions {\n  enabled?: boolean;\n}\n\ntype DatasetColorizer = (dataset: ChartDataset, i: number) => void;\n\ninterface ColorsDescriptor {\n  backgroundColor?: unknown;\n  borderColor?: unknown;\n}\n\nconst BORDER_COLORS = [\n  'rgb(54, 162, 235)', // blue\n  'rgb(255, 99, 132)', // red\n  'rgb(255, 159, 64)', // orange\n  'rgb(255, 205, 86)', // yellow\n  'rgb(75, 192, 192)', // green\n  'rgb(153, 102, 255)', // purple\n  'rgb(201, 203, 207)' // grey\n];\n\n// Border colors with 50% transparency\nconst BACKGROUND_COLORS = /* #__PURE__ */ BORDER_COLORS.map(color => color.replace('rgb(', 'rgba(').replace(')', ', 0.5)'));\n\nfunction getBorderColor(i: number) {\n  return BORDER_COLORS[i % BORDER_COLORS.length];\n}\n\nfunction getBackgroundColor(i: number) {\n  return BACKGROUND_COLORS[i % BACKGROUND_COLORS.length];\n}\n\nfunction createDefaultDatasetColorizer() {\n  return (dataset: ChartDataset, i: number) => {\n    dataset.borderColor = getBorderColor(i);\n    dataset.backgroundColor = getBackgroundColor(i);\n  };\n}\n\nfunction createDoughnutDatasetColorizer() {\n  let i = 0;\n\n  return (dataset: ChartDataset) => {\n    dataset.backgroundColor = dataset.data.map(() => getBorderColor(i++));\n  };\n}\n\nfunction createPolarAreaDatasetColorizer() {\n  let i = 0;\n\n  return (dataset: ChartDataset) => {\n    dataset.backgroundColor = dataset.data.map(() => getBackgroundColor(i++));\n  };\n}\n\nfunction getColorizer(type: string) {\n  if (type === 'doughnut' || type === 'pie') {\n    return createDoughnutDatasetColorizer();\n  } else if (type === 'polarArea') {\n    return createPolarAreaDatasetColorizer();\n  }\n  return createDefaultDatasetColorizer();\n}\n\nfunction containsColorsDefinitions(\n  descriptors: ColorsDescriptor[] | Record<string, ColorsDescriptor>\n) {\n  let k: number | string;\n\n  for (k in descriptors) {\n    if (descriptors[k].borderColor || descriptors[k].backgroundColor) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nexport default {\n  id: 'colors',\n\n  defaults: {\n    enabled: true,\n  },\n\n  beforeLayout(chart: Chart, _args, options: ColorsPluginOptions) {\n    if (!options.enabled) {\n      return;\n    }\n\n    const {\n      type,\n      options: {elements},\n      data: {datasets}\n    } = chart.config as ChartConfiguration;\n\n    if (containsColorsDefinitions(datasets) || elements && containsColorsDefinitions(elements)) {\n      return;\n    }\n\n    const colorizer: DatasetColorizer = getColorizer(type);\n    datasets.forEach(colorizer);\n  }\n};\n","import {_limitValue, _lookupByKey, isNullOrUndef, resolve} from '../helpers';\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n  /**\n   * Implementation of the Largest Triangle Three Buckets algorithm.\n   *\n   * This implementation is based on the original implementation by Sveinn Steinarsson\n   * in https://github.com/sveinn-steinarsson/flot-downsample/blob/master/jquery.flot.downsample.js\n   *\n   * The original implementation is MIT licensed.\n   */\n  const samples = options.samples || availableWidth;\n  // There are less points than the threshold, returning the whole array\n  if (samples >= count) {\n    return data.slice(start, start + count);\n  }\n\n  const decimated = [];\n\n  const bucketWidth = (count - 2) / (samples - 2);\n  let sampledIndex = 0;\n  const endIndex = start + count - 1;\n  // Starting from offset\n  let a = start;\n  let i, maxAreaPoint, maxArea, area, nextA;\n\n  decimated[sampledIndex++] = data[a];\n\n  for (i = 0; i < samples - 2; i++) {\n    let avgX = 0;\n    let avgY = 0;\n    let j;\n\n    // Adding offset\n    const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n    const avgRangeLength = avgRangeEnd - avgRangeStart;\n\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX += data[j].x;\n      avgY += data[j].y;\n    }\n\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n\n    // Adding offset\n    const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n    const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n    const {x: pointAx, y: pointAy} = data[a];\n\n    // Note that this is changed from the original algorithm which initializes these\n    // values to 1. The reason for this change is that if the area is small, nextA\n    // would never be set and thus a crash would occur in the next loop as `a` would become\n    // `undefined`. Since the area is always positive, but could be 0 in the case of a flat trace,\n    // initializing with a negative number is the correct solution.\n    maxArea = area = -1;\n\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs(\n        (pointAx - avgX) * (data[j].y - pointAy) -\n        (pointAx - data[j].x) * (avgY - pointAy)\n      );\n\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n\n  // Include the last point\n  decimated[sampledIndex++] = data[endIndex];\n\n  return decimated;\n}\n\nfunction minMaxDecimation(data, start, count, availableWidth) {\n  let avgX = 0;\n  let countX = 0;\n  let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  const decimated = [];\n  const endIndex = start + count - 1;\n\n  const xMin = data[start].x;\n  const xMax = data[endIndex].x;\n  const dx = xMax - xMin;\n\n  for (i = start; i < start + count; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    const truncX = x | 0;\n\n    if (truncX === prevX) {\n      // Determine `minY` / `maxY` and `avgX` while we stay within same x-position\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n      // For first point in group, countX is `0`, so average will be `x` / 1.\n      // Use point.x here because we're computing the average data `x` value\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      // Push up to 4 points, 3 for the last interval and the first point for this interval\n      const lastIndex = i - 1;\n\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n        // The interval is defined by 4 points: start, min, max, end.\n        // The starting point is already considered at this point, so we need to determine which\n        // of the other points to add. We need to sort these points to ensure the decimated data\n        // is still sorted and then ensure there are no duplicates.\n        const intermediateIndex1 = Math.min(minIndex, maxIndex);\n        const intermediateIndex2 = Math.max(minIndex, maxIndex);\n\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex1],\n            x: avgX,\n          });\n        }\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex2],\n            x: avgX\n          });\n        }\n      }\n\n      // lastIndex === startIndex will occur when a range has only 1 point which could\n      // happen with very uneven data\n      if (i > 0 && lastIndex !== startIndex) {\n        // Last point in the previous interval\n        decimated.push(data[lastIndex]);\n      }\n\n      // Start of the new interval\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n\n  return decimated;\n}\n\nfunction cleanDecimatedDataset(dataset) {\n  if (dataset._decimated) {\n    const data = dataset._data;\n    delete dataset._decimated;\n    delete dataset._data;\n    Object.defineProperty(dataset, 'data', {value: data});\n  }\n}\n\nfunction cleanDecimatedData(chart) {\n  chart.data.datasets.forEach((dataset) => {\n    cleanDecimatedDataset(dataset);\n  });\n}\n\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n  const pointCount = points.length;\n\n  let start = 0;\n  let count;\n\n  const {iScale} = meta;\n  const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n\n  if (minDefined) {\n    start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n  }\n  if (maxDefined) {\n    count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n  } else {\n    count = pointCount - start;\n  }\n\n  return {start, count};\n}\n\nexport default {\n  id: 'decimation',\n\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false,\n  },\n\n  beforeElementsUpdate: (chart, args, options) => {\n    if (!options.enabled) {\n      // The decimation plugin may have been previously enabled. Need to remove old `dataset._data` handlers\n      cleanDecimatedData(chart);\n      return;\n    }\n\n    // Assume the entire chart is available to show a few more points than needed\n    const availableWidth = chart.width;\n\n    chart.data.datasets.forEach((dataset, datasetIndex) => {\n      const {_data, indexAxis} = dataset;\n      const meta = chart.getDatasetMeta(datasetIndex);\n      const data = _data || dataset.data;\n\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\n        // Decimation is only supported for lines that have an X indexAxis\n        return;\n      }\n\n      if (!meta.controller.supportsDecimation) {\n        // Only line datasets are supported\n        return;\n      }\n\n      const xAxis = chart.scales[meta.xAxisID];\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        // Only linear interpolation is supported\n        return;\n      }\n\n      if (chart.options.parsing) {\n        // Plugin only supports data that does not need parsing\n        return;\n      }\n\n      let {start, count} = getStartAndCountOfVisiblePointsSimplified(meta, data);\n      const threshold = options.threshold || 4 * availableWidth;\n      if (count <= threshold) {\n        // No decimation is required until we are above this threshold\n        cleanDecimatedDataset(dataset);\n        return;\n      }\n\n      if (isNullOrUndef(_data)) {\n        // First time we are seeing this dataset\n        // We override the 'data' property with a setter that stores the\n        // raw data in _data, but reads the decimated data from _decimated\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function() {\n            return this._decimated;\n          },\n          set: function(d) {\n            this._data = d;\n          }\n        });\n      }\n\n      // Point the chart to the decimated data\n      let decimated;\n      switch (options.algorithm) {\n      case 'lttb':\n        decimated = lttbDecimation(data, start, count, availableWidth, options);\n        break;\n      case 'min-max':\n        decimated = minMaxDecimation(data, start, count, availableWidth);\n        break;\n      default:\n        throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n      }\n\n      dataset._decimated = decimated;\n    });\n  },\n\n  destroy(chart) {\n    cleanDecimatedData(chart);\n  }\n};\n","import {_boundSegment, _boundSegments, _normalizeAngle} from '../../helpers';\n\nexport function _segments(line, target, property) {\n  const segments = line.segments;\n  const points = line.points;\n  const tpoints = target.points;\n  const parts = [];\n\n  for (const segment of segments) {\n    let {start, end} = segment;\n    end = _findSegmentEnd(start, end, points);\n\n    const bounds = _getBounds(property, points[start], points[end], segment.loop);\n\n    if (!target.segments) {\n      // Special case for boundary not supporting `segments` (simpleArc)\n      // Bounds are provided as `target` for partial circle, or undefined for full circle\n      parts.push({\n        source: segment,\n        target: bounds,\n        start: points[start],\n        end: points[end]\n      });\n      continue;\n    }\n\n    // Get all segments from `target` that intersect the bounds of current segment of `line`\n    const targetSegments = _boundSegments(target, bounds);\n\n    for (const tgt of targetSegments) {\n      const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n      const fillSources = _boundSegment(segment, points, subBounds);\n\n      for (const fillSource of fillSources) {\n        parts.push({\n          source: fillSource,\n          target: tgt,\n          start: {\n            [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n          },\n          end: {\n            [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n          }\n        });\n      }\n    }\n  }\n  return parts;\n}\n\nexport function _getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n  let start = first[property];\n  let end = last[property];\n\n  if (property === 'angle') {\n    start = _normalizeAngle(start);\n    end = _normalizeAngle(end);\n  }\n  return {property, start, end};\n}\n\nexport function _pointsFromSegments(boundary, line) {\n  const {x = null, y = null} = boundary || {};\n  const linePoints = line.points;\n  const points = [];\n  line.segments.forEach(({start, end}) => {\n    end = _findSegmentEnd(start, end, linePoints);\n    const first = linePoints[start];\n    const last = linePoints[end];\n    if (y !== null) {\n      points.push({x: first.x, y});\n      points.push({x: last.x, y});\n    } else if (x !== null) {\n      points.push({x, y: first.y});\n      points.push({x, y: last.y});\n    }\n  });\n  return points;\n}\n\nexport function _findSegmentEnd(start, end, points) {\n  for (;end > start; end--) {\n    const point = points[end];\n    if (!isNaN(point.x) && !isNaN(point.y)) {\n      break;\n    }\n  }\n  return end;\n}\n\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n  return a ? a[prop] : b ? b[prop] : 0;\n}\n","/**\n * @typedef { import('../../core/core.controller').default } Chart\n * @typedef { import('../../core/core.scale').default } Scale\n * @typedef { import('../../elements/element.point').default } PointElement\n */\n\nimport {LineElement} from '../../elements';\nimport {isArray} from '../../helpers';\nimport {_pointsFromSegments} from './filler.segment';\n\n/**\n * @param {PointElement[] | { x: number; y: number; }} boundary\n * @param {LineElement} line\n * @return {LineElement?}\n */\nexport function _createBoundaryLine(boundary, line) {\n  let points = [];\n  let _loop = false;\n\n  if (isArray(boundary)) {\n    _loop = true;\n    // @ts-ignore\n    points = boundary;\n  } else {\n    points = _pointsFromSegments(boundary, line);\n  }\n\n  return points.length ? new LineElement({\n    points,\n    options: {tension: 0},\n    _loop,\n    _fullLoop: _loop\n  }) : null;\n}\n\nexport function _shouldApplyFill(source) {\n  return source && source.fill !== false;\n}\n","import {isObject, isFinite, valueOrDefault} from '../../helpers/helpers.core';\n\n/**\n * @typedef { import('../../core/core.scale').default } Scale\n * @typedef { import('../../elements/element.line').default } LineElement\n * @typedef { import('../../../types').FillTarget } FillTarget\n * @typedef { import('../../../types').ComplexFillTarget } ComplexFillTarget\n */\n\nexport function _resolveTarget(sources, index, propagate) {\n  const source = sources[index];\n  let fill = source.fill;\n  const visited = [index];\n  let target;\n\n  if (!propagate) {\n    return fill;\n  }\n\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isFinite(fill)) {\n      return fill;\n    }\n\n    target = sources[fill];\n    if (!target) {\n      return false;\n    }\n\n    if (target.visible) {\n      return fill;\n    }\n\n    visited.push(fill);\n    fill = target.fill;\n  }\n\n  return false;\n}\n\n/**\n * @param {LineElement} line\n * @param {number} index\n * @param {number} count\n */\nexport function _decodeFill(line, index, count) {\n  /** @type {string | {value: number}} */\n  const fill = parseFillOption(line);\n\n  if (isObject(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n\n  let target = parseFloat(fill);\n\n  if (isFinite(target) && Math.floor(target) === target) {\n    return decodeTargetIndex(fill[0], index, target, count);\n  }\n\n  return ['origin', 'start', 'end', 'stack', 'shape'].indexOf(fill) >= 0 && fill;\n}\n\nfunction decodeTargetIndex(firstCh, index, target, count) {\n  if (firstCh === '-' || firstCh === '+') {\n    target = index + target;\n  }\n\n  if (target === index || target < 0 || target >= count) {\n    return false;\n  }\n\n  return target;\n}\n\n/**\n * @param {FillTarget | ComplexFillTarget} fill\n * @param {Scale} scale\n * @returns {number | null}\n */\nexport function _getTargetPixel(fill, scale) {\n  let pixel = null;\n  if (fill === 'start') {\n    pixel = scale.bottom;\n  } else if (fill === 'end') {\n    pixel = scale.top;\n  } else if (isObject(fill)) {\n    // @ts-ignore\n    pixel = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    pixel = scale.getBasePixel();\n  }\n  return pixel;\n}\n\n/**\n * @param {FillTarget | ComplexFillTarget} fill\n * @param {Scale} scale\n * @param {number} startValue\n * @returns {number | undefined}\n */\nexport function _getTargetValue(fill, scale, startValue) {\n  let value;\n\n  if (fill === 'start') {\n    value = startValue;\n  } else if (fill === 'end') {\n    value = scale.options.reverse ? scale.min : scale.max;\n  } else if (isObject(fill)) {\n    // @ts-ignore\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n  return value;\n}\n\n/**\n * @param {LineElement} line\n */\nfunction parseFillOption(line) {\n  const options = line.options;\n  const fillOption = options.fill;\n  let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n\n  if (fill === false || fill === null) {\n    return false;\n  }\n\n  if (fill === true) {\n    return 'origin';\n  }\n  return fill;\n}\n","/**\n * @typedef { import('../../core/core.controller').default } Chart\n * @typedef { import('../../core/core.scale').default } Scale\n * @typedef { import('../../elements/element.point').default } PointElement\n */\n\nimport {LineElement} from '../../elements';\nimport {_isBetween} from '../../helpers';\nimport {_createBoundaryLine} from './filler.helper';\n\n/**\n * @param {{ chart: Chart; scale: Scale; index: number; line: LineElement; }} source\n * @return {LineElement}\n */\nexport function _buildStackLine(source) {\n  const {scale, index, line} = source;\n  const points = [];\n  const segments = line.segments;\n  const sourcePoints = line.points;\n  const linesBelow = getLinesBelow(scale, index);\n  linesBelow.push(_createBoundaryLine({x: null, y: scale.bottom}, line));\n\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    for (let j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n  return new LineElement({points, options: {}});\n}\n\n/**\n * @param {Scale} scale\n * @param {number} index\n * @return {LineElement[]}\n */\nfunction getLinesBelow(scale, index) {\n  const below = [];\n  const metas = scale.getMatchingVisibleMetas('line');\n\n  for (let i = 0; i < metas.length; i++) {\n    const meta = metas[i];\n    if (meta.index === index) {\n      break;\n    }\n    if (!meta.hidden) {\n      below.unshift(meta.dataset);\n    }\n  }\n  return below;\n}\n\n/**\n * @param {PointElement[]} points\n * @param {PointElement} sourcePoint\n * @param {LineElement[]} linesBelow\n */\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  const postponed = [];\n  for (let j = 0; j < linesBelow.length; j++) {\n    const line = linesBelow[j];\n    const {first, last, point} = findPoint(line, sourcePoint, 'x');\n\n    if (!point || (first && last)) {\n      continue;\n    }\n    if (first) {\n      // First point of an segment -> need to add another point before this,\n      // from next line below.\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n      if (!last) {\n        // In the middle of an segment, no need to add more points.\n        break;\n      }\n    }\n  }\n  points.push(...postponed);\n}\n\n/**\n * @param {LineElement} line\n * @param {PointElement} sourcePoint\n * @param {string} property\n * @returns {{point?: PointElement, first?: boolean, last?: boolean}}\n */\nfunction findPoint(line, sourcePoint, property) {\n  const point = line.interpolate(sourcePoint, property);\n  if (!point) {\n    return {};\n  }\n\n  const pointValue = point[property];\n  const segments = line.segments;\n  const linePoints = line.points;\n  let first = false;\n  let last = false;\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    const firstValue = linePoints[segment.start][property];\n    const lastValue = linePoints[segment.end][property];\n    if (_isBetween(pointValue, firstValue, lastValue)) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n  return {first, last, point};\n}\n","import {TAU} from '../../helpers';\n\n// TODO: use elements.ArcElement instead\nexport class simpleArc {\n  constructor(opts) {\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n\n  pathSegment(ctx, bounds, opts) {\n    const {x, y, radius} = this;\n    bounds = bounds || {start: 0, end: TAU};\n    ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n    return !opts.bounds;\n  }\n\n  interpolate(point) {\n    const {x, y, radius} = this;\n    const angle = point.angle;\n    return {\n      x: x + Math.cos(angle) * radius,\n      y: y + Math.sin(angle) * radius,\n      angle\n    };\n  }\n}\n","import {isFinite} from '../../helpers';\nimport {_createBoundaryLine} from './filler.helper';\nimport {_getTargetPixel, _getTargetValue} from './filler.options';\nimport {_buildStackLine} from './filler.target.stack';\nimport {simpleArc} from './simpleArc';\n\n/**\n * @typedef { import('../../core/core.controller').default } Chart\n * @typedef { import('../../core/core.scale').default } Scale\n * @typedef { import('../../elements/element.point').default } PointElement\n */\n\nexport function _getTarget(source) {\n  const {chart, fill, line} = source;\n\n  if (isFinite(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n\n  if (fill === 'stack') {\n    return _buildStackLine(source);\n  }\n\n  if (fill === 'shape') {\n    return true;\n  }\n\n  const boundary = computeBoundary(source);\n\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n\n  return _createBoundaryLine(boundary, line);\n}\n\n/**\n * @param {Chart} chart\n * @param {number} index\n */\nfunction getLineByIndex(chart, index) {\n  const meta = chart.getDatasetMeta(index);\n  const visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\n\nfunction computeBoundary(source) {\n  const scale = source.scale || {};\n\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n  return computeLinearBoundary(source);\n}\n\n\nfunction computeLinearBoundary(source) {\n  const {scale = {}, fill} = source;\n  const pixel = _getTargetPixel(fill, scale);\n\n  if (isFinite(pixel)) {\n    const horizontal = scale.isHorizontal();\n\n    return {\n      x: horizontal ? pixel : null,\n      y: horizontal ? null : pixel\n    };\n  }\n\n  return null;\n}\n\nfunction computeCircularBoundary(source) {\n  const {scale, fill} = source;\n  const options = scale.options;\n  const length = scale.getLabels().length;\n  const start = options.reverse ? scale.max : scale.min;\n  const value = _getTargetValue(fill, scale, start);\n  const target = [];\n\n  if (options.grid.circular) {\n    const center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n\n  for (let i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n  return target;\n}\n\n","import {clipArea, unclipArea} from '../../helpers';\nimport {_findSegmentEnd, _getBounds, _segments} from './filler.segment';\nimport {_getTarget} from './filler.target';\n\nexport function _drawfill(ctx, source, area) {\n  const target = _getTarget(source);\n  const {line, scale, axis} = source;\n  const lineOpts = line.options;\n  const fillOption = lineOpts.fill;\n  const color = lineOpts.backgroundColor;\n  const {above = color, below = color} = fillOption || {};\n  if (target && line.points.length) {\n    clipArea(ctx, area);\n    doFill(ctx, {line, target, above, below, area, scale, axis});\n    unclipArea(ctx);\n  }\n}\n\nfunction doFill(ctx, cfg) {\n  const {line, target, above, below, area, scale} = cfg;\n  const property = line._loop ? 'angle' : cfg.axis;\n\n  ctx.save();\n\n  if (property === 'x' && below !== above) {\n    clipVertical(ctx, target, area.top);\n    fill(ctx, {line, target, color: above, scale, property});\n    ctx.restore();\n    ctx.save();\n    clipVertical(ctx, target, area.bottom);\n  }\n  fill(ctx, {line, target, color: below, scale, property});\n\n  ctx.restore();\n}\n\nfunction clipVertical(ctx, target, clipY) {\n  const {segments, points} = target;\n  let first = true;\n  let lineLoop = false;\n\n  ctx.beginPath();\n  for (const segment of segments) {\n    const {start, end} = segment;\n    const firstPoint = points[start];\n    const lastPoint = points[_findSegmentEnd(start, end, points)];\n    if (first) {\n      ctx.moveTo(firstPoint.x, firstPoint.y);\n      first = false;\n    } else {\n      ctx.lineTo(firstPoint.x, clipY);\n      ctx.lineTo(firstPoint.x, firstPoint.y);\n    }\n    lineLoop = !!target.pathSegment(ctx, segment, {move: lineLoop});\n    if (lineLoop) {\n      ctx.closePath();\n    } else {\n      ctx.lineTo(lastPoint.x, clipY);\n    }\n  }\n\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\n\nfunction fill(ctx, cfg) {\n  const {line, target, property, color, scale} = cfg;\n  const segments = _segments(line, target, property);\n\n  for (const {source: src, target: tgt, start, end} of segments) {\n    const {style: {backgroundColor = color} = {}} = src;\n    const notShape = target !== true;\n\n    ctx.save();\n    ctx.fillStyle = backgroundColor;\n\n    clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\n\n    ctx.beginPath();\n\n    const lineLoop = !!line.pathSegment(ctx, src);\n\n    let loop;\n    if (notShape) {\n      if (lineLoop) {\n        ctx.closePath();\n      } else {\n        interpolatedLineTo(ctx, target, end, property);\n      }\n\n      const targetLoop = !!target.pathSegment(ctx, tgt, {move: lineLoop, reverse: true});\n      loop = lineLoop && targetLoop;\n      if (!loop) {\n        interpolatedLineTo(ctx, target, start, property);\n      }\n    }\n\n    ctx.closePath();\n    ctx.fill(loop ? 'evenodd' : 'nonzero');\n\n    ctx.restore();\n  }\n}\n\nfunction clipBounds(ctx, scale, bounds) {\n  const {top, bottom} = scale.chart.chartArea;\n  const {property, start, end} = bounds || {};\n  if (property === 'x') {\n    ctx.beginPath();\n    ctx.rect(start, top, end - start, bottom - top);\n    ctx.clip();\n  }\n}\n\nfunction interpolatedLineTo(ctx, target, point, property) {\n  const interpolatedPoint = target.interpolate(point, property);\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\n\n","/**\n * Plugin based on discussion from the following Chart.js issues:\n * @see https://github.com/chartjs/Chart.js/issues/2380#issuecomment-279961569\n * @see https://github.com/chartjs/Chart.js/issues/2440#issuecomment-256461897\n */\n\nimport LineElement from '../../elements/element.line';\nimport {_drawfill} from './filler.drawing';\nimport {_shouldApplyFill} from './filler.helper';\nimport {_decodeFill, _resolveTarget} from './filler.options';\n\nexport default {\n  id: 'filler',\n\n  afterDatasetsUpdate(chart, _args, options) {\n    const count = (chart.data.datasets || []).length;\n    const sources = [];\n    let meta, i, line, source;\n\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: _decodeFill(line, i, count),\n          chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line,\n        };\n      }\n\n      meta.$filler = source;\n      sources.push(source);\n    }\n\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n      if (!source || source.fill === false) {\n        continue;\n      }\n\n      source.fill = _resolveTarget(sources, i, options.propagate);\n    }\n  },\n\n  beforeDraw(chart, _args, options) {\n    const draw = options.drawTime === 'beforeDraw';\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const area = chart.chartArea;\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (!source) {\n        continue;\n      }\n\n      source.line.updateControlPoints(area, source.axis);\n      if (draw && source.fill) {\n        _drawfill(chart.ctx, source, area);\n      }\n    }\n  },\n\n  beforeDatasetsDraw(chart, _args, options) {\n    if (options.drawTime !== 'beforeDatasetsDraw') {\n      return;\n    }\n\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n\n      if (_shouldApplyFill(source)) {\n        _drawfill(chart.ctx, source, chart.chartArea);\n      }\n    }\n  },\n\n  beforeDatasetDraw(chart, args, options) {\n    const source = args.meta.$filler;\n\n    if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n\n    _drawfill(chart.ctx, source, chart.chartArea);\n  },\n\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\n","import defaults from '../core/core.defaults';\nimport Element from '../core/core.element';\nimport layouts from '../core/core.layouts';\nimport {addRoundedRectPath, drawPointLegend, renderText} from '../helpers/helpers.canvas';\nimport {\n  _isBetween,\n  callback as call,\n  clipArea,\n  getRtlAdapter,\n  overrideTextDirection,\n  restoreTextDirection,\n  toFont,\n  toPadding,\n  unclipArea,\n  valueOrDefault,\n} from '../helpers/index';\nimport {_alignStartEnd, _textX, _toLeftRightCenter} from '../helpers/helpers.extras';\nimport {toTRBLCorners} from '../helpers/helpers.options';\n\n/**\n * @typedef { import(\"../../types\").ChartEvent } ChartEvent\n */\n\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {boxHeight = fontSize, boxWidth = fontSize} = labelOpts;\n\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n  }\n\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\n\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\n\nexport class Legend extends Element {\n\n  /**\n\t * @param {{ ctx: any; options: any; chart: any; }} config\n\t */\n  constructor(config) {\n    super();\n\n    this._added = false;\n\n    // Contains hit boxes for each dataset (in dataset order)\n    this.legendHitBoxes = [];\n\n    /**\n \t\t * @private\n \t\t */\n    this._hoveredItem = null;\n\n    // Are we in doughnut mode which has a different data type\n    this.doughnutMode = false;\n\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n\n  update(maxWidth, maxHeight, margins) {\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins;\n\n    this.setDimensions();\n    this.buildLabels();\n    this.fit();\n  }\n\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = this._margins.left;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = this._margins.top;\n      this.bottom = this.height;\n    }\n  }\n\n  buildLabels() {\n    const labelOpts = this.options.labels || {};\n    let legendItems = call(labelOpts.generateLabels, [this.chart], this) || [];\n\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter((item) => labelOpts.filter(item, this.chart.data));\n    }\n\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, this.chart.data));\n    }\n\n    if (this.options.reverse) {\n      legendItems.reverse();\n    }\n\n    this.legendItems = legendItems;\n  }\n\n  fit() {\n    const {options, ctx} = this;\n\n    // The legend may not be displayed for a variety of reasons including\n    // the fact that the defaults got set to `false`.\n    // When the legend is not displayed, there are no guarantees that the options\n    // are correctly formatted so we need to bail out as early as possible.\n    if (!options.display) {\n      this.width = this.height = 0;\n      return;\n    }\n\n    const labelOpts = options.labels;\n    const labelFont = toFont(labelOpts.font);\n    const fontSize = labelFont.size;\n    const titleHeight = this._computeTitleHeight();\n    const {boxWidth, itemHeight} = getBoxSize(labelOpts, fontSize);\n\n    let width, height;\n\n    ctx.font = labelFont.string;\n\n    if (this.isHorizontal()) {\n      width = this.maxWidth; // fill all the width\n      height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = this.maxHeight; // fill all the height\n      width = this._fitCols(titleHeight, labelFont, boxWidth, itemHeight) + 10;\n    }\n\n    this.width = Math.min(width, options.maxWidth || this.maxWidth);\n    this.height = Math.min(height, options.maxHeight || this.maxHeight);\n  }\n\n  /**\n\t * @private\n\t */\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {ctx, maxWidth, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    // Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\n    const lineWidths = this.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n\n    let row = -1;\n    let top = -lineHeight;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n\n      hitboxes[i] = {left: 0, top, row, width: itemWidth, height: itemHeight};\n\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n\n    return totalHeight;\n  }\n\n  _fitCols(titleHeight, labelFont, boxWidth, _itemHeight) {\n    const {ctx, maxHeight, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const columnSizes = this.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n\n    let left = 0;\n    let col = 0;\n\n    this.legendItems.forEach((legendItem, i) => {\n      const {itemWidth, itemHeight} = calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight);\n\n      // If too tall, go to new column\n      if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({width: currentColWidth, height: currentColHeight}); // previous column size\n        left += currentColWidth + padding;\n        col++;\n        currentColWidth = currentColHeight = 0;\n      }\n\n      // Store the hitbox width and height here. Final position will be updated in `draw`\n      hitboxes[i] = {left, top: currentColHeight, col, width: itemWidth, height: itemHeight};\n\n      // Get max width\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += itemHeight + padding;\n    });\n\n    totalWidth += currentColWidth;\n    columnSizes.push({width: currentColWidth, height: currentColHeight}); // previous column size\n\n    return totalWidth;\n  }\n\n  adjustHitBoxes() {\n    if (!this.options.display) {\n      return;\n    }\n    const titleHeight = this._computeTitleHeight();\n    const {legendHitBoxes: hitboxes, options: {align, labels: {padding}, rtl}} = this;\n    const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n    if (this.isHorizontal()) {\n      let row = 0;\n      let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n        }\n        hitbox.top += this.top + titleHeight + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n        left += hitbox.width + padding;\n      }\n    } else {\n      let col = 0;\n      let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n      for (const hitbox of hitboxes) {\n        if (hitbox.col !== col) {\n          col = hitbox.col;\n          top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n        }\n        hitbox.top = top;\n        hitbox.left += this.left + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n        top += hitbox.height + padding;\n      }\n    }\n  }\n\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n\n  draw() {\n    if (this.options.display) {\n      const ctx = this.ctx;\n      clipArea(ctx, this);\n\n      this._draw();\n\n      unclipArea(ctx);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _draw() {\n    const {options: opts, columnSizes, lineWidths, ctx} = this;\n    const {align, labels: labelOpts} = opts;\n    const defaultColor = defaults.color;\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const labelFont = toFont(labelOpts.font);\n    const {padding} = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n\n    this.drawTitle();\n\n    // Canvas setup\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.font = labelFont.string;\n\n    const {boxWidth, boxHeight, itemHeight} = getBoxSize(labelOpts, fontSize);\n\n    // current position\n    const drawLegendBox = function(x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n\n      // Set the ctx for the box\n      ctx.save();\n\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n\n      if (labelOpts.usePointStyle) {\n        // Recalculate x and y for drawPoint() because its expecting\n        // x and y to be center of figure (instead of top left)\n        const drawOptions = {\n          radius: boxHeight * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n\n        // Draw pointStyle as legend symbol\n        drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n      } else {\n        // Draw box as legend symbol\n        // Adjust position when boxHeight < fontSize (want it centered)\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n        const borderRadius = toTRBLCorners(legendItem.borderRadius);\n\n        ctx.beginPath();\n\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          addRoundedRectPath(ctx, {\n            x: xBoxLeft,\n            y: yBoxTop,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius,\n          });\n        } else {\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n        }\n\n        ctx.fill();\n        if (lineWidth !== 0) {\n          ctx.stroke();\n        }\n      }\n\n      ctx.restore();\n    };\n\n    const fillText = function(x, y, legendItem) {\n      renderText(ctx, legendItem.text, x, y + (itemHeight / 2), labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: rtlHelper.textAlign(legendItem.textAlign)\n      });\n    };\n\n    // Horizontal\n    const isHorizontal = this.isHorizontal();\n    const titleHeight = this._computeTitleHeight();\n    if (isHorizontal) {\n      cursor = {\n        x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n        y: this.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: this.left + padding,\n        y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n\n    overrideTextDirection(this.ctx, opts.textDirection);\n\n    const lineHeight = itemHeight + padding;\n    this.legendItems.forEach((legendItem, i) => {\n      ctx.strokeStyle = legendItem.fontColor; // for strikethrough effect\n      ctx.fillStyle = legendItem.fontColor; // render in correct colour\n\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + halfFontSize + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n\n      rtlHelper.setWidth(this.width);\n\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > this.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > this.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n      }\n\n      const realX = rtlHelper.x(x);\n\n      drawLegendBox(realX, y, legendItem);\n\n      x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n\n      // Fill the actual label\n      fillText(rtlHelper.x(x), y, legendItem);\n\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else if (typeof legendItem.text !== 'string') {\n        const fontLineHeight = labelFont.lineHeight;\n        cursor.y += calculateLegendItemHeight(legendItem, fontLineHeight);\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n\n    restoreTextDirection(this.ctx, opts.textDirection);\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {\n    const opts = this.options;\n    const titleOpts = opts.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n\n    if (!titleOpts.display) {\n      return;\n    }\n\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const ctx = this.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n\n    // These defaults are used when the legend is vertical.\n    // When horizontal, they are computed below.\n    let left = this.left;\n    let maxWidth = this.width;\n\n    if (this.isHorizontal()) {\n      // Move left / right so that the title is above the legend lines\n      maxWidth = Math.max(...this.lineWidths);\n      y = this.top + topPaddingPlusHalfFontSize;\n      left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n    } else {\n      // Move down so that the title is above the legend stack in every alignment\n      const maxHeight = this.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n    }\n\n    // Now that we know the left edge of the inner legend box, compute the correct\n    // X coordinate from the title alignment\n    const x = _alignStartEnd(position, left, left + maxWidth);\n\n    // Canvas setup\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n\n    renderText(ctx, titleOpts.text, x, y, titleFont);\n  }\n\n  /**\n\t * @private\n\t */\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n\n  /**\n\t * @private\n\t */\n  _getLegendItemAt(x, y) {\n    let i, hitBox, lh;\n\n    if (_isBetween(x, this.left, this.right)\n      && _isBetween(y, this.top, this.bottom)) {\n      // See if we are touching one of the dataset boxes\n      lh = this.legendHitBoxes;\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n\n        if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width)\n          && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n          // Touching an element\n          return this.legendItems[i];\n        }\n      }\n    }\n\n    return null;\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e - The event to handle\n\t */\n  handleEvent(e) {\n    const opts = this.options;\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n\n    // Chart event already has relative position in it\n    const hoveredItem = this._getLegendItemAt(e.x, e.y);\n\n    if (e.type === 'mousemove' || e.type === 'mouseout') {\n      const previous = this._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n      if (previous && !sameItem) {\n        call(opts.onLeave, [e, previous, this], this);\n      }\n\n      this._hoveredItem = hoveredItem;\n\n      if (hoveredItem && !sameItem) {\n        call(opts.onHover, [e, hoveredItem, this], this);\n      }\n    } else if (hoveredItem) {\n      call(opts.onClick, [e, hoveredItem, this], this);\n    }\n  }\n}\n\nfunction calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight) {\n  const itemWidth = calculateItemWidth(legendItem, boxWidth, labelFont, ctx);\n  const itemHeight = calculateItemHeight(_itemHeight, legendItem, labelFont.lineHeight);\n  return {itemWidth, itemHeight};\n}\n\nfunction calculateItemWidth(legendItem, boxWidth, labelFont, ctx) {\n  let legendItemText = legendItem.text;\n  if (legendItemText && typeof legendItemText !== 'string') {\n    legendItemText = legendItemText.reduce((a, b) => a.length > b.length ? a : b);\n  }\n  return boxWidth + (labelFont.size / 2) + ctx.measureText(legendItemText).width;\n}\n\nfunction calculateItemHeight(_itemHeight, legendItem, fontLineHeight) {\n  let itemHeight = _itemHeight;\n  if (typeof legendItem.text !== 'string') {\n    itemHeight = calculateLegendItemHeight(legendItem, fontLineHeight);\n  }\n  return itemHeight;\n}\n\nfunction calculateLegendItemHeight(legendItem, fontLineHeight) {\n  const labelHeight = legendItem.text ? legendItem.text.length + 0.5 : 0;\n  return fontLineHeight * labelHeight;\n}\n\nfunction isListened(type, opts) {\n  if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n  return false;\n}\n\nexport default {\n  id: 'legend',\n\n  /**\n\t * For tests\n\t * @private\n\t */\n  _element: Legend,\n\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({ctx: chart.ctx, options, chart});\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n\n  // During the beforeUpdate step, the layout configuration needs to run\n  // This ensures that if the legend position changes (via an option update)\n  // the layout system respects the change. See https://github.com/chartjs/Chart.js/issues/7527\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n\n  // The labels need to be built after datasets are updated to ensure that colors\n  // and other styling are correct. See https://github.com/chartjs/Chart.js/issues/6968\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n\n\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n\n    // a callback that will handle\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n\n    onHover: null,\n    onLeave: null,\n\n    labels: {\n      color: (ctx) => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n      // Generates labels shown in the legend\n      // Valid properties to return:\n      // text : text to display\n      // fillStyle : fill of coloured box\n      // strokeStyle: stroke of coloured box\n      // hidden : if this legend item refers to a hidden item\n      // lineCap : cap style for line\n      // lineDash\n      // lineDashOffset :\n      // lineJoin :\n      // lineWidth :\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {labels: {usePointStyle, pointStyle, textAlign, color, useBorderRadius, borderRadius}} = chart.legend.options;\n\n        return chart._getSortedDatasetMetas().map((meta) => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = toPadding(style.borderWidth);\n\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\n\n            // Below is extra data used for toggling the datasets\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n\n    title: {\n      color: (ctx) => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: '',\n    }\n  },\n\n  descriptors: {\n    _scriptable: (name) => !name.startsWith('on'),\n    labels: {\n      _scriptable: (name) => !['generateLabels', 'filter', 'sort'].includes(name),\n    }\n  },\n};\n","import Element from '../core/core.element';\nimport layouts from '../core/core.layouts';\nimport {PI, isArray, toPadding, toFont} from '../helpers';\nimport {_toLeftRightCenter, _alignStartEnd} from '../helpers/helpers.extras';\nimport {renderText} from '../helpers/helpers.canvas';\n\nexport class Title extends Element {\n  /**\n\t * @param {{ ctx: any; options: any; chart: any; }} config\n\t */\n  constructor(config) {\n    super();\n\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this._padding = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n\n  update(maxWidth, maxHeight) {\n    const opts = this.options;\n\n    this.left = 0;\n    this.top = 0;\n\n    if (!opts.display) {\n      this.width = this.height = this.right = this.bottom = 0;\n      return;\n    }\n\n    this.width = this.right = maxWidth;\n    this.height = this.bottom = maxHeight;\n\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\n    this._padding = toPadding(opts.padding);\n    const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n\n    if (this.isHorizontal()) {\n      this.height = textSize;\n    } else {\n      this.width = textSize;\n    }\n  }\n\n  isHorizontal() {\n    const pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  }\n\n  _drawArgs(offset) {\n    const {top, left, bottom, right, options} = this;\n    const align = options.align;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n\n    if (this.isHorizontal()) {\n      titleX = _alignStartEnd(align, left, right);\n      titleY = top + offset;\n      maxWidth = right - left;\n    } else {\n      if (options.position === 'left') {\n        titleX = left + offset;\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = PI * -0.5;\n      } else {\n        titleX = right - offset;\n        titleY = _alignStartEnd(align, top, bottom);\n        rotation = PI * 0.5;\n      }\n      maxWidth = bottom - top;\n    }\n    return {titleX, titleY, maxWidth, rotation};\n  }\n\n  draw() {\n    const ctx = this.ctx;\n    const opts = this.options;\n\n    if (!opts.display) {\n      return;\n    }\n\n    const fontOpts = toFont(opts.font);\n    const lineHeight = fontOpts.lineHeight;\n    const offset = lineHeight / 2 + this._padding.top;\n    const {titleX, titleY, maxWidth, rotation} = this._drawArgs(offset);\n\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\n      color: opts.color,\n      maxWidth,\n      rotation,\n      textAlign: _toLeftRightCenter(opts.align),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n}\n\nfunction createTitle(chart, titleOpts) {\n  const title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart\n  });\n\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\n\nexport default {\n  id: 'title',\n\n  /**\n\t * For tests\n\t * @private\n\t */\n  _element: Title,\n\n  start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n\n  stop(chart) {\n    const titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold',\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000         // by default greater than legend (1000) to be above\n  },\n\n  defaultRoutes: {\n    color: 'color'\n  },\n\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n","import {Title} from './plugin.title';\nimport layouts from '../core/core.layouts';\n\nconst map = new WeakMap();\n\nexport default {\n  id: 'subtitle',\n\n  start(chart, _args, options) {\n    const title = new Title({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n\n    layouts.configure(chart, title, options);\n    layouts.addBox(chart, title);\n    map.set(chart, title);\n  },\n\n  stop(chart) {\n    layouts.removeBox(chart, map.get(chart));\n    map.delete(chart);\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const title = map.get(chart);\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'normal',\n    },\n    fullSize: true,\n    padding: 0,\n    position: 'top',\n    text: '',\n    weight: 1500         // by default greater than legend (1000) and smaller than title (2000)\n  },\n\n  defaultRoutes: {\n    color: 'color'\n  },\n\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n","import Animations from '../core/core.animations';\nimport Element from '../core/core.element';\nimport {addRoundedRectPath} from '../helpers/helpers.canvas';\nimport {each, noop, isNullOrUndef, isArray, _elementsEqual, isObject} from '../helpers/helpers.core';\nimport {toFont, toPadding, toTRBLCorners} from '../helpers/helpers.options';\nimport {getRtlAdapter, overrideTextDirection, restoreTextDirection} from '../helpers/helpers.rtl';\nimport {distanceBetweenPoints, _limitValue} from '../helpers/helpers.math';\nimport {createContext, drawPoint} from '../helpers';\n\n/**\n * @typedef { import(\"../platform/platform.base\").Chart } Chart\n * @typedef { import(\"../../types\").ChartEvent } ChartEvent\n * @typedef { import(\"../../types\").ActiveElement } ActiveElement\n * @typedef { import(\"../core/core.interaction\").InteractionItem } InteractionItem\n */\n\nconst positioners = {\n  /**\n\t * Average mode places the tooltip at the average position of the elements shown\n\t */\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n\n    let i, len;\n    let x = 0;\n    let y = 0;\n    let count = 0;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        x += pos.x;\n        y += pos.y;\n        ++count;\n      }\n    }\n\n    return {\n      x: x / count,\n      y: y / count\n    };\n  },\n\n  /**\n\t * Gets the tooltip position nearest of the item nearest to the event position\n\t */\n  nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = distanceBetweenPoints(eventPosition, center);\n\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n\n    return {\n      x,\n      y\n    };\n  }\n};\n\n// Helper to push or concat based on if the 2nd parameter is an array or not\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      // base = base.concat(toPush);\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n\n  return base;\n}\n\n/**\n * Returns array of strings split by newline\n * @param {*} str - The value to split by newline.\n * @returns {string|string[]} value if newline present - Returned from String split() method\n * @function\n */\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\n\n\n/**\n * Private helper to create a tooltip item model\n * @param {Chart} chart\n * @param {ActiveElement} item - {element, index, datasetIndex} to create the tooltip item for\n * @return new tooltip item\n */\nfunction createTooltipItem(chart, item) {\n  const {element, datasetIndex, index} = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {label, value} = controller.getLabelAndValue(index);\n\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\n\n/**\n * Get the size of the tooltip\n */\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip.chart.ctx;\n  const {body, footer, title} = tooltip;\n  const {boxWidth, boxHeight} = options;\n  const bodyFont = toFont(options.bodyFont);\n  const titleFont = toFont(options.titleFont);\n  const footerFont = toFont(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n\n  const padding = toPadding(options.padding);\n  let height = padding.height;\n  let width = 0;\n\n  // Count of all lines in the body\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight\n\t\t\t+ (titleLineCount - 1) * options.titleSpacing\n\t\t\t+ options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    // Body lines may include some extra height depending on boxHeight\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight\n\t\t\t+ (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight\n\t\t\t+ (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop\n\t\t\t+ footerLineCount * footerFont.lineHeight\n\t\t\t+ (footerLineCount - 1) * options.footerSpacing;\n  }\n\n  // Title width\n  let widthPadding = 0;\n  const maxLineWidth = function(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n\n  ctx.save();\n\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n\n  // Body width\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n\n  // Body lines may include some extra width due to the color box\n  widthPadding = options.displayColors ? (boxWidth + 2 + options.boxPadding) : 0;\n  each(body, (bodyItem) => {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n\n  // Reset back to 0\n  widthPadding = 0;\n\n  // Footer width\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n\n  ctx.restore();\n\n  // Add padding\n  width += padding.width;\n\n  return {width, height};\n}\n\nfunction determineYAlign(chart, size) {\n  const {y, height} = size;\n\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > (chart.height - height / 2)) {\n    return 'bottom';\n  }\n  return 'center';\n}\n\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {x, width} = size;\n  const caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\n\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {x, width} = size;\n  const {width: chartWidth, chartArea: {left, right}} = chart;\n  let xAlign = 'center';\n\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n\n  return xAlign;\n}\n\n/**\n * Helper to get the alignment of a tooltip given the size\n */\nfunction determineAlignment(chart, options, size) {\n  const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n\n  return {\n    xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\n\nfunction alignX(size, xAlign) {\n  let {x, width} = size;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= (width / 2);\n  }\n  return x;\n}\n\nfunction alignY(size, yAlign, paddingAndSize) {\n  // eslint-disable-next-line prefer-const\n  let {y, height} = size;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= (height / 2);\n  }\n  return y;\n}\n\n/**\n * Helper to get the location a tooltip needs to be placed at given the initial position (via the vm) and the size and alignment\n */\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {caretSize, caretPadding, cornerRadius} = options;\n  const {xAlign, yAlign} = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= Math.max(topLeft, bottomLeft) + caretSize;\n  } else if (xAlign === 'right') {\n    x += Math.max(topRight, bottomRight) + caretSize;\n  }\n\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\n\nfunction getAlignedX(tooltip, align, options) {\n  const padding = toPadding(options.padding);\n\n  return align === 'center'\n    ? tooltip.x + tooltip.width / 2\n    : align === 'right'\n      ? tooltip.x + tooltip.width - padding.right\n      : tooltip.x + padding.left;\n}\n\n/**\n * Helper to build before and after body lines\n */\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\n\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return createContext(parent, {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\n\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\n\nconst defaultCallbacks = {\n  // Args are: (tooltipItems, data)\n  beforeTitle: noop,\n  title(tooltipItems) {\n    if (tooltipItems.length > 0) {\n      const item = tooltipItems[0];\n      const labels = item.chart.data.labels;\n      const labelCount = labels ? labels.length : 0;\n\n      if (this && this.options && this.options.mode === 'dataset') {\n        return item.dataset.label || '';\n      } else if (item.label) {\n        return item.label;\n      } else if (labelCount > 0 && item.dataIndex < labelCount) {\n        return labels[item.dataIndex];\n      }\n    }\n\n    return '';\n  },\n  afterTitle: noop,\n\n  // Args are: (tooltipItems, data)\n  beforeBody: noop,\n\n  // Args are: (tooltipItem, data)\n  beforeLabel: noop,\n  label(tooltipItem) {\n    if (this && this.options && this.options.mode === 'dataset') {\n      return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n    }\n\n    let label = tooltipItem.dataset.label || '';\n\n    if (label) {\n      label += ': ';\n    }\n    const value = tooltipItem.formattedValue;\n    if (!isNullOrUndef(value)) {\n      label += value;\n    }\n    return label;\n  },\n  labelColor(tooltipItem) {\n    const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n    const options = meta.controller.getStyle(tooltipItem.dataIndex);\n    return {\n      borderColor: options.borderColor,\n      backgroundColor: options.backgroundColor,\n      borderWidth: options.borderWidth,\n      borderDash: options.borderDash,\n      borderDashOffset: options.borderDashOffset,\n      borderRadius: 0,\n    };\n  },\n  labelTextColor() {\n    return this.options.bodyColor;\n  },\n  labelPointStyle(tooltipItem) {\n    const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n    const options = meta.controller.getStyle(tooltipItem.dataIndex);\n    return {\n      pointStyle: options.pointStyle,\n      rotation: options.rotation,\n    };\n  },\n  afterLabel: noop,\n\n  // Args are: (tooltipItems, data)\n  afterBody: noop,\n\n  // Args are: (tooltipItems, data)\n  beforeFooter: noop,\n  footer: noop,\n  afterFooter: noop\n};\n\n/**\n * Invoke callback from object with context and arguments.\n * If callback returns `undefined`, then will be invoked default callback.\n * @param {Record<keyof typeof defaultCallbacks, Function>} callbacks\n * @param {keyof typeof defaultCallbacks} name\n * @param {*} ctx\n * @param {*} arg\n * @returns {any}\n */\nfunction invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n  const result = callbacks[name].call(ctx, arg);\n\n  if (typeof result === 'undefined') {\n    return defaultCallbacks[name].call(ctx, arg);\n  }\n\n  return result;\n}\n\nexport class Tooltip extends Element {\n\n  /**\n   * @namespace Chart.Tooltip.positioners\n   */\n  static positioners = positioners;\n\n  constructor(config) {\n    super();\n\n    this.opacity = 0;\n    this._active = [];\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    // TODO: V4, make this private, rename to `_labelStyles`, and combine with `labelPointStyles`\n    // and `labelTextColors` to create a single variable\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n\n  /**\n\t * @private\n\t */\n  _resolveAnimations() {\n    const cached = this._cachedAnimations;\n\n    if (cached) {\n      return cached;\n    }\n\n    const chart = this.chart;\n    const options = this.options.setContext(this.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(this.chart, opts);\n    if (opts._cacheable) {\n      this._cachedAnimations = Object.freeze(animations);\n    }\n\n    return animations;\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext() {\n    return this.$context ||\n\t\t\t(this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n  }\n\n  getTitle(context, options) {\n    const {callbacks} = options;\n\n    const beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\n    const title = invokeCallbackWithFallback(callbacks, 'title', this, context);\n    const afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\n\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n\n    return lines;\n  }\n\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(\n      invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems)\n    );\n  }\n\n  getBody(tooltipItems, options) {\n    const {callbacks} = options;\n    const bodyItems = [];\n\n    each(tooltipItems, (context) => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', this, context)));\n      pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', this, context));\n      pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', this, context)));\n\n      bodyItems.push(bodyItem);\n    });\n\n    return bodyItems;\n  }\n\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(\n      invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems)\n    );\n  }\n\n  // Get the footer and beforeFooter and afterFooter lines\n  getFooter(tooltipItems, options) {\n    const {callbacks} = options;\n\n    const beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\n    const footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\n    const afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\n\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n\n    return lines;\n  }\n\n  /**\n\t * @private\n\t */\n  _createItems(options) {\n    const active = this._active;\n    const data = this.chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(this.chart, active[i]));\n    }\n\n    // If the user provided a filter function, use it to modify the tooltip items\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n\n    // If the user provided a sorting function, use it to modify the tooltip items\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n\n    // Determine colors for boxes\n    each(tooltipItems, (context) => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', this, context));\n      labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', this, context));\n      labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', this, context));\n    });\n\n    this.labelColors = labelColors;\n    this.labelPointStyles = labelPointStyles;\n    this.labelTextColors = labelTextColors;\n    this.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n\n  update(changed, replay) {\n    const options = this.options.setContext(this.getContext());\n    const active = this._active;\n    let properties;\n    let tooltipItems = [];\n\n    if (!active.length) {\n      if (this.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(this, active, this._eventPosition);\n      tooltipItems = this._createItems(options);\n\n      this.title = this.getTitle(tooltipItems, options);\n      this.beforeBody = this.getBeforeBody(tooltipItems, options);\n      this.body = this.getBody(tooltipItems, options);\n      this.afterBody = this.getAfterBody(tooltipItems, options);\n      this.footer = this.getFooter(tooltipItems, options);\n\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(this.chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n\n      this.xAlign = alignment.xAlign;\n      this.yAlign = alignment.yAlign;\n\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n\n    this._tooltipItems = tooltipItems;\n    this.$context = undefined;\n\n    if (properties) {\n      this._resolveAnimations().update(this, properties);\n    }\n\n    if (changed && options.external) {\n      options.external.call(this, {chart: this.chart, tooltip: this, replay});\n    }\n  }\n\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n\n  getCaretPosition(tooltipPoint, size, options) {\n    const {xAlign, yAlign} = this;\n    const {caretSize, cornerRadius} = options;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n    const {x: ptX, y: ptY} = tooltipPoint;\n    const {width, height} = size;\n    let x1, x2, x3, y1, y2, y3;\n\n    if (yAlign === 'center') {\n      y2 = ptY + (height / 2);\n\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n\n        // Left draws bottom -> top, this y1 is on the bottom\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n\n        // Right draws top -> bottom, thus y1 is on the top\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + Math.max(topLeft, bottomLeft) + (caretSize);\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n\n        // Top draws left -> right, thus x1 is on the left\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n\n        // Bottom draws right -> left, thus x1 is on the right\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n      y3 = y1;\n    }\n    return {x1, x2, x3, y1, y2, y3};\n  }\n\n  drawTitle(pt, ctx, options) {\n    const title = this.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n      pt.x = getAlignedX(this, options.titleAlign, options);\n\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n\n      titleFont = toFont(options.titleFont);\n      titleSpacing = options.titleSpacing;\n\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing; // Line Height and spacing\n\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing\n        }\n      }\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const labelColors = this.labelColors[i];\n    const labelPointStyle = this.labelPointStyles[i];\n    const {boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    const colorX = getAlignedX(this, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2, // fit the circle in the box\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      // Recalculate x and y for drawPoint() because its expecting\n      // x and y to be center of figure (instead of top left)\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n\n      // Fill the point with white so that colours merge nicely if the opacity is < 1\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n\n      // Draw the point\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.fillStyle = labelColors.backgroundColor;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n    } else {\n      // Border\n      ctx.lineWidth = isObject(labelColors.borderWidth) ? Math.max(...Object.values(labelColors.borderWidth)) : (labelColors.borderWidth || 1); // TODO, v4 remove fallback\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.setLineDash(labelColors.borderDash || []);\n      ctx.lineDashOffset = labelColors.borderDashOffset || 0;\n\n      // Fill a white rect so that colours merge nicely if the opacity is < 1\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth - boxPadding);\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - boxPadding - 2);\n      const borderRadius = toTRBLCorners(labelColors.borderRadius);\n\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        ctx.fillStyle = options.multiKeyBackground;\n        addRoundedRectPath(ctx, {\n          x: outerX,\n          y: colorY,\n          w: boxWidth,\n          h: boxHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n        ctx.stroke();\n\n        // Inner square\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: innerX,\n          y: colorY + 1,\n          w: boxWidth - 2,\n          h: boxHeight - 2,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        // Normal rect\n        ctx.fillStyle = options.multiKeyBackground;\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n        // Inner square\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n      }\n    }\n\n    // restore fillStyle\n    ctx.fillStyle = this.labelTextColors[i];\n  }\n\n  drawBody(pt, ctx, options) {\n    const {body} = this;\n    const {bodySpacing, bodyAlign, displayColors, boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n\n    const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n    const fillLineOfText = function(line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n\n    pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n\n    // Before body lines\n    ctx.fillStyle = options.bodyColor;\n    each(this.beforeBody, fillLineOfText);\n\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right'\n      ? bodyAlign === 'center' ? (boxWidth / 2 + boxPadding) : (boxWidth + 2 + boxPadding)\n      : 0;\n\n    // Draw body lines now\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = this.labelTextColors[i];\n\n      ctx.fillStyle = textColor;\n      each(bodyItem.before, fillLineOfText);\n\n      lines = bodyItem.lines;\n      // Draw Legend-like boxes if needed\n      if (displayColors && lines.length) {\n        this._drawColorBox(ctx, pt, i, rtlHelper, options);\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        // Reset for any lines that don't include colorbox\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n\n      each(bodyItem.after, fillLineOfText);\n    }\n\n    // Reset back to 0 for after body\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n\n    // After body lines\n    each(this.afterBody, fillLineOfText);\n    pt.y -= bodySpacing; // Remove last body spacing\n  }\n\n  drawFooter(pt, ctx, options) {\n    const footer = this.footer;\n    const length = footer.length;\n    let footerFont, i;\n\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n      pt.x = getAlignedX(this, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n\n      footerFont = toFont(options.footerFont);\n\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {xAlign, yAlign} = this;\n    const {x, y} = pt;\n    const {width, height} = tooltipSize;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(options.cornerRadius);\n\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n\n    ctx.beginPath();\n    ctx.moveTo(x + topLeft, y);\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width - topRight, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width, y + height - bottomRight);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + bottomLeft, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x, y + topLeft);\n    ctx.quadraticCurveTo(x, y, x + topLeft, y);\n    ctx.closePath();\n\n    ctx.fill();\n\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n\n  /**\n\t * Update x/y animation targets when _active elements are animating too\n\t * @private\n\t */\n  _updateAnimationTarget(options) {\n    const chart = this.chart;\n    const anims = this.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n    if (animX || animY) {\n      const position = positioners[options.position].call(this, this._active, this._eventPosition);\n      if (!position) {\n        return;\n      }\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, this._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n      if (animX._to !== point.x || animY._to !== point.y) {\n        this.xAlign = alignment.xAlign;\n        this.yAlign = alignment.yAlign;\n        this.width = size.width;\n        this.height = size.height;\n        this.caretX = position.x;\n        this.caretY = position.y;\n        this._resolveAnimations().update(this, point);\n      }\n    }\n  }\n\n  /**\n   * Determine if the tooltip will draw anything\n   * @returns {boolean} True if the tooltip will render\n   */\n  _willRender() {\n    return !!this.opacity;\n  }\n\n  draw(ctx) {\n    const options = this.options.setContext(this.getContext());\n    let opacity = this.opacity;\n\n    if (!opacity) {\n      return;\n    }\n\n    this._updateAnimationTarget(options);\n\n    const tooltipSize = {\n      width: this.width,\n      height: this.height\n    };\n    const pt = {\n      x: this.x,\n      y: this.y\n    };\n\n    // IE11/Edge does not like very small opacities, so snap to 0\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n\n    const padding = toPadding(options.padding);\n\n    // Truthy/falsey value for empty tooltip\n    const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n\n      // Draw Background\n      this.drawBackground(pt, ctx, tooltipSize, options);\n\n      overrideTextDirection(ctx, options.textDirection);\n\n      pt.y += padding.top;\n\n      // Titles\n      this.drawTitle(pt, ctx, options);\n\n      // Body\n      this.drawBody(pt, ctx, options);\n\n      // Footer\n      this.drawFooter(pt, ctx, options);\n\n      restoreTextDirection(ctx, options.textDirection);\n\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * Get active elements in the tooltip\n\t * @returns {Array} Array of elements that are active in the tooltip\n\t */\n  getActiveElements() {\n    return this._active || [];\n  }\n\n  /**\n\t * Set active elements in the tooltip\n\t * @param {array} activeElements Array of active datasetIndex/index pairs.\n\t * @param {object} eventPosition Synthetic event position used in positioning\n\t */\n  setActiveElements(activeElements, eventPosition) {\n    const lastActive = this._active;\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.chart.getDatasetMeta(datasetIndex);\n\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(lastActive, active);\n    const positionChanged = this._positionChanged(active, eventPosition);\n\n    if (changed || positionChanged) {\n      this._active = active;\n      this._eventPosition = eventPosition;\n      this._ignoreReplayEvents = true;\n      this.update(true);\n    }\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e - The event to handle\n\t * @param {boolean} [replay] - This is a replayed event (from update)\n\t * @param {boolean} [inChartArea] - The event is inside chartArea\n\t * @returns {boolean} true if the tooltip changed\n\t */\n  handleEvent(e, replay, inChartArea = true) {\n    if (replay && this._ignoreReplayEvents) {\n      return false;\n    }\n    this._ignoreReplayEvents = false;\n\n    const options = this.options;\n    const lastActive = this._active || [];\n    const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n\n    // When there are multiple items shown, but the tooltip position is nearest mode\n    // an update may need to be made because our position may have changed even though\n    // the items are the same as before.\n    const positionChanged = this._positionChanged(active, e);\n\n    // Remember Last Actives\n    const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n\n    // Only handle target event on tooltip change\n    if (changed) {\n      this._active = active;\n\n      if (options.enabled || options.external) {\n        this._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n\n        this.update(true, replay);\n      }\n    }\n\n    return changed;\n  }\n\n  /**\n\t * Helper for determining the active elements for event\n\t * @param {ChartEvent} e - The event to handle\n\t * @param {InteractionItem[]} lastActive - Previously active elements\n\t * @param {boolean} [replay] - This is a replayed event (from update)\n\t * @param {boolean} [inChartArea] - The event is inside chartArea\n\t * @returns {InteractionItem[]} - Active elements\n\t * @private\n\t */\n  _getActiveElements(e, lastActive, replay, inChartArea) {\n    const options = this.options;\n\n    if (e.type === 'mouseout') {\n      return [];\n    }\n\n    if (!inChartArea) {\n      // Let user control the active elements outside chartArea. Eg. using Legend.\n      return lastActive;\n    }\n\n    // Find Active Elements for tooltips\n    const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n\n    if (options.reverse) {\n      active.reverse();\n    }\n\n    return active;\n  }\n\n  /**\n\t * Determine if the active elements + event combination changes the\n\t * tooltip position\n\t * @param {array} active - Active elements\n\t * @param {ChartEvent} e - Event that triggered the position change\n\t * @returns {boolean} True if the position has changed\n\t */\n  _positionChanged(active, e) {\n    const {caretX, caretY, options} = this;\n    const position = positioners[options.position].call(this, active, e);\n    return position !== false && (caretX !== position.x || caretY !== position.y);\n  }\n}\n\nexport default {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({chart, options});\n    }\n  },\n\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n\n    if (tooltip && tooltip._willRender()) {\n      const args = {\n        tooltip\n      };\n\n      if (chart.notifyPlugins('beforeTooltipDraw', {...args, cancelable: true}) === false) {\n        return;\n      }\n\n      tooltip.draw(chart.ctx);\n\n      chart.notifyPlugins('afterTooltipDraw', args);\n    }\n  },\n\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      // If the event is replayed from `update`, we should evaluate with the final positions.\n      const useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n        // notify chart about the change, so it will render\n        args.changed = true;\n      }\n    }\n  },\n\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold',\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {\n    },\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold',\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    boxPadding: 0,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart',\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY'],\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: defaultCallbacks\n  },\n\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n\n  descriptors: {\n    _scriptable: (name) => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false,\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n\n  // Resolve additionally from `interaction` options and defaults.\n  additionalOptionScopes: ['interaction']\n};\n","import Scale from '../core/core.scale';\nimport {isNullOrUndef, valueOrDefault, _limitValue} from '../helpers';\n\nconst addIfString = (labels, raw, index, addedLabels) => {\n  if (typeof raw === 'string') {\n    index = labels.push(raw) - 1;\n    addedLabels.unshift({index, label: raw});\n  } else if (isNaN(raw)) {\n    index = null;\n  }\n  return index;\n};\n\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n  const first = labels.indexOf(raw);\n  if (first === -1) {\n    return addIfString(labels, raw, index, addedLabels);\n  }\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\n\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\n\nfunction _getLabelForValue(value) {\n  const labels = this.getLabels();\n\n  if (value >= 0 && value < labels.length) {\n    return labels[value];\n  }\n  return value;\n}\n\nexport default class CategoryScale extends Scale {\n\n  static id = 'category';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: _getLabelForValue\n    }\n  };\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this._startValue = undefined;\n    this._valueRange = 0;\n    this._addedLabels = [];\n  }\n\n  init(scaleOptions) {\n    const added = this._addedLabels;\n    if (added.length) {\n      const labels = this.getLabels();\n      for (const {index, label} of added) {\n        if (labels[index] === label) {\n          labels.splice(index, 1);\n        }\n      }\n      this._addedLabels = [];\n    }\n    super.init(scaleOptions);\n  }\n\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index\n      : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n    return validIndex(index, labels.length - 1);\n  }\n\n  determineDataLimits() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this.getMinMax(true);\n\n    if (this.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n      if (!maxDefined) {\n        max = this.getLabels().length - 1;\n      }\n    }\n\n    this.min = min;\n    this.max = max;\n  }\n\n  buildTicks() {\n    const min = this.min;\n    const max = this.max;\n    const offset = this.options.offset;\n    const ticks = [];\n    let labels = this.getLabels();\n\n    // If we are viewing some subset of labels, slice the original array\n    labels = (min === 0 && max === labels.length - 1) ? labels : labels.slice(min, max + 1);\n\n    this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    this._startValue = this.min - (offset ? 0.5 : 0);\n\n    for (let value = min; value <= max; value++) {\n      ticks.push({value});\n    }\n    return ticks;\n  }\n\n  getLabelForValue(value) {\n    return _getLabelForValue.call(this, value);\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    super.configure();\n\n    if (!this.isHorizontal()) {\n      // For backward compatibility, vertical category scale reverse is inverted.\n      this._reversePixels = !this._reversePixels;\n    }\n  }\n\n  // Used to get data value locations. Value can either be an index or a numerical value\n  getPixelForValue(value) {\n    if (typeof value !== 'number') {\n      value = this.parse(value);\n    }\n\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n\n  // Must override base implementation because it calls getPixelForValue\n  // and category scale can have duplicate values\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n\n  getValueForPixel(pixel) {\n    return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n  }\n\n  getBasePixel() {\n    return this.bottom;\n  }\n}\n","import {isNullOrUndef} from '../helpers/helpers.core';\nimport {almostEquals, almostWhole, niceNum, _decimalPlaces, _setMinAndMaxByKey, sign, toRadians} from '../helpers/helpers.math';\nimport Scale from '../core/core.scale';\nimport {formatNumber} from '../helpers/helpers.intl';\n\n/**\n * Generate a set of linear ticks for an axis\n * 1. If generationOptions.min, generationOptions.max, and generationOptions.step are defined:\n *    if (max - min) / step is an integer, ticks are generated as [min, min + step, ..., max]\n *    Note that the generationOptions.maxCount setting is respected in this scenario\n *\n * 2. If generationOptions.min, generationOptions.max, and generationOptions.count is defined\n *    spacing = (max - min) / count\n *    Ticks are generated as [min, min + spacing, ..., max]\n *\n * 3. If generationOptions.count is defined\n *    spacing = (niceMax - niceMin) / count\n *\n * 4. Compute optimal spacing of ticks using niceNum algorithm\n *\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {object[]} array of tick objects\n */\nfunction generateTicks(generationOptions, dataRange) {\n  const ticks = [];\n  // To get a \"nice\" value for the tick spacing, we will use the appropriately named\n  // \"nice number\" algorithm. See https://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks\n  // for details.\n\n  const MIN_SPACING = 1e-14;\n  const {bounds, step, min, max, precision, count, maxTicks, maxDigits, includeBounds} = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {min: rmin, max: rmax} = dataRange;\n  const minDefined = !isNullOrUndef(min);\n  const maxDefined = !isNullOrUndef(max);\n  const countDefined = !isNullOrUndef(count);\n  const minSpacing = (rmax - rmin) / (maxDigits + 1);\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n\n  // Beyond MIN_SPACING floating point numbers being to lose precision\n  // such that we can't do the math necessary to generate ticks\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{value: rmin}, {value: rmax}];\n  }\n\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    // If the calculated num of spaces exceeds maxNumSpaces, recalculate it\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n\n  if (!isNullOrUndef(precision)) {\n    // If the user specified a precision, round to that number of decimal places\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    // Case 1: If min, max and stepSize are set and they make an evenly spaced scale use it.\n    // spacing = step;\n    // numSpaces = (max - min) / spacing;\n    // Note that we round here to handle the case where almostWhole translated an FP error\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    // Cases 2 & 3, we have a count specified. Handle optional user defined edges to the range.\n    // Sometimes these are no-ops, but it makes the code a lot clearer\n    // and when a user defined range is specified, we want the correct ticks\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    // Case 4\n    numSpaces = (niceMax - niceMin) / spacing;\n\n    // If very close to our rounded value, use it.\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n\n  // The spacing will have changed in cases 1, 2, and 3 so the factor cannot be computed\n  // until this point\n  const decimalPlaces = Math.max(\n    _decimalPlaces(spacing),\n    _decimalPlaces(niceMin)\n  );\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n\n  let j = 0;\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({value: min});\n\n      if (niceMin < min) {\n        j++; // Skip niceMin\n      }\n      // If the next nice tick is close to min, skip it\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n\n  for (; j < numSpaces; ++j) {\n    ticks.push({value: Math.round((niceMin + j * spacing) * factor) / factor});\n  }\n\n  if (maxDefined && includeBounds && niceMax !== max) {\n    // If the previous tick is too close to max, replace it with max, else add max\n    if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({value: max});\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({value: niceMax});\n  }\n\n  return ticks;\n}\n\nfunction relativeLabelSize(value, minSpacing, {horizontal, minRotation}) {\n  const rad = toRadians(minRotation);\n  const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  const length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\n\nexport default class LinearScaleBase extends Scale {\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.start = undefined;\n    /** @type {number} */\n    this.end = undefined;\n    /** @type {number} */\n    this._startValue = undefined;\n    /** @type {number} */\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n\n    return +raw;\n  }\n\n  handleTickRangeOptions() {\n    const {beginAtZero} = this.options;\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this;\n\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n\n    if (beginAtZero) {\n      const minSign = sign(min);\n      const maxSign = sign(max);\n\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n\n    if (min === max) {\n      let offset = max === 0 ? 1 : Math.abs(max * 0.05);\n\n      setMax(max + offset);\n\n      if (!beginAtZero) {\n        setMin(min - offset);\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n\n  getTickLimit() {\n    const tickOpts = this.options.ticks;\n    // eslint-disable-next-line prefer-const\n    let {maxTicksLimit, stepSize} = tickOpts;\n    let maxTicks;\n\n    if (stepSize) {\n      maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n      if (maxTicks > 1000) {\n        console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n        maxTicks = 1000;\n      }\n    } else {\n      maxTicks = this.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n\n    return maxTicks;\n  }\n\n  /**\n\t * @protected\n\t */\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n\n  buildTicks() {\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n\n    // Figure out what the max number of ticks we can support it is based on the size of\n    // the axis area. For now, we say that the minimum tick spacing in pixels must be 40\n    // We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n    // the graph. Make sure we always have at least 2 ticks\n    let maxTicks = this.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n\n    const numericGeneratorOptions = {\n      maxTicks,\n      bounds: opts.bounds,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n      maxDigits: this._maxDigits(),\n      horizontal: this.isHorizontal(),\n      minRotation: tickOpts.minRotation || 0,\n      includeBounds: tickOpts.includeBounds !== false\n    };\n    const dataRange = this._range || this;\n    const ticks = generateTicks(numericGeneratorOptions, dataRange);\n\n    // At this point, we need to update our max and min given the tick values,\n    // since we probably have expanded the range of the scale\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n\n    if (opts.reverse) {\n      ticks.reverse();\n\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n\n    return ticks;\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    const ticks = this.ticks;\n    let start = this.min;\n    let end = this.max;\n\n    super.configure();\n\n    if (this.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n    this._startValue = start;\n    this._endValue = end;\n    this._valueRange = end - start;\n  }\n\n  getLabelForValue(value) {\n    return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n}\n","import {isFinite} from '../helpers/helpers.core';\nimport LinearScaleBase from './scale.linearbase';\nimport Ticks from '../core/core.ticks';\nimport {toRadians} from '../helpers';\n\nexport default class LinearScale extends LinearScaleBase {\n\n  static id = 'linear';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: Ticks.formatters.numeric\n    }\n  };\n\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n\n    this.min = isFinite(min) ? min : 0;\n    this.max = isFinite(max) ? max : 1;\n\n    // Common base implementation to handle min, max, beginAtZero\n    this.handleTickRangeOptions();\n  }\n\n  /**\n\t * Returns the maximum number of ticks based on the scale dimension\n\t * @protected\n \t */\n  computeTickLimit() {\n    const horizontal = this.isHorizontal();\n    const length = horizontal ? this.width : this.height;\n    const minRotation = toRadians(this.options.ticks.minRotation);\n    const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n    const tickFont = this._resolveTickFontOptions(0);\n    return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n  }\n\n  // Utils\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n}\n","import {finiteOrDefault, isFinite} from '../helpers/helpers.core';\nimport {formatNumber} from '../helpers/helpers.intl';\nimport {_setMinAndMaxByKey, log10} from '../helpers/helpers.math';\nimport Scale from '../core/core.scale';\nimport LinearScaleBase from './scale.linearbase';\nimport Ticks from '../core/core.ticks';\n\nconst log10Floor = v => Math.floor(log10(v));\nconst changeExponent = (v, m) => Math.pow(10, log10Floor(v) + m);\n\nfunction isMajor(tickVal) {\n  const remain = tickVal / (Math.pow(10, log10Floor(tickVal)));\n  return remain === 1;\n}\n\nfunction steps(min, max, rangeExp) {\n  const rangeStep = Math.pow(10, rangeExp);\n  const start = Math.floor(min / rangeStep);\n  const end = Math.ceil(max / rangeStep);\n  return end - start;\n}\n\nfunction startExp(min, max) {\n  const range = max - min;\n  let rangeExp = log10Floor(range);\n  while (steps(min, max, rangeExp) > 10) {\n    rangeExp++;\n  }\n  while (steps(min, max, rangeExp) < 10) {\n    rangeExp--;\n  }\n  return Math.min(rangeExp, log10Floor(min));\n}\n\n\n/**\n * Generate a set of logarithmic ticks\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {object[]} array of tick objects\n */\nfunction generateTicks(generationOptions, {min, max}) {\n  min = finiteOrDefault(generationOptions.min, min);\n  const ticks = [];\n  const minExp = log10Floor(min);\n  let exp = startExp(min, max);\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  const stepSize = Math.pow(10, exp);\n  const base = minExp > exp ? Math.pow(10, minExp) : 0;\n  const start = Math.round((min - base) * precision) / precision;\n  const offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n  let significand = Math.floor((start - offset) / Math.pow(10, exp));\n  let value = finiteOrDefault(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n  while (value < max) {\n    ticks.push({value, major: isMajor(value), significand});\n    if (significand >= 10) {\n      significand = significand < 15 ? 15 : 20;\n    } else {\n      significand++;\n    }\n    if (significand >= 20) {\n      exp++;\n      significand = 2;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n  }\n  const lastTick = finiteOrDefault(generationOptions.max, value);\n  ticks.push({value: lastTick, major: isMajor(lastTick), significand});\n\n  return ticks;\n}\n\nexport default class LogarithmicScale extends Scale {\n\n  static id = 'logarithmic';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: Ticks.formatters.logarithmic,\n      major: {\n        enabled: true\n      }\n    }\n  };\n\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.start = undefined;\n    /** @type {number} */\n    this.end = undefined;\n    /** @type {number} */\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n    return isFinite(value) && value > 0 ? value : null;\n  }\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n\n    this.min = isFinite(min) ? Math.max(0, min) : null;\n    this.max = isFinite(max) ? Math.max(0, max) : null;\n\n    if (this.options.beginAtZero) {\n      this._zero = true;\n    }\n\n    // if data has `0` in it or `beginAtZero` is true, min (non zero) value is at bottom\n    // of scale, and it does not equal suggestedMin, lower the min bound by one exp.\n    if (this._zero && this.min !== this._suggestedMin && !isFinite(this._userMin)) {\n      this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\n    }\n\n    this.handleTickRangeOptions();\n  }\n\n  handleTickRangeOptions() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let min = this.min;\n    let max = this.max;\n\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n\n    if (min === max) {\n      if (min <= 0) { // includes null\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(changeExponent(min, -1));\n        setMax(changeExponent(max, +1));\n      }\n    }\n    if (min <= 0) {\n      setMin(changeExponent(max, -1));\n    }\n    if (max <= 0) {\n\n      setMax(changeExponent(min, +1));\n    }\n\n    this.min = min;\n    this.max = max;\n  }\n\n  buildTicks() {\n    const opts = this.options;\n\n    const generationOptions = {\n      min: this._userMin,\n      max: this._userMax\n    };\n    const ticks = generateTicks(generationOptions, this);\n\n    // At this point, we need to update our max and min given the tick values,\n    // since we probably have expanded the range of the scale\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n\n    if (opts.reverse) {\n      ticks.reverse();\n\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n\n    return ticks;\n  }\n\n  /**\n\t * @param {number} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    return value === undefined\n      ? '0'\n      : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    const start = this.min;\n\n    super.configure();\n\n    this._startValue = log10(start);\n    this._valueRange = log10(this.max) - log10(start);\n  }\n\n  getPixelForValue(value) {\n    if (value === undefined || value === 0) {\n      value = this.min;\n    }\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n    return this.getPixelForDecimal(value === this.min\n      ? 0\n      : (log10(value) - this._startValue) / this._valueRange);\n  }\n\n  getValueForPixel(pixel) {\n    const decimal = this.getDecimalForPixel(pixel);\n    return Math.pow(10, this._startValue + decimal * this._valueRange);\n  }\n}\n","import defaults from '../core/core.defaults';\nimport {_longestText, addRoundedRectPath, renderText} from '../helpers/helpers.canvas';\nimport {HALF_PI, TAU, toDegrees, toRadians, _normalizeAngle, PI} from '../helpers/helpers.math';\nimport LinearScaleBase from './scale.linearbase';\nimport Ticks from '../core/core.ticks';\nimport {valueOrDefault, isArray, isFinite, callback as callCallback, isNullOrUndef} from '../helpers/helpers.core';\nimport {createContext, toFont, toPadding, toTRBLCorners} from '../helpers/helpers.options';\n\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n\n  if (tickOpts.display && opts.display) {\n    const padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n  return 0;\n}\n\nfunction measureLabelSize(ctx, font, label) {\n  label = isArray(label) ? label : [label];\n  return {\n    w: _longestText(ctx, font.string, label),\n    h: label.length * font.lineHeight\n  };\n}\n\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - (size / 2),\n      end: pos + (size / 2)\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\n\n/**\n * Helper function to fit a radial linear scale with point labels\n */\nfunction fitWithPointLabels(scale) {\n\n  // Right, this is really confusing and there is a lot of maths going on here\n  // The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9\n  //\n  // Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif\n  //\n  // Solution:\n  //\n  // We assume the radius of the polygon is half the size of the canvas at first\n  // at each index we check if the text overlaps.\n  //\n  // Where it does, we store that angle and that index.\n  //\n  // After finding the largest index and angle we calculate how much we need to remove\n  // from the shape radius to move the point inwards by that x.\n  //\n  // We average the left and right distances to get the maximum shape radius that can fit in the box\n  // along with labels.\n  //\n  // Once we have that, we can find the centre point for the chart, by taking the x text protrusion\n  // on each side, removing that from the size, halving it and adding the left x protrusion width.\n  //\n  // This will mean we have a shape fitted to the canvas, as large as it can be with the labels\n  // and position it in the most space efficient manner\n  //\n  // https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif\n\n  // Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.\n  // Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points\n  const orig = {\n    l: scale.left + scale._padding.left,\n    r: scale.right - scale._padding.right,\n    t: scale.top + scale._padding.top,\n    b: scale.bottom - scale._padding.bottom\n  };\n  const limits = Object.assign({}, orig);\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale._pointLabels.length;\n  const pointLabelOpts = scale.options.pointLabels;\n  const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n\n  for (let i = 0; i < valueCount; i++) {\n    const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n    padding[i] = opts.padding;\n    const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n    const plFont = toFont(opts.font);\n    const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n\n    const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n    const angle = Math.round(toDegrees(angleRadians));\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n  }\n\n  scale.setCenterPoint(\n    orig.l - limits.l,\n    limits.r - orig.r,\n    orig.t - limits.t,\n    limits.b - orig.b\n  );\n\n  // Now that text size is determined, compute the full positions\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\n\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n  const sin = Math.abs(Math.sin(angle));\n  const cos = Math.abs(Math.cos(angle));\n  let x = 0;\n  let y = 0;\n  if (hLimits.start < orig.l) {\n    x = (orig.l - hLimits.start) / sin;\n    limits.l = Math.min(limits.l, orig.l - x);\n  } else if (hLimits.end > orig.r) {\n    x = (hLimits.end - orig.r) / sin;\n    limits.r = Math.max(limits.r, orig.r + x);\n  }\n  if (vLimits.start < orig.t) {\n    y = (orig.t - vLimits.start) / cos;\n    limits.t = Math.min(limits.t, orig.t - y);\n  } else if (vLimits.end > orig.b) {\n    y = (vLimits.end - orig.b) / cos;\n    limits.b = Math.max(limits.b, orig.b + y);\n  }\n}\n\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n  const items = [];\n  const valueCount = scale._pointLabels.length;\n  const opts = scale.options;\n  const extra = getTickBackdropHeight(opts) / 2;\n  const outerDistance = scale.drawingArea;\n  const additionalAngle = opts.pointLabels.centerPointLabels ? PI / valueCount : 0;\n\n  for (let i = 0; i < valueCount; i++) {\n    const pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i], additionalAngle);\n    const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n    const size = labelSizes[i];\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n\n    items.push({\n      // Text position\n      x: pointLabelPosition.x,\n      y,\n\n      // Text rendering data\n      textAlign,\n\n      // Bounding box\n      left,\n      top: y,\n      right: left + size.w,\n      bottom: y + size.h\n    });\n  }\n  return items;\n}\n\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n\n  return 'right';\n}\n\nfunction leftForTextAlign(x, w, align) {\n  if (align === 'right') {\n    x -= w;\n  } else if (align === 'center') {\n    x -= (w / 2);\n  }\n  return x;\n}\n\nfunction yForAngle(y, h, angle) {\n  if (angle === 90 || angle === 270) {\n    y -= (h / 2);\n  } else if (angle > 270 || angle < 90) {\n    y -= h;\n  }\n  return y;\n}\n\nfunction drawPointLabels(scale, labelCount) {\n  const {ctx, options: {pointLabels}} = scale;\n\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n    const plFont = toFont(optsAtIndex.font);\n    const {x, y, textAlign, left, top, right, bottom} = scale._pointLabelItems[i];\n    const {backdropColor} = optsAtIndex;\n\n    if (!isNullOrUndef(backdropColor)) {\n      const borderRadius = toTRBLCorners(optsAtIndex.borderRadius);\n      const padding = toPadding(optsAtIndex.backdropPadding);\n      ctx.fillStyle = backdropColor;\n\n      const backdropLeft = left - padding.left;\n      const backdropTop = top - padding.top;\n      const backdropWidth = right - left + padding.width;\n      const backdropHeight = bottom - top + padding.height;\n\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: backdropLeft,\n          y: backdropTop,\n          w: backdropWidth,\n          h: backdropHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n      }\n    }\n\n    renderText(\n      ctx,\n      scale._pointLabels[i],\n      x,\n      y + (plFont.lineHeight / 2),\n      plFont,\n      {\n        color: optsAtIndex.color,\n        textAlign: textAlign,\n        textBaseline: 'middle'\n      }\n    );\n  }\n}\n\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {ctx} = scale;\n  if (circular) {\n    // Draw circular arcs between the points\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    // Draw straight lines connecting each index\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\n\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n\n  const {color, lineWidth} = gridLineOpts;\n\n  if ((!circular && !labelCount) || !color || !lineWidth || radius < 0) {\n    return;\n  }\n\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(borderOpts.dash);\n  ctx.lineDashOffset = borderOpts.dashOffset;\n\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\n\nfunction createPointLabelContext(parent, index, label) {\n  return createContext(parent, {\n    label,\n    index,\n    type: 'pointLabel'\n  });\n}\n\nexport default class RadialLinearScale extends LinearScaleBase {\n\n  static id = 'radialLinear';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    display: true,\n\n    // Boolean - Whether to animate scaling the chart from the centre\n    animate: true,\n    position: 'chartArea',\n\n    angleLines: {\n      display: true,\n      lineWidth: 1,\n      borderDash: [],\n      borderDashOffset: 0.0\n    },\n\n    grid: {\n      circular: false\n    },\n\n    startAngle: 0,\n\n    // label settings\n    ticks: {\n      // Boolean - Show a backdrop to the scale label\n      showLabelBackdrop: true,\n\n      callback: Ticks.formatters.numeric\n    },\n\n    pointLabels: {\n      backdropColor: undefined,\n\n      // Number - The backdrop padding above & below the label in pixels\n      backdropPadding: 2,\n\n      // Boolean - if true, show point labels\n      display: true,\n\n      // Number - Point label font size in pixels\n      font: {\n        size: 10\n      },\n\n      // Function - Used to convert point labels\n      callback(label) {\n        return label;\n      },\n\n      // Number - Additionl padding between scale and pointLabel\n      padding: 5,\n\n      // Boolean - if true, center point labels to slices in polar chart\n      centerPointLabels: false\n    }\n  };\n\n  static defaultRoutes = {\n    'angleLines.color': 'borderColor',\n    'pointLabels.color': 'color',\n    'ticks.color': 'color'\n  };\n\n  static descriptors = {\n    angleLines: {\n      _fallback: 'grid'\n    }\n  };\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.xCenter = undefined;\n    /** @type {number} */\n    this.yCenter = undefined;\n    /** @type {number} */\n    this.drawingArea = undefined;\n    /** @type {string[]} */\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n\n  setDimensions() {\n    // Set the unconstrained dimension before label rotation\n    const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n    const w = this.width = this.maxWidth - padding.width;\n    const h = this.height = this.maxHeight - padding.height;\n    this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n    this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n    this.drawingArea = Math.floor(Math.min(w, h) / 2);\n  }\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(false);\n\n    this.min = isFinite(min) && !isNaN(min) ? min : 0;\n    this.max = isFinite(max) && !isNaN(max) ? max : 0;\n\n    // Common base implementation to handle min, max, beginAtZero\n    this.handleTickRangeOptions();\n  }\n\n  /**\n\t * Returns the maximum number of ticks based on the scale dimension\n\t * @protected\n\t */\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n\n  generateTickLabels(ticks) {\n    LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n\n    // Point labels\n    this._pointLabels = this.getLabels()\n      .map((value, index) => {\n        const label = callCallback(this.options.pointLabels.callback, [value, index], this);\n        return label || label === 0 ? label : '';\n      })\n      .filter((v, i) => this.chart.getDataVisibility(i));\n  }\n\n  fit() {\n    const opts = this.options;\n\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(this);\n    } else {\n      this.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n    this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n    this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n  }\n\n  getIndexAngle(index) {\n    const angleMultiplier = TAU / (this._pointLabels.length || 1);\n    const startAngle = this.options.startAngle || 0;\n\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n  }\n\n  getDistanceFromCenterForValue(value) {\n    if (isNullOrUndef(value)) {\n      return NaN;\n    }\n\n    // Take into account half font size + the yPadding of the top value\n    const scalingFactor = this.drawingArea / (this.max - this.min);\n    if (this.options.reverse) {\n      return (this.max - value) * scalingFactor;\n    }\n    return (value - this.min) * scalingFactor;\n  }\n\n  getValueForDistanceFromCenter(distance) {\n    if (isNullOrUndef(distance)) {\n      return NaN;\n    }\n\n    const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n    return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n  }\n\n  getPointLabelContext(index) {\n    const pointLabels = this._pointLabels || [];\n\n    if (index >= 0 && index < pointLabels.length) {\n      const pointLabel = pointLabels[index];\n      return createPointLabelContext(this.getContext(), index, pointLabel);\n    }\n  }\n\n  getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n    const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n    return {\n      x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n      angle\n    };\n  }\n\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n\n  getPointLabelPosition(index) {\n    const {left, top, right, bottom} = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom,\n    };\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBackground() {\n    const {backgroundColor, grid: {circular}} = this.options;\n    if (backgroundColor) {\n      const ctx = this.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawGrid() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const {angleLines, grid, border} = opts;\n    const labelCount = this._pointLabels.length;\n\n    let i, offset, position;\n\n    if (opts.pointLabels.display) {\n      drawPointLabels(this, labelCount);\n    }\n\n    if (grid.display) {\n      this.ticks.forEach((tick, index) => {\n        if (index !== 0) {\n          offset = this.getDistanceFromCenterForValue(tick.value);\n          const context = this.getContext(index);\n          const optsAtIndex = grid.setContext(context);\n          const optsAtIndexBorder = border.setContext(context);\n\n          drawRadiusLine(this, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n        }\n      });\n    }\n\n    if (angleLines.display) {\n      ctx.save();\n\n      for (i = labelCount - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n        const {color, lineWidth} = optsAtIndex;\n\n        if (!lineWidth || !color) {\n          continue;\n        }\n\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n\n        offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\n        position = this.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(this.xCenter, this.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBorder() {}\n\n  /**\n\t * @protected\n\t */\n  drawLabels() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n\n    if (!tickOpts.display) {\n      return;\n    }\n\n    const startAngle = this.getIndexAngle(0);\n    let offset, width;\n\n    ctx.save();\n    ctx.translate(this.xCenter, this.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n\n    this.ticks.forEach((tick, index) => {\n      if (index === 0 && !opts.reverse) {\n        return;\n      }\n\n      const optsAtIndex = tickOpts.setContext(this.getContext(index));\n      const tickFont = toFont(optsAtIndex.font);\n      offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n\n      if (optsAtIndex.showLabelBackdrop) {\n        ctx.font = tickFont.string;\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillRect(\n          -width / 2 - padding.left,\n          -offset - tickFont.size / 2 - padding.top,\n          width + padding.width,\n          tickFont.size + padding.height\n        );\n      }\n\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color,\n      });\n    });\n\n    ctx.restore();\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {}\n}\n","import adapters from '../core/core.adapters';\nimport {callback as call, isFinite, isNullOrUndef, mergeIf, valueOrDefault} from '../helpers/helpers.core';\nimport {toRadians, isNumber, _limitValue} from '../helpers/helpers.math';\nimport Scale from '../core/core.scale';\nimport {_arrayUnique, _filterBetween, _lookup} from '../helpers/helpers.collection';\n\n/**\n * @typedef { import(\"../core/core.adapters\").TimeUnit } Unit\n * @typedef {{common: boolean, size: number, steps?: number}} Interval\n * @typedef { import(\"../core/core.adapters\").DateAdapter } DateAdapter\n */\n\n/**\n * @type {Object<Unit, Interval>}\n */\nconst INTERVALS = {\n  millisecond: {common: true, size: 1, steps: 1000},\n  second: {common: true, size: 1000, steps: 60},\n  minute: {common: true, size: 60000, steps: 60},\n  hour: {common: true, size: 3600000, steps: 24},\n  day: {common: true, size: 86400000, steps: 30},\n  week: {common: false, size: 604800000, steps: 4},\n  month: {common: true, size: 2.628e9, steps: 12},\n  quarter: {common: false, size: 7.884e9, steps: 4},\n  year: {common: true, size: 3.154e10}\n};\n\n/**\n * @type {Unit[]}\n */\nconst UNITS = /** @type Unit[] */ /* #__PURE__ */ (Object.keys(INTERVALS));\n\n/**\n * @param {number} a\n * @param {number} b\n */\nfunction sorter(a, b) {\n  return a - b;\n}\n\n/**\n * @param {TimeScale} scale\n * @param {*} input\n * @return {number}\n */\nfunction parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n\n  const adapter = scale._adapter;\n  const {parser, round, isoWeekday} = scale._parseOpts;\n  let value = input;\n\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n\n  // Only parse if its not a timestamp already\n  if (!isFinite(value)) {\n    value = typeof parser === 'string'\n      ? adapter.parse(value, /** @type {Unit} */ (parser))\n      : adapter.parse(value);\n  }\n\n  if (value === null) {\n    return null;\n  }\n\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true)\n      ? adapter.startOf(value, 'isoWeek', isoWeekday)\n      : adapter.startOf(value, round);\n  }\n\n  return +value;\n}\n\n/**\n * Figures out what unit results in an appropriate number of auto-generated ticks\n * @param {Unit} minUnit\n * @param {number} min\n * @param {number} max\n * @param {number} capacity\n * @return {object}\n */\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const ilen = UNITS.length;\n\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const interval = INTERVALS[UNITS[i]];\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n\n  return UNITS[ilen - 1];\n}\n\n/**\n * Figures out what unit to format a set of ticks with\n * @param {TimeScale} scale\n * @param {number} numTicks\n * @param {Unit} minUnit\n * @param {number} min\n * @param {number} max\n * @return {Unit}\n */\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    const unit = UNITS[i];\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n\n/**\n * @param {Unit} unit\n * @return {object}\n */\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\n\n/**\n * @param {object} ticks\n * @param {number} time\n * @param {number[]} [timestamps] - if defined, snap to these timestamps\n */\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {lo, hi} = _lookup(timestamps, time);\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\n\n/**\n * @param {TimeScale} scale\n * @param {object[]} ticks\n * @param {object} map\n * @param {Unit} majorUnit\n * @return {object[]}\n */\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  const adapter = scale._adapter;\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\n  const last = ticks[ticks.length - 1].value;\n  let major, index;\n\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n  return ticks;\n}\n\n/**\n * @param {TimeScale} scale\n * @param {number[]} values\n * @param {Unit|undefined} [majorUnit]\n * @return {object[]}\n */\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  const ticks = [];\n  /** @type {Object<number,object>} */\n  const map = {};\n  const ilen = values.length;\n  let i, value;\n\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n\n    ticks.push({\n      value,\n      major: false\n    });\n  }\n\n  // We set the major ticks separately from the above loop because calling startOf for every tick\n  // is expensive when there is a large number of ticks\n  return (ilen === 0 || !majorUnit) ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\n\nexport default class TimeScale extends Scale {\n\n  static id = 'time';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 2.7.0\n     */\n    bounds: 'data',\n\n    adapters: {},\n    time: {\n      parser: false, // false == a pattern string from or a custom callback that converts its argument to a timestamp\n      unit: false, // false == automatic or override with week, month, year, etc.\n      round: false, // none, or override with week, month, year, etc.\n      isoWeekday: false, // override week start day\n      minUnit: 'millisecond',\n      displayFormats: {}\n    },\n    ticks: {\n      /**\n       * Ticks generation input values:\n       * - 'auto': generates \"optimal\" ticks based on scale size and time options.\n       * - 'data': generates ticks from data (including labels from data {t|x|y} objects).\n       * - 'labels': generates ticks from user given `data.labels` values ONLY.\n       * @see https://github.com/chartjs/Chart.js/pull/4507\n       * @since 2.7.0\n       */\n      source: 'auto',\n\n      callback: false,\n\n      major: {\n        enabled: false\n      }\n    }\n  };\n\n  /**\n\t * @param {object} props\n\t */\n  constructor(props) {\n    super(props);\n\n    /** @type {{data: number[], labels: number[], all: number[]}} */\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n\n    /** @type {Unit} */\n    this._unit = 'day';\n    /** @type {Unit=} */\n    this._majorUnit = undefined;\n    this._offsets = {};\n    this._normalized = false;\n    this._parseOpts = undefined;\n  }\n\n  init(scaleOpts, opts = {}) {\n    const time = scaleOpts.time || (scaleOpts.time = {});\n    /** @type {DateAdapter} */\n    const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n\n    adapter.init(opts);\n\n    // Backward compatibility: before introducing adapter, `displayFormats` was\n    // supposed to contain *all* unit/string pairs but this can't be resolved\n    // when loading the scale (adapters are loaded afterward), so let's populate\n    // missing formats on update\n    mergeIf(time.displayFormats, adapter.formats());\n\n    this._parseOpts = {\n      parser: time.parser,\n      round: time.round,\n      isoWeekday: time.isoWeekday\n    };\n\n    super.init(scaleOpts);\n\n    this._normalized = opts.normalized;\n  }\n\n  /**\n\t * @param {*} raw\n\t * @param {number?} [index]\n\t * @return {number}\n\t */\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    if (raw === undefined) {\n      return null;\n    }\n    return parse(this, raw);\n  }\n\n  beforeLayout() {\n    super.beforeLayout();\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n\n  determineDataLimits() {\n    const options = this.options;\n    const adapter = this._adapter;\n    const unit = options.time.unit || 'day';\n    // eslint-disable-next-line prefer-const\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n\n    /**\n\t\t * @param {object} bounds\n\t\t */\n    function _applyBounds(bounds) {\n      if (!minDefined && !isNaN(bounds.min)) {\n        min = Math.min(min, bounds.min);\n      }\n      if (!maxDefined && !isNaN(bounds.max)) {\n        max = Math.max(max, bounds.max);\n      }\n    }\n\n    // If we have user provided `min` and `max` labels / data bounds can be ignored\n    if (!minDefined || !maxDefined) {\n      // Labels are always considered, when user did not force bounds\n      _applyBounds(this._getLabelBounds());\n\n      // If `bounds` is `'ticks'` and `ticks.source` is `'labels'`,\n      // data bounds are ignored (and don't need to be determined)\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n        _applyBounds(this.getMinMax(false));\n      }\n    }\n\n    min = isFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = isFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n\n    // Make sure that max is strictly higher than min (required by the timeseries lookup table)\n    this.min = Math.min(min, max - 1);\n    this.max = Math.max(min + 1, max);\n  }\n\n  /**\n\t * @private\n\t */\n  _getLabelBounds() {\n    const arr = this.getLabelTimestamps();\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n\n    if (arr.length) {\n      min = arr[0];\n      max = arr[arr.length - 1];\n    }\n    return {min, max};\n  }\n\n  /**\n\t * @return {object[]}\n\t */\n  buildTicks() {\n    const options = this.options;\n    const timeOpts = options.time;\n    const tickOpts = options.ticks;\n    const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n\n    if (options.bounds === 'ticks' && timestamps.length) {\n      this.min = this._userMin || timestamps[0];\n      this.max = this._userMax || timestamps[timestamps.length - 1];\n    }\n\n    const min = this.min;\n    const max = this.max;\n\n    const ticks = _filterBetween(timestamps, min, max);\n\n    // PRIVATE\n    // determineUnitForFormatting relies on the number of ticks so we don't use it when\n    // autoSkip is enabled because we don't yet know what the final number of ticks will be\n    this._unit = timeOpts.unit || (tickOpts.autoSkip\n      ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min))\n      : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n    this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined\n      : determineMajorUnit(this._unit);\n    this.initOffsets(timestamps);\n\n    if (options.reverse) {\n      ticks.reverse();\n    }\n\n    return ticksFromTimestamps(this, ticks, this._majorUnit);\n  }\n\n  afterAutoSkip() {\n    // Offsets for bar charts need to be handled with the auto skipped\n    // ticks. Once ticks have been skipped, we re-compute the offsets.\n    if (this.options.offsetAfterAutoskip) {\n      this.initOffsets(this.ticks.map(tick => +tick.value));\n    }\n  }\n\n  /**\n\t * Returns the start and end offsets from edges in the form of {start, end}\n\t * where each value is a relative width to the scale and ranges between 0 and 1.\n\t * They add extra margins on the both sides by scaling down the original scale.\n\t * Offsets are added when the `offset` option is true.\n\t * @param {number[]} timestamps\n\t * @protected\n\t */\n  initOffsets(timestamps = []) {\n    let start = 0;\n    let end = 0;\n    let first, last;\n\n    if (this.options.offset && timestamps.length) {\n      first = this.getDecimalForValue(timestamps[0]);\n      if (timestamps.length === 1) {\n        start = 1 - first;\n      } else {\n        start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n      }\n      last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n      if (timestamps.length === 1) {\n        end = last;\n      } else {\n        end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n      }\n    }\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\n    start = _limitValue(start, 0, limit);\n    end = _limitValue(end, 0, limit);\n\n    this._offsets = {start, end, factor: 1 / (start + 1 + end)};\n  }\n\n  /**\n\t * Generates a maximum of `capacity` timestamps between min and max, rounded to the\n\t * `minor` unit using the given scale time `options`.\n\t * Important: this method can return ticks outside the min and max range, it's the\n\t * responsibility of the calling code to clamp values if needed.\n\t * @private\n\t */\n  _generate() {\n    const adapter = this._adapter;\n    const min = this.min;\n    const max = this.max;\n    const options = this.options;\n    const timeOpts = options.time;\n    // @ts-ignore\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n    const stepSize = valueOrDefault(options.ticks.stepSize, 1);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const hasWeekday = isNumber(weekday) || weekday === true;\n    const ticks = {};\n    let first = min;\n    let time, count;\n\n    // For 'week' unit, handle the first day of week option\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n\n    // Align first ticks on unit\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n\n    // Prevent browser from freezing in case user options request millions of milliseconds\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n\n    const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n\n    if (time === max || options.bounds === 'ticks' || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n\n    // @ts-ignore\n    return Object.keys(ticks).sort((a, b) => a - b).map(x => +x);\n  }\n\n  /**\n\t * @param {number} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    const adapter = this._adapter;\n    const timeOpts = this.options.time;\n\n    if (timeOpts.tooltipFormat) {\n      return adapter.format(value, timeOpts.tooltipFormat);\n    }\n    return adapter.format(value, timeOpts.displayFormats.datetime);\n  }\n\n  /**\n\t * Function to format an individual tick mark\n\t * @param {number} time\n\t * @param {number} index\n\t * @param {object[]} ticks\n\t * @param {string|undefined} [format]\n\t * @return {string}\n\t * @private\n\t */\n  _tickFormatFunction(time, index, ticks, format) {\n    const options = this.options;\n    const formatter = options.ticks.callback;\n\n    if (formatter) {\n      return call(formatter, [time, index, ticks], this);\n    }\n\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const majorUnit = this._majorUnit;\n    const minorFormat = unit && formats[unit];\n    const majorFormat = majorUnit && formats[majorUnit];\n    const tick = ticks[index];\n    const major = majorUnit && majorFormat && tick && tick.major;\n\n    return this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n  }\n\n  /**\n\t * @param {object[]} ticks\n\t */\n  generateTickLabels(ticks) {\n    let i, ilen, tick;\n\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\n    }\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getDecimalForValue(value) {\n    return value === null ? NaN : (value - this.min) / (this.max - this.min);\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getPixelForValue(value) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForValue(value);\n    return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return this.min + pos * (this.max - this.min);\n  }\n\n  /**\n\t * @param {string} label\n\t * @return {{w:number, h:number}}\n\t * @private\n\t */\n  _getLabelSize(label) {\n    const ticksOpts = this.options.ticks;\n    const tickLabelWidth = this.ctx.measureText(label).width;\n    const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n    const cosRotation = Math.cos(angle);\n    const sinRotation = Math.sin(angle);\n    const tickFontSize = this._resolveTickFontOptions(0).size;\n\n    return {\n      w: (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation),\n      h: (tickLabelWidth * sinRotation) + (tickFontSize * cosRotation)\n    };\n  }\n\n  /**\n\t * @param {number} exampleTime\n\t * @return {number}\n\t * @private\n\t */\n  _getLabelCapacity(exampleTime) {\n    const timeOpts = this.options.time;\n    const displayFormats = timeOpts.displayFormats;\n\n    // pick the longest format (milliseconds) for guestimation\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n    const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [exampleTime], this._majorUnit), format);\n    const size = this._getLabelSize(exampleLabel);\n    // subtract 1 - if offset then there's one less label than tick\n    // if not offset then one half label padding is added to each end leaving room for one less label\n    const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n    return capacity > 0 ? capacity : 1;\n  }\n\n  /**\n\t * @protected\n\t */\n  getDataTimestamps() {\n    let timestamps = this._cache.data || [];\n    let i, ilen;\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const metas = this.getMatchingVisibleMetas();\n\n    if (this._normalized && metas.length) {\n      return (this._cache.data = metas[0].controller.getAllParsedValues(this));\n    }\n\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n    }\n\n    return (this._cache.data = this.normalize(timestamps));\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelTimestamps() {\n    const timestamps = this._cache.labels || [];\n    let i, ilen;\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const labels = this.getLabels();\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      timestamps.push(parse(this, labels[i]));\n    }\n\n    return (this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps));\n  }\n\n  /**\n\t * @param {number[]} values\n\t * @protected\n\t */\n  normalize(values) {\n    // It seems to be somewhat faster to do sorting first\n    return _arrayUnique(values.sort(sorter));\n  }\n}\n","import TimeScale from './scale.time';\nimport {_lookupByKey} from '../helpers/helpers.collection';\n\n/**\n * Linearly interpolates the given source `val` using the table. If value is out of bounds, values\n * at edges are used for the interpolation.\n * @param {object} table\n * @param {number} val\n * @param {boolean} [reverse] lookup time based on position instead of vice versa\n * @return {object}\n */\nfunction interpolate(table, val, reverse) {\n  let lo = 0;\n  let hi = table.length - 1;\n  let prevSource, nextSource, prevTarget, nextTarget;\n  if (reverse) {\n    if (val >= table[lo].pos && val <= table[hi].pos) {\n      ({lo, hi} = _lookupByKey(table, 'pos', val));\n    }\n    ({pos: prevSource, time: prevTarget} = table[lo]);\n    ({pos: nextSource, time: nextTarget} = table[hi]);\n  } else {\n    if (val >= table[lo].time && val <= table[hi].time) {\n      ({lo, hi} = _lookupByKey(table, 'time', val));\n    }\n    ({time: prevSource, pos: prevTarget} = table[lo]);\n    ({time: nextSource, pos: nextTarget} = table[hi]);\n  }\n\n  const span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\n\nclass TimeSeriesScale extends TimeScale {\n\n  static id = 'timeseries';\n\n  /**\n   * @type {any}\n   */\n  static defaults = TimeScale.defaults;\n\n  /**\n\t * @param {object} props\n\t */\n  constructor(props) {\n    super(props);\n\n    /** @type {object[]} */\n    this._table = [];\n    /** @type {number} */\n    this._minPos = undefined;\n    /** @type {number} */\n    this._tableRange = undefined;\n  }\n\n  /**\n\t * @protected\n\t */\n  initOffsets() {\n    const timestamps = this._getTimestampsForTable();\n    const table = this._table = this.buildLookupTable(timestamps);\n    this._minPos = interpolate(table, this.min);\n    this._tableRange = interpolate(table, this.max) - this._minPos;\n    super.initOffsets(timestamps);\n  }\n\n  /**\n\t * Returns an array of {time, pos} objects used to interpolate a specific `time` or position\n\t * (`pos`) on the scale, by searching entries before and after the requested value. `pos` is\n\t * a decimal between 0 and 1: 0 being the start of the scale (left or top) and 1 the other\n\t * extremity (left + width or top + height). Note that it would be more optimized to directly\n\t * store pre-computed pixels, but the scale dimensions are not guaranteed at the time we need\n\t * to create the lookup table. The table ALWAYS contains at least two items: min and max.\n\t * @param {number[]} timestamps\n\t * @return {object[]}\n\t * @protected\n\t */\n  buildLookupTable(timestamps) {\n    const {min, max} = this;\n    const items = [];\n    const table = [];\n    let i, ilen, prev, curr, next;\n\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n      if (curr >= min && curr <= max) {\n        items.push(curr);\n      }\n    }\n\n    if (items.length < 2) {\n      // In case there is less that 2 timestamps between min and max, the scale is defined by min and max\n      return [\n        {time: min, pos: 0},\n        {time: max, pos: 1}\n      ];\n    }\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      next = items[i + 1];\n      prev = items[i - 1];\n      curr = items[i];\n\n      // only add points that breaks the scale linearity\n      if (Math.round((next + prev) / 2) !== curr) {\n        table.push({time: curr, pos: i / (ilen - 1)});\n      }\n    }\n    return table;\n  }\n\n  /**\n\t * Returns all timestamps\n\t * @return {number[]}\n\t * @private\n\t */\n  _getTimestampsForTable() {\n    let timestamps = this._cache.all || [];\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const data = this.getDataTimestamps();\n    const label = this.getLabelTimestamps();\n    if (data.length && label.length) {\n      // If combining labels and data (data might not contain all labels),\n      // we need to recheck uniqueness and sort\n      timestamps = this.normalize(data.concat(label));\n    } else {\n      timestamps = data.length ? data : label;\n    }\n    timestamps = this._cache.all = timestamps;\n\n    return timestamps;\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getDecimalForValue(value) {\n    return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n  }\n}\n\nexport default TimeSeriesScale;\n","export * from './controllers';\nexport * from './core';\nexport * from './elements';\nexport * from './platform';\nexport * from './plugins';\nexport * from './scales';\n\nimport * as controllers from './controllers';\nimport * as elements from './elements';\nimport * as plugins from './plugins';\nimport * as scales from './scales';\n\nexport {\n  controllers,\n  elements,\n  plugins,\n  scales,\n};\n\nexport const registerables = [\n  controllers,\n  elements,\n  plugins,\n  scales,\n];\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}