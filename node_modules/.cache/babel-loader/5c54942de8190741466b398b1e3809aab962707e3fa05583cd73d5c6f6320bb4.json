{"ast":null,"code":"import _slicedToArray from\"C:/Users/nagam/Documents/GitHub/wms_client/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useState}from\"react\";import{useParams}from\"react-router-dom\";import\"./css/Master.css\";import{InputForm,myFunction}from\"./InputForm\";import{jsx as _jsx}from\"react/jsx-runtime\";var Master=function Master(props){var TableQuery={recipe:{query:\"select p.recipe_id,p.produk_id,p.material_id,pr.deskripsi produk,no,m.deskripsi material,spec from recipe p left join produk pr on p.produk_id=pr.produk_id left join material m on p.material_id=m.material_id order by pr.deskripsi,p.no\"},penimbangan_to:{query:\"select p.*,pr.deskripsi produk,op.deskripsi operator,g.deskripsi grup from penimbangan_to p left join produk pr on p.produk_id=pr.produk_id left join grup g on p.grup_id=g.grup_id left join operator op on p.operator_id=op.operator_id\",detailquery:{config:[\"bisa_tambah\"],fieldname:\"produk\",query:\"select deskripsi material,spec,''actual,''lot_no from recipe p left join material m on p.material_id=m.material_id where p.produk_id=@ID order by no\",textbox:[\"material\",\"spec\",\"actual\",\"lot_no\"],pilih:{spec:\"select *,deskripsi lot_no from produk\"}}},planning:{query:\"select pr.deskripsi produk,p.* from planning p left join produk pr on p.produk_id=pr.produk_id\"},material_masuk:{query:\"select * from material_masuk \",detailquery:{fieldname:\"material_masuk_detail\",query:\"select p.material_id,m.deskripsi material,lot_no,value from material_masuk_detail p left join material m on p.material_id=m.material_id where material_masuk_detail_id=@ID\",config:[\"bisa_tambah\"],textbox:[\"material\",\"lot_no\",\"value\"],pilih:{contoh:\"select *,deskripsi lot_no from produk\"}},pilih:{contoh:\"select * from contoh\"}}};var ServerAddr=\"https://npeserver.herokuapp.com/\";var defTable={col:[{name:\"empty\"}],val:[{empty:\"\"}]};var _useState=useState({empty:\"\"}),_useState2=_slicedToArray(_useState,2),inputOut=_useState2[0],setInputOut=_useState2[1];var _useState3=useState(0),_useState4=_slicedToArray(_useState3,2),ShowDetail=_useState4[0],setShowDetail=_useState4[1];var _useState5=useState(defTable),_useState6=_slicedToArray(_useState5,2),Table_data=_useState6[0],setTable_Data=_useState6[1];var _useState7=useState(0),_useState8=_slicedToArray(_useState7,2),nilai=_useState8[0],setNilai=_useState8[1];var _useState9=useState(defTable),_useState10=_slicedToArray(_useState9,2),Table_detail=_useState10[0],setTable_Detail=_useState10[1];var params=useParams();var selectquery=\"select * from \".concat(params.tipe);var PilihQuery;var detailQuery;if(params.tipe in TableQuery){if(TableQuery[params.tipe].query){selectquery=TableQuery[params.tipe].query;}if(TableQuery[params.tipe].pilih){PilihQuery=TableQuery[params.tipe].pilih;}if(TableQuery[params.tipe].detailquery){detailQuery=TableQuery[params.tipe].detailquery;}}function checkColumnHasID(name,table){var adaID=false;table.col.forEach(function(coldef){if(name+\"_id\"===coldef.name){adaID=true;}});return adaID;}function TriggerRender(){var cnt=0;cnt=nilai+1;setNilai(cnt);}var generateData=function generateData(){fetch(ServerAddr+selectquery).then(function(response){return response.json();}).then(function(data){if(data){if(\"err\"in data){alert(data.err);}else{setTable_Data(data);}}});};if(Table_data.col){if(Table_data.col[0].name===\"empty\"){generateData();}}return/*#__PURE__*/_jsx(\"div\",{className:\"container\",children:/*#__PURE__*/_jsx(InputForm,{ServerAddr:ServerAddr,Table_data:Table_data,setTable_Data:setTable_Data,Table_detail:Table_detail,setTable_Detail:setTable_Detail,ShowDetail:ShowDetail,setShowDetail:setShowDetail,inputOut:inputOut,setInputOut:setInputOut,TriggerRender:TriggerRender,tipe:params.tipe,selectquery:selectquery,checkColumnHasID:checkColumnHasID,PilihQuery:PilihQuery,detailQuery:detailQuery})});};export default Master;","map":{"version":3,"names":["useState","useParams","InputForm","myFunction","Master","props","TableQuery","recipe","query","penimbangan_to","detailquery","config","fieldname","textbox","pilih","spec","planning","material_masuk","contoh","ServerAddr","defTable","col","name","val","empty","inputOut","setInputOut","ShowDetail","setShowDetail","Table_data","setTable_Data","nilai","setNilai","Table_detail","setTable_Detail","params","selectquery","tipe","PilihQuery","detailQuery","checkColumnHasID","table","adaID","forEach","coldef","TriggerRender","cnt","generateData","fetch","then","response","json","data","alert","err"],"sources":["C:/Users/nagam/Documents/GitHub/wms_client/src/components/Master.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport \"./css/Master.css\";\r\n\r\nimport { InputForm, myFunction } from \"./InputForm\";\r\n\r\nconst Master = (props) => {\r\n  const TableQuery = {\r\n    recipe: {\r\n      query:\r\n        \"select p.recipe_id,p.produk_id,p.material_id,pr.deskripsi produk,no,m.deskripsi material,spec from recipe p left join produk pr on p.produk_id=pr.produk_id left join material m on p.material_id=m.material_id order by pr.deskripsi,p.no\",\r\n    },\r\n    penimbangan_to: {\r\n      query:\r\n        \"select p.*,pr.deskripsi produk,op.deskripsi operator,g.deskripsi grup from penimbangan_to p left join produk pr on p.produk_id=pr.produk_id left join grup g on p.grup_id=g.grup_id left join operator op on p.operator_id=op.operator_id\",\r\n      detailquery: {\r\n        config: [\"bisa_tambah\"],\r\n        fieldname: \"produk\",\r\n        query:\r\n          \"select deskripsi material,spec,''actual,''lot_no from recipe p left join material m on p.material_id=m.material_id where p.produk_id=@ID order by no\",\r\n        textbox: [\"material\", \"spec\", \"actual\", \"lot_no\"],\r\n        pilih: {\r\n          spec: \"select *,deskripsi lot_no from produk\",\r\n        },\r\n      },\r\n    },\r\n    planning: {\r\n      query:\r\n        \"select pr.deskripsi produk,p.* from planning p left join produk pr on p.produk_id=pr.produk_id\",\r\n    },\r\n    material_masuk: {\r\n      query: \"select * from material_masuk \",\r\n      detailquery: {\r\n        fieldname: \"material_masuk_detail\",\r\n        query:\r\n          \"select p.material_id,m.deskripsi material,lot_no,value from material_masuk_detail p left join material m on p.material_id=m.material_id where material_masuk_detail_id=@ID\",\r\n        config: [\"bisa_tambah\"],\r\n        textbox: [\"material\", \"lot_no\", \"value\"],\r\n        pilih: {\r\n          contoh: \"select *,deskripsi lot_no from produk\",\r\n        },\r\n      },\r\n      pilih: {\r\n        contoh: \"select * from contoh\",\r\n      },\r\n    },\r\n  };\r\n\r\n  const ServerAddr = \"https://npeserver.herokuapp.com/\";\r\n  const defTable = { col: [{ name: \"empty\" }], val: [{ empty: \"\" }] };\r\n\r\n  const [inputOut, setInputOut] = useState({ empty: \"\" });\r\n  const [ShowDetail, setShowDetail] = useState(0);\r\n  const [Table_data, setTable_Data] = useState(defTable);\r\n  const [nilai, setNilai] = useState(0);\r\n\r\n  const [Table_detail, setTable_Detail] = useState(defTable);\r\n\r\n  const params = useParams();\r\n\r\n  let selectquery = `select * from ${params.tipe}`;\r\n  let PilihQuery;\r\n  let detailQuery;\r\n  if (params.tipe in TableQuery) {\r\n    if (TableQuery[params.tipe].query) {\r\n      selectquery = TableQuery[params.tipe].query;\r\n    }\r\n    if (TableQuery[params.tipe].pilih) {\r\n      PilihQuery = TableQuery[params.tipe].pilih;\r\n    }\r\n    if (TableQuery[params.tipe].detailquery) {\r\n      detailQuery = TableQuery[params.tipe].detailquery;\r\n    }\r\n  }\r\n\r\n  function checkColumnHasID(name, table) {\r\n    var adaID = false;\r\n    table.col.forEach((coldef) => {\r\n      if (name + \"_id\" === coldef.name) {\r\n        adaID = true;\r\n      }\r\n    });\r\n    return adaID;\r\n  }\r\n\r\n  function TriggerRender() {\r\n    var cnt = 0;\r\n    cnt = nilai + 1;\r\n    setNilai(cnt);\r\n  }\r\n  const generateData = () => {\r\n    fetch(ServerAddr + selectquery)\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        if (data) {\r\n          if (\"err\" in data) {\r\n            alert(data.err);\r\n          } else {\r\n            setTable_Data(data);\r\n          }\r\n        }\r\n      });\r\n  };\r\n  if (Table_data.col) {\r\n    if (Table_data.col[0].name === \"empty\") {\r\n      generateData();\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <InputForm\r\n        ServerAddr={ServerAddr}\r\n        Table_data={Table_data}\r\n        setTable_Data={setTable_Data}\r\n        Table_detail={Table_detail}\r\n        setTable_Detail={setTable_Detail}\r\n        ShowDetail={ShowDetail}\r\n        setShowDetail={setShowDetail}\r\n        inputOut={inputOut}\r\n        setInputOut={setInputOut}\r\n        TriggerRender={TriggerRender}\r\n        tipe={params.tipe}\r\n        selectquery={selectquery}\r\n        checkColumnHasID={checkColumnHasID}\r\n        PilihQuery={PilihQuery}\r\n        detailQuery={detailQuery}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Master;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}